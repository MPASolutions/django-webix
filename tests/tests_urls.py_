#!/usr/bin/env python

from django.core.exceptions import ImproperlyConfigured
from django.test import TestCase
from django.urls import NoReverseMatch

from tests.app_name.models import UrlsModel


class TestUrlsCalls(TestCase):

    def setUp(self):
        self.object = UrlsModel.objects.create(field='Test')

    def test_call_view_create_successurl_post(self):
        response = self.client.post('/urlsmodel/create/successurl', {'field': "Test"})
        self.assertEqual(response.status_code, 302)

    def test_call_view_create_urlcreate_post(self):
        with self.assertRaises(NoReverseMatch):
            self.client.post('/urlsmodel/create/urlcreate', {'field': "Test"})

    def test_call_view_create_urllist_post(self):
        with self.assertRaises(NoReverseMatch):
            self.client.post('/urlsmodel/create/urllist', {'field': "Test"})

    def test_call_view_create_nourl_post(self):
        with self.assertRaises(ImproperlyConfigured):
            self.client.post('/urlsmodel/create/nourl', {'field': "Test"})

    def test_call_view_update_successurl_post(self):
        response = self.client.post('/urlsmodel/update/{pk}/successurl'.format(pk=self.object.pk), {'field': "Test"})
        self.assertEqual(response.status_code, 302)

    def test_call_view_update_urlcreate_post(self):
        with self.assertRaises(NoReverseMatch):
            self.client.post('/urlsmodel/update/{pk}/urlcreate'.format(pk=self.object.pk), {'field': "Test"})

    def test_call_view_update_nourl_post(self):
        with self.assertRaises(ImproperlyConfigured):
            self.client.post('/urlsmodel/update/{pk}/nourl'.format(pk=self.object.pk), {'field': "Test"})

    def test_call_view_delete_successurl_post(self):
        obj = UrlsModel.objects.create(field='Test')
        response = self.client.post('/urlsmodel/delete/{pk}/successurl'.format(pk=obj.pk) )
        self.assertEqual(response.status_code, 302)

    def test_call_view_delete_urldelete_post(self):
        obj = UrlsModel.objects.create(field='Test')
        with self.assertRaises(NoReverseMatch):
            self.client.post('/urlsmodel/delete/{pk}/urllist'.format(pk=obj.pk) )

    def test_call_view_delete_nourl_post(self):
        obj = UrlsModel.objects.create(field='Test')
        with self.assertRaises(ImproperlyConfigured):
            self.client.post('/urlsmodel/delete/{pk}/nourl'.format(pk=obj.pk) )
