{"version":3,"sources":["../scripts/header.js","../node_modules/browser-pack-flat/_prelude","../@interactjs/core/scope.ts","../@interactjs/core/interactions.ts","../@interactjs/core/Interaction.ts","../@interactjs/utils/domObjects.ts","../@interactjs/utils/arr.ts","../@interactjs/utils/isWindow.ts","../@interactjs/utils/window.ts","../@interactjs/utils/is.ts","../@interactjs/utils/browser.ts","../@interactjs/utils/domUtils.ts","../@interactjs/utils/hypot.ts","../@interactjs/utils/pointerExtend.ts","../@interactjs/utils/pointerUtils.ts","../@interactjs/utils/extend.ts","../@interactjs/utils/rect.ts","../@interactjs/utils/clone.ts","../@interactjs/utils/events.ts","../@interactjs/utils/getOriginXY.ts","../@interactjs/utils/normalizeListeners.ts","../@interactjs/utils/raf.ts","../@interactjs/utils/index.ts","../@interactjs/core/defaultOptions.ts","../@interactjs/core/Eventable.ts","../@interactjs/core/Interactable.ts","../@interactjs/core/InteractableSet.ts","../@interactjs/core/BaseEvent.ts","../@interactjs/core/InteractEvent.ts","../@interactjs/core/PointerInfo.ts","../@interactjs/core/interactionFinder.ts","../@interactjs/actions/drag.ts","../@interactjs/actions/drop/DropEvent.ts","../@interactjs/actions/drop/index.ts","../@interactjs/actions/gesture.ts","../@interactjs/actions/resize.ts","../@interactjs/actions/index.ts","../@interactjs/auto-scroll/index.ts","../@interactjs/auto-start/InteractableMethods.ts","../@interactjs/auto-start/base.ts","../@interactjs/auto-start/dragAxis.ts","../@interactjs/auto-start/hold.ts","../@interactjs/auto-start/index.ts","../@interactjs/core/interactablePreventDefault.ts","../@interactjs/dev-tools/index.ts","../@interactjs/modifiers/base.ts","../@interactjs/inertia/index.ts","../@interactjs/modifiers/restrict/pointer.ts","../@interactjs/modifiers/restrict/edges.ts","../@interactjs/modifiers/restrict/rect.ts","../@interactjs/modifiers/restrict/size.ts","../@interactjs/modifiers/snap/pointer.ts","../@interactjs/modifiers/snap/size.ts","../@interactjs/modifiers/snap/edges.ts","../@interactjs/modifiers/index.ts","../@interactjs/pointer-events/PointerEvent.ts","../@interactjs/pointer-events/base.ts","../@interactjs/pointer-events/holdRepeat.ts","../@interactjs/pointer-events/interactableTargets.ts","../@interactjs/pointer-events/index.ts","../@interactjs/reflow/index.ts","../@interactjs/interact/interact.ts","../@interactjs/interact/index.ts","../@interactjs/types/index.ts","../@interactjs/utils/snappers/grid.ts","../@interactjs/utils/snappers/index.ts","../@interactjs/interactjs/index.ts","index.ts","../node_modules/browser-pack-flat/_postlude"],"names":[],"mappings":"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","file":"interact.js","sourceRoot":"","sourcesContent":["/**\n * interact.js 1.7.3\n *\n * Copyright (c) 2012-2019 Taye Adeyemi <dev@taye.me>\n * Released under the MIT License.\n * https://raw.github.com/taye/interact.js/master/LICENSE\n */\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.interact = f()}})(function(){var define,module,exports;\nvar createModuleFactory = function createModuleFactory(t){var e;return function(r){return e||t(e={exports:{},parent:r},e.exports),e.exports}};\n","import domObjects from '../utils/domObjects'\nimport * as utils from '../utils/index'\nimport defaults from './defaultOptions'\nimport Eventable from './Eventable'\nimport InteractableBase from './Interactable'\nimport InteractableSet from './InteractableSet'\nimport InteractEvent from './InteractEvent'\nimport interactions from './interactions'\n\nexport interface SignalArgs {\n  'scope:add-document': DocSignalArg\n  'scope:remove-document': DocSignalArg\n  'interactable:unset': { interactable: InteractableBase }\n  'interactable:set': { interactable: InteractableBase, options: Interact.Options }\n  'interactions:destroy': { interaction: Interact.Interaction }\n}\n\nexport type ListenerName = keyof SignalArgs\n\ntype ListenerMap = {\n  [P in ListenerName]?: (arg: SignalArgs[P], scope: Scope, signalName: P) => void | boolean\n}\n\ninterface DocSignalArg {\n  doc: Document\n  window: Window\n  scope: Scope\n  options?: { [index: string]: any }\n}\n\nconst {\n  win,\n  browser,\n  raf,\n  events,\n} = utils\n\nexport enum ActionName {\n}\n\nexport interface Actions {\n  names: ActionName[]\n  methodDict: { [key: string]: string }\n  eventTypes: string[]\n}\n\nexport function createScope () {\n  return new Scope()\n}\n\nexport type Defaults = typeof defaults\n\nexport interface Plugin {\n  [key: string]: any\n  id?: string\n  listeners?: ListenerMap\n  before?: string\n  install? (scope: Scope, options?: any): void\n}\n\nexport class Scope {\n  id = `__interact_scope_${Math.floor(Math.random() * 100)}`\n  listenerMaps: Array<{\n    map: ListenerMap\n    id: string\n  }> = []\n\n  browser = browser\n  events = events\n  utils = utils\n  defaults: Defaults = utils.clone(defaults) as Defaults\n  Eventable = Eventable\n  actions: Actions = {\n    names: [],\n    methodDict: {},\n    eventTypes: [],\n  }\n\n  InteractEvent = InteractEvent\n  Interactable!: typeof InteractableBase\n  interactables = new InteractableSet(this)\n\n  // main window\n  _win!: Window\n\n  // main document\n  document!: Document\n\n  // main window\n  window!: Window\n\n  // all documents being listened to\n  documents: Array<{ doc: Document, options: any }> = []\n\n  _plugins: {\n    list: Plugin[]\n    map: { [id: string]: Plugin }\n  } = {\n    list: [],\n    map: {},\n  }\n\n  constructor () {\n    const scope = this as Scope\n\n    ;(this as { Interactable: typeof InteractableBase }).Interactable = class Interactable extends InteractableBase implements InteractableBase {\n      get _defaults () { return scope.defaults }\n\n      set (options: Interact.Options) {\n        super.set(options)\n\n        scope.fire('interactable:set', {\n          options,\n          interactable: this,\n        })\n\n        return this\n      }\n\n      unset () {\n        super.unset()\n        for (let i = scope.interactions.list.length - 1; i >= 0; i--) {\n          const interaction = scope.interactions.list[i]\n\n          if (interaction.interactable === this) {\n            interaction.stop()\n            scope.fire('interactions:destroy', { interaction })\n            interaction.destroy()\n\n            if (scope.interactions.list.length > 2) {\n              scope.interactions.list.splice(i, 1)\n            }\n          }\n        }\n\n        scope.fire('interactable:unset', { interactable: this })\n      }\n    }\n  }\n\n  addListeners (map: ListenerMap, id?: string) {\n    this.listenerMaps.push({ id, map })\n  }\n\n  fire<T extends ListenerName> (name: T, arg: SignalArgs[T]): void | false {\n    for (const { map: { [name]: listener } } of this.listenerMaps) {\n      if (!!listener && listener(arg as any, this, name as never) === false) {\n        return false\n      }\n    }\n  }\n\n  onWindowUnload = (event: BeforeUnloadEvent) => this.removeDocument(event.target as Document)\n\n  init (window: Window) {\n    return initScope(this, window)\n  }\n\n  pluginIsInstalled (plugin: Plugin) {\n    return this._plugins.map[plugin.id] || this._plugins.list.indexOf(plugin) !== -1\n  }\n\n  usePlugin (plugin: Plugin, options?: { [key: string]: any }) {\n    if (this.pluginIsInstalled(plugin)) {\n      return this\n    }\n\n    if (plugin.id) { this._plugins.map[plugin.id] = plugin }\n    this._plugins.list.push(plugin)\n\n    if (plugin.install) {\n      plugin.install(this, options)\n    }\n\n    if (plugin.listeners && plugin.before) {\n      let index = 0\n\n      for (; index < this.listenerMaps.length; index++) {\n        const otherId = this.listenerMaps[index].id\n\n        if (otherId === plugin.before) { break }\n      }\n\n      this.listenerMaps.splice(index, 0, { id: plugin.id, map: plugin.listeners })\n    }\n    else if (plugin.listeners) {\n      this.listenerMaps.push({ id: plugin.id, map: plugin.listeners })\n    }\n\n    return this\n  }\n\n  addDocument (doc: Document, options?: any): void | false {\n    // do nothing if document is already known\n    if (this.getDocIndex(doc) !== -1) { return false }\n\n    const window = win.getWindow(doc)\n\n    options = options ? utils.extend({}, options) : {}\n\n    this.documents.push({ doc, options })\n    events.documents.push(doc)\n\n    // don't add an unload event for the main document\n    // so that the page may be cached in browser history\n    if (doc !== this.document) {\n      events.add(window, 'unload', this.onWindowUnload)\n    }\n\n    this.fire('scope:add-document', { doc, window, scope: this, options })\n  }\n\n  removeDocument (doc: Document) {\n    const index = this.getDocIndex(doc)\n\n    const window = win.getWindow(doc)\n    const options = this.documents[index].options\n\n    events.remove(window, 'unload', this.onWindowUnload)\n\n    this.documents.splice(index, 1)\n    events.documents.splice(index, 1)\n\n    this.fire('scope:remove-document', { doc, window, scope: this, options })\n  }\n\n  getDocIndex (doc: Document) {\n    for (let i = 0; i < this.documents.length; i++) {\n      if (this.documents[i].doc === doc) {\n        return i\n      }\n    }\n\n    return -1\n  }\n\n  getDocOptions (doc: Document) {\n    const docIndex = this.getDocIndex(doc)\n\n    return docIndex === -1 ? null : this.documents[docIndex].options\n  }\n\n  now () {\n    return ((this.window as any).Date as typeof Date || Date).now()\n  }\n}\n\nexport function initScope (scope: Scope, window: Window) {\n  win.init(window)\n  domObjects.init(window)\n  browser.init(window)\n  raf.init(window)\n  events.init(window)\n\n  scope.usePlugin(interactions)\n  scope.document = window.document\n  scope.window = window\n\n  return scope\n}\n","import browser from '../utils/browser'\nimport domObjects from '../utils/domObjects'\nimport { nodeContains } from '../utils/domUtils'\nimport events from '../utils/events'\nimport * as pointerUtils from '../utils/pointerUtils'\nimport InteractionBase from './Interaction'\nimport finder, { SearchDetails } from './interactionFinder'\nimport { Scope } from './scope'\n\ndeclare module '../core/scope' {\n  interface Scope {\n    Interaction: typeof InteractionBase\n    interactions: {\n      new: (options: any) => InteractionBase\n      list: InteractionBase[]\n      listeners: { [type: string]: Interact.Listener }\n      docEvents: Array<{ type: string, listener: Interact.Listener }>\n      pointerMoveTolerance: number\n    }\n    prevTouchTime: number\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface SignalArgs {\n    'interactions:find': {\n      interaction: InteractionBase\n      searchDetails: SearchDetails\n    }\n  }\n}\n\nconst methodNames = [\n  'pointerDown', 'pointerMove', 'pointerUp',\n  'updatePointer', 'removePointer', 'windowBlur',\n]\n\nfunction install (scope: Scope) {\n  const listeners = {} as any\n\n  for (const method of methodNames) {\n    listeners[method] = doOnInteractions(method, scope)\n  }\n\n  const pEventTypes = browser.pEventTypes\n  let docEvents: typeof scope.interactions.docEvents\n\n  if (domObjects.PointerEvent) {\n    docEvents = [\n      { type: pEventTypes.down,   listener: releasePointersOnRemovedEls },\n      { type: pEventTypes.down,   listener: listeners.pointerDown },\n      { type: pEventTypes.move,   listener: listeners.pointerMove },\n      { type: pEventTypes.up,     listener: listeners.pointerUp },\n      { type: pEventTypes.cancel, listener: listeners.pointerUp },\n    ]\n  }\n  else {\n    docEvents = [\n      { type: 'mousedown', listener: listeners.pointerDown },\n      { type: 'mousemove', listener: listeners.pointerMove },\n      { type: 'mouseup', listener: listeners.pointerUp },\n\n      { type: 'touchstart', listener: releasePointersOnRemovedEls },\n      { type: 'touchstart', listener: listeners.pointerDown },\n      { type: 'touchmove', listener: listeners.pointerMove },\n      { type: 'touchend', listener: listeners.pointerUp },\n      { type: 'touchcancel', listener: listeners.pointerUp },\n    ]\n  }\n\n  docEvents.push({\n    type: 'blur',\n    listener (event) {\n      for (const interaction of scope.interactions.list) {\n        interaction.documentBlur(event)\n      }\n    },\n  })\n\n  // for ignoring browser's simulated mouse events\n  scope.prevTouchTime = 0\n\n  scope.Interaction = class Interaction extends InteractionBase {\n    get pointerMoveTolerance () {\n      return scope.interactions.pointerMoveTolerance\n    }\n\n    set pointerMoveTolerance (value) {\n      scope.interactions.pointerMoveTolerance = value\n    }\n\n    _now () { return scope.now() }\n  }\n\n  scope.interactions = {\n    // all active and idle interactions\n    list: [],\n    new (options: { pointerType?: string, scopeFire?: Scope['fire'] }) {\n      options.scopeFire = (name, arg) => scope.fire(name, arg)\n\n      const interaction = new scope.Interaction(options as Required<typeof options>)\n\n      scope.interactions.list.push(interaction)\n      return interaction\n    },\n    listeners,\n    docEvents,\n    pointerMoveTolerance: 1,\n  }\n\n  function releasePointersOnRemovedEls () {\n    // for all inactive touch interactions with pointers down\n    for (const interaction of scope.interactions.list) {\n      if (!interaction.pointerIsDown ||\n        interaction.pointerType !== 'touch' ||\n        interaction._interacting) {\n        continue\n      }\n\n      // if a pointer is down on an element that is no longer in the DOM tree\n      for (const pointer of interaction.pointers) {\n        if (!scope.documents.some(({ doc }) => nodeContains(doc, pointer.downTarget))) {\n          // remove the pointer from the interaction\n          interaction.removePointer(pointer.pointer, pointer.event)\n        }\n      }\n    }\n  }\n}\n\nfunction doOnInteractions (method, scope) {\n  return function (event) {\n    const interactions = scope.interactions.list\n\n    const pointerType = pointerUtils.getPointerType(event)\n    const [eventTarget, curEventTarget] = pointerUtils.getEventTargets(event)\n    const matches = [] // [ [pointer, interaction], ...]\n\n    if (/^touch/.test(event.type)) {\n      scope.prevTouchTime = scope.now()\n\n      for (const changedTouch of event.changedTouches) {\n        const pointer = changedTouch\n        const pointerId = pointerUtils.getPointerId(pointer)\n        const searchDetails: SearchDetails = {\n          pointer,\n          pointerId,\n          pointerType,\n          eventType: event.type,\n          eventTarget,\n          curEventTarget,\n          scope,\n        }\n        const interaction = getInteraction(searchDetails)\n\n        matches.push([\n          searchDetails.pointer,\n          searchDetails.eventTarget,\n          searchDetails.curEventTarget,\n          interaction,\n        ])\n      }\n    }\n    else {\n      let invalidPointer = false\n\n      if (!browser.supportsPointerEvent && /mouse/.test(event.type)) {\n        // ignore mouse events while touch interactions are active\n        for (let i = 0; i < interactions.length && !invalidPointer; i++) {\n          invalidPointer = interactions[i].pointerType !== 'mouse' && interactions[i].pointerIsDown\n        }\n\n        // try to ignore mouse events that are simulated by the browser\n        // after a touch event\n        invalidPointer = invalidPointer ||\n          (scope.now() - scope.prevTouchTime < 500) ||\n          // on iOS and Firefox Mobile, MouseEvent.timeStamp is zero if simulated\n          event.timeStamp === 0\n      }\n\n      if (!invalidPointer) {\n        const searchDetails = {\n          pointer: event,\n          pointerId: pointerUtils.getPointerId(event),\n          pointerType,\n          eventType: event.type,\n          curEventTarget,\n          eventTarget,\n          scope,\n        }\n\n        const interaction = getInteraction(searchDetails)\n\n        matches.push([\n          searchDetails.pointer,\n          searchDetails.eventTarget,\n          searchDetails.curEventTarget,\n          interaction,\n        ])\n      }\n    }\n\n    // eslint-disable-next-line no-shadow\n    for (const [pointer, eventTarget, curEventTarget, interaction] of matches) {\n      interaction[method](pointer, event, eventTarget, curEventTarget)\n    }\n  }\n}\n\nfunction getInteraction (searchDetails: SearchDetails) {\n  const { pointerType, scope } = searchDetails\n\n  const foundInteraction = finder.search(searchDetails)\n  const signalArg = { interaction: foundInteraction, searchDetails }\n\n  scope.fire('interactions:find', signalArg)\n\n  return signalArg.interaction || scope.interactions.new({ pointerType })\n}\n\nfunction onDocSignal<T extends 'scope:add-document' | 'scope:remove-document'> ({ doc, scope, options }: Interact.SignalArgs[T], eventMethodName: 'add' | 'remove') {\n  const { docEvents } = scope.interactions\n  const eventMethod = events[eventMethodName]\n\n  if (scope.browser.isIOS && !options.events) {\n    options.events = { passive: false }\n  }\n\n  // delegate event listener\n  for (const eventType in events.delegatedEvents) {\n    eventMethod(doc, eventType, events.delegateListener)\n    eventMethod(doc, eventType, events.delegateUseCapture, true)\n  }\n\n  const eventOptions = options && options.events\n\n  for (const { type, listener } of docEvents) {\n    eventMethod(doc, type, listener, eventOptions)\n  }\n}\n\nexport default {\n  id: 'core/interactions',\n  install,\n  listeners: {\n    'scope:add-document': arg => onDocSignal(arg, 'add'),\n    'scope:remove-document': arg => onDocSignal(arg, 'remove'),\n  },\n  onDocSignal,\n  doOnInteractions,\n  methodNames,\n}\n","import * as utils from '../utils/index'\nimport Interactable from './Interactable'\nimport InteractEvent, { EventPhase } from './InteractEvent'\nimport PointerInfo from './PointerInfo'\nimport { ActionName } from './scope'\n\nexport interface ActionProps<T extends ActionName = any> {\n  name: T\n  axis?: 'x' | 'y' | 'xy'\n}\n\nexport interface StartAction extends ActionProps {\n  name: ActionName | string\n}\n\nexport enum _ProxyValues {\n  interactable = '',\n  element = '',\n  prepared = '',\n  pointerIsDown = '',\n  pointerWasMoved = '',\n  _proxy = ''\n}\n\nexport enum _ProxyMethods {\n  start = '',\n  move = '',\n  end = '',\n  stop = '',\n  interacting = ''\n}\n\nexport type PointerArgProps<T extends {} = {}> = {\n  pointer: Interact.PointerType\n  event: Interact.PointerEventType\n  eventTarget: Interact.EventTarget\n  pointerIndex: number\n  interaction: Interaction\n} & T\n\nexport interface DoPhaseArg {\n  event: Interact.PointerEventType\n  phase: EventPhase\n  interaction: Interaction\n  iEvent: InteractEvent\n  preEnd?: boolean\n  type?: string\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface SignalArgs {\n    'interactions:new': { interaction: Interaction }\n    'interactions:down': PointerArgProps<{\n      type: 'down'\n    }>\n    'interactions:move': PointerArgProps<{\n      type: 'move'\n      dx: number\n      dy: number\n      duplicate: boolean\n    }>\n    'interactions:up': PointerArgProps<{\n      type: 'up'\n      curEventTarget: EventTarget\n    }>\n    'interactions:cancel': SignalArgs['interactions:up'] & {\n      type: 'cancel'\n      curEventTarget: EventTarget\n    }\n    'interactions:update-pointer': PointerArgProps<{\n      pointerInfo: PointerInfo\n      down: boolean\n    }>\n    'interactions:remove-pointer': PointerArgProps<{\n      pointerInfo: PointerInfo\n    }>\n    'interactions:blur'\n    'interactions:before-action-start': Omit<DoPhaseArg, 'iEvent'>\n    'interactions:action-start': DoPhaseArg\n    'interactions:after-action-start': DoPhaseArg\n    'interactions:before-action-move': Omit<DoPhaseArg, 'iEvent'>\n    'interactions:action-move': DoPhaseArg\n    'interactions:after-action-move': DoPhaseArg\n    'interactions:before-action-end': Omit<DoPhaseArg, 'iEvent'>\n    'interactions:action-end': DoPhaseArg\n    'interactions:after-action-end': DoPhaseArg\n    'interactions:stop': { interaction: Interaction }\n  }\n}\n\nexport type _InteractionProxy = Pick<\nInteraction,\nkeyof typeof _ProxyValues | keyof typeof _ProxyMethods\n>\n\nexport class Interaction<T extends ActionName = any> {\n  // current interactable being interacted with\n  interactable: Interactable = null\n\n  // the target element of the interactable\n  element: Interact.Element = null\n  rect: Interact.Rect & Interact.Size\n  edges: {\n    [P in keyof Interact.Rect]?: boolean\n  }\n\n  _scopeFire: Interact.Scope['fire']\n\n  // action that's ready to be fired on next move event\n  prepared: ActionProps<T> = {\n    name : null,\n    axis : null,\n    edges: null,\n  }\n\n  pointerType: string\n\n  // keep track of added pointers\n  pointers: PointerInfo[] = []\n\n  // pointerdown/mousedown/touchstart event\n  downEvent: Interact.PointerEventType = null\n\n  downPointer: Interact.PointerType = {} as Interact.PointerType\n\n  _latestPointer: {\n    pointer: Interact.EventTarget\n    event: Interact.PointerEventType\n    eventTarget: Node\n  } = {\n    pointer: null,\n    event: null,\n    eventTarget: null,\n  }\n\n  // previous action event\n  prevEvent: InteractEvent<T> = null\n\n  pointerIsDown = false\n  pointerWasMoved = false\n  _interacting = false\n  _ending = false\n  _stopped = true\n  _proxy: _InteractionProxy = null\n\n  simulation = null\n\n  get pointerMoveTolerance () {\n    return 1\n  }\n\n  /**\n   * @alias Interaction.prototype.move\n   */\n  doMove = utils.warnOnce(\n    function (this: Interaction, signalArg: any) {\n      this.move(signalArg)\n    },\n    'The interaction.doMove() method has been renamed to interaction.move()')\n\n  coords = {\n    // Starting InteractEvent pointer coordinates\n    start: utils.pointer.newCoords(),\n    // Previous native pointer move event coordinates\n    prev: utils.pointer.newCoords(),\n    // current native pointer move event coordinates\n    cur: utils.pointer.newCoords(),\n    // Change in coordinates and time of the pointer\n    delta: utils.pointer.newCoords(),\n    // pointer velocity\n    velocity: utils.pointer.newCoords(),\n  }\n\n  /** */\n  constructor ({ pointerType, scopeFire }: {\n    pointerType?: string\n    scopeFire: Interact.Scope['fire']\n  }) {\n    this._scopeFire = scopeFire\n    this.pointerType = pointerType\n\n    const that = this\n\n    this._proxy = {} as _InteractionProxy\n\n    for (const key in _ProxyValues) {\n      Object.defineProperty(this._proxy, key, {\n        get () { return that[key] },\n      })\n    }\n\n    for (const key in _ProxyMethods) {\n      Object.defineProperty(this._proxy, key, {\n        value: (...args) => that[key](...args),\n      })\n    }\n\n    this._scopeFire('interactions:new', { interaction: this })\n  }\n\n  pointerDown (pointer: Interact.PointerType, event: Interact.PointerEventType, eventTarget: Interact.EventTarget) {\n    const pointerIndex = this.updatePointer(pointer, event, eventTarget, true)\n\n    this._scopeFire('interactions:down', {\n      pointer,\n      event,\n      eventTarget,\n      pointerIndex,\n      type: 'down',\n      interaction: this,\n    })\n  }\n\n  /**\n   * ```js\n   * interact(target)\n   *   .draggable({\n   *     // disable the default drag start by down->move\n   *     manualStart: true\n   *   })\n   *   // start dragging after the user holds the pointer down\n   *   .on('hold', function (event) {\n   *     var interaction = event.interaction\n   *\n   *     if (!interaction.interacting()) {\n   *       interaction.start({ name: 'drag' },\n   *                         event.interactable,\n   *                         event.currentTarget)\n   *     }\n   * })\n   * ```\n   *\n   * Start an action with the given Interactable and Element as tartgets. The\n   * action must be enabled for the target Interactable and an appropriate\n   * number of pointers must be held down - 1 for drag/resize, 2 for gesture.\n   *\n   * Use it with `interactable.<action>able({ manualStart: false })` to always\n   * [start actions manually](https://github.com/taye/interact.js/issues/114)\n   *\n   * @param {object} action   The action to be performed - drag, resize, etc.\n   * @param {Interactable} target  The Interactable to target\n   * @param {Element} element The DOM Element to target\n   * @return {object} interact\n   */\n  start (action: StartAction, interactable: Interactable, element: Interact.Element) {\n    if (this.interacting() ||\n        !this.pointerIsDown ||\n        this.pointers.length < (action.name === ActionName.Gesture ? 2 : 1) ||\n        !interactable.options[action.name].enabled) {\n      return false\n    }\n\n    utils.copyAction(this.prepared, action)\n\n    this.interactable = interactable\n    this.element      = element\n    this.rect         = interactable.getRect(element)\n    this.edges        = this.prepared.edges\n    this._stopped     = false\n    this._interacting = this._doPhase({\n      interaction: this,\n      event: this.downEvent,\n      phase: EventPhase.Start,\n    }) && !this._stopped\n\n    return this._interacting\n  }\n\n  pointerMove (pointer: Interact.PointerType, event: Interact.PointerEventType, eventTarget: Interact.EventTarget) {\n    if (!this.simulation && !(this.modifiers && this.modifiers.endPrevented)) {\n      this.updatePointer(pointer, event, eventTarget, false)\n      utils.pointer.setCoords(this.coords.cur, this.pointers.map(p => p.pointer), this._now())\n    }\n\n    const duplicateMove = (this.coords.cur.page.x === this.coords.prev.page.x &&\n                           this.coords.cur.page.y === this.coords.prev.page.y &&\n                           this.coords.cur.client.x === this.coords.prev.client.x &&\n                           this.coords.cur.client.y === this.coords.prev.client.y)\n\n    let dx\n    let dy\n\n    // register movement greater than pointerMoveTolerance\n    if (this.pointerIsDown && !this.pointerWasMoved) {\n      dx = this.coords.cur.client.x - this.coords.start.client.x\n      dy = this.coords.cur.client.y - this.coords.start.client.y\n\n      this.pointerWasMoved = utils.hypot(dx, dy) > this.pointerMoveTolerance\n    }\n\n    const signalArg = {\n      pointer,\n      pointerIndex: this.getPointerIndex(pointer),\n      event,\n      type: 'move' as const,\n      eventTarget,\n      dx,\n      dy,\n      duplicate: duplicateMove,\n      interaction: this,\n    }\n\n    if (!duplicateMove) {\n      // set pointer coordinate, time changes and velocity\n      utils.pointer.setCoordDeltas(this.coords.delta, this.coords.prev, this.coords.cur)\n      utils.pointer.setCoordVelocity(this.coords.velocity, this.coords.delta)\n    }\n\n    this._scopeFire('interactions:move', signalArg)\n\n    if (!duplicateMove) {\n      // if interacting, fire an 'action-move' signal etc\n      if (this.interacting()) {\n        signalArg.type = null\n        this.move(signalArg)\n      }\n\n      if (this.pointerWasMoved) {\n        utils.pointer.copyCoords(this.coords.prev, this.coords.cur)\n      }\n    }\n  }\n\n  /**\n   * ```js\n   * interact(target)\n   *   .draggable(true)\n   *   .on('dragmove', function (event) {\n   *     if (someCondition) {\n   *       // change the snap settings\n   *       event.interactable.draggable({ snap: { targets: [] }})\n   *       // fire another move event with re-calculated snap\n   *       event.interaction.move()\n   *     }\n   *   })\n   * ```\n   *\n   * Force a move of the current action at the same coordinates. Useful if\n   * snap/restrict has been changed and you want a movement with the new\n   * settings.\n   */\n  move (signalArg?) {\n    signalArg = utils.extend({\n      pointer: this._latestPointer.pointer,\n      event: this._latestPointer.event,\n      eventTarget: this._latestPointer.eventTarget,\n      interaction: this,\n    }, signalArg || {})\n\n    signalArg.phase = EventPhase.Move\n\n    this._doPhase(signalArg)\n  }\n\n  // End interact move events and stop auto-scroll unless simulation is running\n  pointerUp (pointer: Interact.PointerType, event: Interact.PointerEventType, eventTarget: Interact.EventTarget, curEventTarget: Interact.EventTarget) {\n    let pointerIndex = this.getPointerIndex(pointer)\n\n    if (pointerIndex === -1) {\n      pointerIndex = this.updatePointer(pointer, event, eventTarget, false)\n    }\n\n    const type = /cancel$/i.test(event.type) ? 'cancel' : 'up'\n\n    this._scopeFire(`interactions:${type}` as 'interactions:up' | 'interactions:cancel', {\n      pointer,\n      pointerIndex,\n      event,\n      eventTarget,\n      type: type as any,\n      curEventTarget,\n      interaction: this,\n    })\n\n    if (!this.simulation) {\n      this.end(event)\n    }\n\n    this.pointerIsDown = false\n    this.removePointer(pointer, event)\n  }\n\n  documentBlur (event) {\n    this.end(event)\n    this._scopeFire('interactions:blur', { event, type: 'blur', interaction: this })\n  }\n\n  /**\n   * ```js\n   * interact(target)\n   *   .draggable(true)\n   *   .on('move', function (event) {\n   *     if (event.pageX > 1000) {\n   *       // end the current action\n   *       event.interaction.end()\n   *       // stop all further listeners from being called\n   *       event.stopImmediatePropagation()\n   *     }\n   *   })\n   * ```\n   *\n   * @param {PointerEvent} [event]\n   */\n  end (event?: Interact.PointerEventType) {\n    this._ending = true\n    event = event || this._latestPointer.event\n    let endPhaseResult\n\n    if (this.interacting()) {\n      endPhaseResult = this._doPhase({\n        event,\n        interaction: this,\n        phase: EventPhase.End,\n      })\n    }\n\n    this._ending = false\n\n    if (endPhaseResult === true) {\n      this.stop()\n    }\n  }\n\n  currentAction () {\n    return this._interacting ? this.prepared.name : null\n  }\n\n  interacting () {\n    return this._interacting\n  }\n\n  /** */\n  stop () {\n    this._scopeFire('interactions:stop', { interaction: this })\n\n    this.interactable = this.element = null\n\n    this._interacting = false\n    this._stopped = true\n    this.prepared.name = this.prevEvent = null\n  }\n\n  getPointerIndex (pointer) {\n    const pointerId = utils.pointer.getPointerId(pointer)\n\n    // mouse and pen interactions may have only one pointer\n    return (this.pointerType === 'mouse' || this.pointerType === 'pen')\n      ? this.pointers.length - 1\n      : utils.arr.findIndex(this.pointers, curPointer => curPointer.id === pointerId)\n  }\n\n  getPointerInfo (pointer) {\n    return this.pointers[this.getPointerIndex(pointer)]\n  }\n\n  updatePointer (pointer: Interact.PointerType, event: Interact.PointerEventType, eventTarget: Interact.EventTarget, down?: boolean) {\n    const id = utils.pointer.getPointerId(pointer)\n    let pointerIndex = this.getPointerIndex(pointer)\n    let pointerInfo = this.pointers[pointerIndex]\n\n    down = down === false\n      ? false\n      : down || /(down|start)$/i.test(event.type)\n\n    if (!pointerInfo) {\n      pointerInfo = new PointerInfo(\n        id,\n        pointer,\n        event,\n        null,\n        null,\n      )\n\n      pointerIndex = this.pointers.length\n      this.pointers.push(pointerInfo)\n    }\n    else {\n      pointerInfo.pointer = pointer\n    }\n\n    if (down) {\n      this.pointerIsDown = true\n\n      if (!this.interacting()) {\n        utils.pointer.setCoords(this.coords.start, this.pointers.map(p => p.pointer), this._now())\n\n        utils.pointer.copyCoords(this.coords.cur, this.coords.start)\n        utils.pointer.copyCoords(this.coords.prev, this.coords.start)\n        utils.pointer.pointerExtend(this.downPointer, pointer)\n\n        this.downEvent = event\n        pointerInfo.downTime = this.coords.cur.timeStamp\n        pointerInfo.downTarget = eventTarget\n\n        this.pointerWasMoved = false\n      }\n    }\n\n    this._updateLatestPointer(pointer, event, eventTarget)\n\n    this._scopeFire('interactions:update-pointer', {\n      pointer,\n      event,\n      eventTarget,\n      down,\n      pointerInfo,\n      pointerIndex,\n      interaction: this,\n    })\n\n    return pointerIndex\n  }\n\n  removePointer (pointer: Interact.PointerType, event: Interact.PointerEventType) {\n    const pointerIndex = this.getPointerIndex(pointer)\n\n    if (pointerIndex === -1) { return }\n\n    const pointerInfo = this.pointers[pointerIndex]\n\n    this._scopeFire('interactions:remove-pointer', {\n      pointer,\n      event,\n      eventTarget: null,\n      pointerIndex,\n      pointerInfo,\n      interaction: this,\n    })\n\n    this.pointers.splice(pointerIndex, 1)\n  }\n\n  _updateLatestPointer (pointer, event, eventTarget) {\n    this._latestPointer.pointer = pointer\n    this._latestPointer.event = event\n    this._latestPointer.eventTarget = eventTarget\n  }\n\n  destroy () {\n    this._latestPointer.pointer = null\n    this._latestPointer.event = null\n    this._latestPointer.eventTarget = null\n  }\n\n  _createPreparedEvent (event: Interact.PointerEventType, phase: EventPhase, preEnd?: boolean, type?: string) {\n    const actionName = this.prepared.name\n\n    return new InteractEvent(this, event, actionName, phase, this.element, null, preEnd, type)\n  }\n\n  _fireEvent (iEvent) {\n    this.interactable.fire(iEvent)\n\n    if (!this.prevEvent || iEvent.timeStamp >= this.prevEvent.timeStamp) {\n      this.prevEvent = iEvent\n    }\n  }\n\n  _doPhase (signalArg: Omit<DoPhaseArg, 'iEvent'> & { iEvent?: InteractEvent<T> }) {\n    const { event, phase, preEnd, type } = signalArg\n    const beforeResult = this._scopeFire(`interactions:before-action-${phase}` as any, signalArg)\n\n    if (beforeResult === false) {\n      return false\n    }\n\n    const iEvent = signalArg.iEvent = this._createPreparedEvent(event, phase, preEnd, type)\n    const { rect } = this\n\n    if (rect) {\n      // update the rect modifications\n      const edges = this.edges || this.prepared.edges || { left: true, right: true, top: true, bottom: true }\n\n      if (edges.top)    { rect.top    += iEvent.delta.y }\n      if (edges.bottom) { rect.bottom += iEvent.delta.y }\n      if (edges.left)   { rect.left   += iEvent.delta.x }\n      if (edges.right)  { rect.right  += iEvent.delta.x }\n\n      rect.width = rect.right - rect.left\n      rect.height = rect.bottom - rect.top\n    }\n\n    this._scopeFire(`interactions:action-${phase}` as any, signalArg)\n\n    this._fireEvent(iEvent)\n\n    this._scopeFire(`interactions:after-action-${phase}` as any, signalArg)\n\n    return true\n  }\n\n  _now () { return Date.now() }\n}\n\nexport default Interaction\nexport { PointerInfo }\n","const domObjects: {\n  init: any\n  document: Document\n  DocumentFragment: typeof DocumentFragment\n  SVGElement: typeof SVGElement\n  SVGSVGElement: typeof SVGSVGElement\n  SVGElementInstance: any\n  Element: typeof Element\n  HTMLElement: typeof HTMLElement\n  Event: typeof Event\n  Touch: typeof Touch\n  PointerEvent: typeof PointerEvent\n} =\n{\n  init,\n  document: null as any,\n  DocumentFragment: null as any,\n  SVGElement: null as any,\n  SVGSVGElement: null as any,\n  // eslint-disable-next-line no-undef\n  SVGElementInstance: null as any,\n  Element: null as any,\n  HTMLElement: null as any,\n  Event: null as any,\n  Touch: null as any,\n  PointerEvent: null as any,\n}\n\nfunction blank () {}\n\nexport default domObjects\n\nfunction init (window: Window) {\n  const win = window as any\n\n  domObjects.document           = win.document\n  domObjects.DocumentFragment   = win.DocumentFragment   || blank\n  domObjects.SVGElement         = win.SVGElement         || blank\n  domObjects.SVGSVGElement      = win.SVGSVGElement      || blank\n  domObjects.SVGElementInstance = win.SVGElementInstance || blank\n  domObjects.Element            = win.Element            || blank\n  domObjects.HTMLElement        = win.HTMLElement        || domObjects.Element\n\n  domObjects.Event        = win.Event\n  domObjects.Touch        = win.Touch || blank\n  domObjects.PointerEvent = (win.PointerEvent || win.MSPointerEvent)\n}\n","type Filter<T> = (element: T, index: number, array: T[]) => boolean\n\nexport function contains<T> (array: T[], target: T) {\n  return array.indexOf(target) !== -1\n}\n\nexport function remove<T> (array: T[], target: T) {\n  return array.splice(array.indexOf(target), 1)\n}\n\nexport function merge<T, U> (target: Array<T | U>, source: U[]) {\n  for (const item of source) {\n    target.push(item)\n  }\n\n  return target\n}\n\nexport function from<T = any> (source: ArrayLike<T>) {\n  return merge([] as T[], source as T[])\n}\n\nexport function findIndex<T> (array: T[], func: Filter<T>) {\n  for (let i = 0; i < array.length; i++) {\n    if (func(array[i], i, array)) {\n      return i\n    }\n  }\n\n  return -1\n}\n\nexport function find<T = any> (array: T[], func: Filter<T>) {\n  return array[findIndex(array, func)]\n}\n","export default thing => !!(thing && thing.Window) && (thing instanceof thing.Window)\n","import isWindow from './isWindow'\n\nconst win = {\n  realWindow: undefined as Window,\n  window: undefined as Window,\n  getWindow,\n  init,\n}\n\nexport function init (window: Window & { wrap?: (...args) => any }) {\n  // get wrapped window if using Shadow DOM polyfill\n\n  win.realWindow = window\n\n  // create a TextNode\n  const el = window.document.createTextNode('')\n\n  // check if it's wrapped by a polyfill\n  if (el.ownerDocument !== window.document &&\n      typeof window.wrap === 'function' &&\n    window.wrap(el) === el) {\n    // use wrapped window\n    window = window.wrap(window)\n  }\n\n  win.window = window\n}\n\nif (typeof window === 'undefined') {\n  win.window     = undefined\n  win.realWindow = undefined\n}\nelse {\n  init(window)\n}\n\nexport function getWindow (node) {\n  if (isWindow(node)) {\n    return node\n  }\n\n  const rootNode = (node.ownerDocument || node)\n\n  return rootNode.defaultView || win.window\n}\n\nwin.init = init\n\nexport default win\n","// tslint:disable variable-name\n\nimport isWindow from './isWindow'\nimport win from './window'\n\nexport const window = (thing: any): thing is Window =>\n  thing === win.window || isWindow(thing)\n\nexport const docFrag = (thing: any): thing is DocumentFragment =>\n  object(thing) && thing.nodeType === 11\n\nexport const object = (thing: any): thing is { [index: string]: any } =>\n  !!thing && (typeof thing === 'object')\n\nexport const func = (thing: any): thing is (...args: any) => any =>\n  typeof thing === 'function'\n\nexport const number = (thing: any): thing is number =>\n  typeof thing === 'number'\n\nexport const bool = (thing: any): thing is boolean =>\n  typeof thing === 'boolean'\n\nexport const string = (thing: any): thing is string =>\n  typeof thing === 'string'\n\nexport const element = (thing: any): thing is Interact.Element => {\n  if (!thing || (typeof thing !== 'object')) { return false }\n\n  const _window = win.getWindow(thing) || win.window\n\n  return (/object|function/.test(typeof _window.Element)\n    ? thing instanceof _window.Element // DOM2\n    : thing.nodeType === 1 && typeof thing.nodeName === 'string')\n}\n\nexport const plainObject: typeof object = (thing: any): thing is { [index: string]: any } =>\n  object(thing) &&\n  !!thing.constructor &&\n  /function Object\\b/.test(thing.constructor.toString())\n\nexport const array = <T extends unknown>(thing: any): thing is T[] =>\n  (object(thing) &&\n  (typeof thing.length !== 'undefined') &&\n  func(thing.splice))\n","import domObjects from './domObjects'\nimport * as is from './is'\nimport win from './window'\n\nconst browser = {\n  init,\n  supportsTouch: null as boolean,\n  supportsPointerEvent: null as boolean,\n  isIOS7: null as boolean,\n  isIOS: null as boolean,\n  isIe9: null as boolean,\n  isOperaMobile: null as boolean,\n  prefixedMatchesSelector: null as string,\n  pEventTypes: null as {\n    up: string\n    down: string\n    over: string\n    out: string\n    move: string\n    cancel: string\n  },\n  wheelEvent: null as string,\n}\n\nfunction init (window) {\n  const Element = domObjects.Element\n  const navigator  = win.window.navigator\n\n  // Does the browser support touch input?\n  browser.supportsTouch = ('ontouchstart' in window) ||\n    (is.func(window.DocumentTouch) && domObjects.document instanceof window.DocumentTouch)\n\n  // Does the browser support PointerEvents\n  browser.supportsPointerEvent = navigator.pointerEnabled !== false && !!domObjects.PointerEvent\n\n  browser.isIOS = (/iP(hone|od|ad)/.test(navigator.platform))\n\n  // scrolling doesn't change the result of getClientRects on iOS 7\n  browser.isIOS7 = (/iP(hone|od|ad)/.test(navigator.platform) &&\n           /OS 7[^\\d]/.test(navigator.appVersion))\n\n  browser.isIe9 = /MSIE 9/.test(navigator.userAgent)\n\n  // Opera Mobile must be handled differently\n  browser.isOperaMobile = (navigator.appName === 'Opera' &&\n    browser.supportsTouch &&\n    /Presto/.test(navigator.userAgent))\n\n  // prefix matchesSelector\n  browser.prefixedMatchesSelector = 'matches' in Element.prototype\n    ? 'matches'\n    : 'webkitMatchesSelector' in Element.prototype\n      ? 'webkitMatchesSelector'\n      : 'mozMatchesSelector' in Element.prototype\n        ? 'mozMatchesSelector'\n        : 'oMatchesSelector' in Element.prototype\n          ? 'oMatchesSelector'\n          : 'msMatchesSelector'\n\n  browser.pEventTypes = (browser.supportsPointerEvent\n    ? (domObjects.PointerEvent === window.MSPointerEvent\n      ? {\n        up:     'MSPointerUp',\n        down:   'MSPointerDown',\n        over:   'mouseover',\n        out:    'mouseout',\n        move:   'MSPointerMove',\n        cancel: 'MSPointerCancel',\n      }\n      : {\n        up:     'pointerup',\n        down:   'pointerdown',\n        over:   'pointerover',\n        out:    'pointerout',\n        move:   'pointermove',\n        cancel: 'pointercancel',\n      })\n    : null)\n\n  // because Webkit and Opera still use 'mousewheel' event type\n  browser.wheelEvent = 'onmousewheel' in domObjects.document ? 'mousewheel' : 'wheel'\n}\n\nexport default browser\n","import browser from './browser'\nimport domObjects from './domObjects'\nimport * as is from './is'\nimport win, { getWindow } from './window'\n\nexport function nodeContains (parent: Node | Interact.EventTarget, child: Node | Interact.EventTarget) {\n  while (child) {\n    if (child === parent) {\n      return true\n    }\n\n    child = (child as Node).parentNode\n  }\n\n  return false\n}\n\nexport function closest (element, selector) {\n  while (is.element(element)) {\n    if (matchesSelector(element, selector)) { return element }\n\n    element = parentNode(element)\n  }\n\n  return null\n}\n\nexport function parentNode (node) {\n  let parent = node.parentNode\n\n  if (is.docFrag(parent)) {\n    // skip past #shado-root fragments\n    // tslint:disable-next-line\n    while ((parent = (parent as any).host) && is.docFrag(parent)) {\n      continue\n    }\n\n    return parent\n  }\n\n  return parent\n}\n\nexport function matchesSelector (element, selector) {\n  // remove /deep/ from selectors if shadowDOM polyfill is used\n  if (win.window !== win.realWindow) {\n    selector = selector.replace(/\\/deep\\//g, ' ')\n  }\n\n  return element[browser.prefixedMatchesSelector](selector)\n}\n\nconst getParent = el => el.parentNode ? el.parentNode : el.host\n\n// Test for the element that's \"above\" all other qualifiers\nexport function indexOfDeepestElement (elements: Interact.Element[] | NodeListOf<Element>) {\n  let deepestZoneParents = []\n  let deepestZone = elements[0]\n  let index = deepestZone ? 0 : -1\n  let i\n  let n\n\n  for (i = 1; i < elements.length; i++) {\n    const dropzone = elements[i]\n\n    // an element might belong to multiple selector dropzones\n    if (!dropzone || dropzone === deepestZone) {\n      continue\n    }\n\n    if (!deepestZone) {\n      deepestZone = dropzone\n      index = i\n      continue\n    }\n\n    // check if the deepest or current are document.documentElement or document.rootElement\n    // - if the current dropzone is, do nothing and continue\n    if (dropzone.parentNode === dropzone.ownerDocument) {\n      continue\n    }\n    // - if deepest is, update with the current dropzone and continue to next\n    else if (deepestZone.parentNode === dropzone.ownerDocument) {\n      deepestZone = dropzone\n      index = i\n      continue\n    }\n\n    // compare zIndex of siblings\n    if (dropzone.parentNode === deepestZone.parentNode) {\n      const deepestZIndex = parseInt(getWindow(deepestZone).getComputedStyle(deepestZone).zIndex, 10) || 0\n      const dropzoneZIndex = parseInt(getWindow(dropzone).getComputedStyle(dropzone).zIndex, 10) || 0\n\n      if (dropzoneZIndex >= deepestZIndex) {\n        deepestZone = dropzone\n        index = i\n      }\n\n      continue\n    }\n\n    // populate the ancestry array for the latest deepest dropzone\n    if (!deepestZoneParents.length) {\n      let parent = deepestZone\n      let parentParent\n\n      while ((parentParent = getParent(parent)) && parentParent !== parent.ownerDocument) {\n        deepestZoneParents.unshift(parent)\n        parent = parentParent\n      }\n    }\n\n    let parent\n\n    // if this element is an svg element and the current deepest is an\n    // HTMLElement\n    if (deepestZone instanceof domObjects.HTMLElement &&\n        dropzone instanceof domObjects.SVGElement &&\n        !(dropzone instanceof domObjects.SVGSVGElement)) {\n      if (dropzone === deepestZone.parentNode) {\n        continue\n      }\n\n      parent = dropzone.ownerSVGElement\n    }\n    else {\n      parent = dropzone\n    }\n\n    const dropzoneParents = []\n\n    while (parent.parentNode !== parent.ownerDocument) {\n      dropzoneParents.unshift(parent)\n      parent = getParent(parent)\n    }\n\n    n = 0\n\n    // get (position of last common ancestor) + 1\n    while (dropzoneParents[n] && dropzoneParents[n] === deepestZoneParents[n]) {\n      n++\n    }\n\n    const parents = [\n      dropzoneParents[n - 1],\n      dropzoneParents[n],\n      deepestZoneParents[n],\n    ]\n\n    let child = parents[0].lastChild\n\n    while (child) {\n      if (child === parents[1]) {\n        deepestZone = dropzone\n        index = i\n        deepestZoneParents = dropzoneParents\n\n        break\n      }\n      else if (child === parents[2]) {\n        break\n      }\n\n      child = child.previousSibling\n    }\n  }\n\n  return index\n}\n\nexport function matchesUpTo (element: Interact.Element, selector: string, limit: Node) {\n  while (is.element(element)) {\n    if (matchesSelector(element, selector)) {\n      return true\n    }\n\n    element = parentNode(element)\n\n    if (element === limit) {\n      return matchesSelector(element, selector)\n    }\n  }\n\n  return false\n}\n\nexport function getActualElement (element) {\n  return (element instanceof domObjects.SVGElementInstance\n    ? element.correspondingUseElement\n    : element)\n}\n\nexport function getScrollXY (relevantWindow) {\n  relevantWindow = relevantWindow || win.window\n  return {\n    x: relevantWindow.scrollX || relevantWindow.document.documentElement.scrollLeft,\n    y: relevantWindow.scrollY || relevantWindow.document.documentElement.scrollTop,\n  }\n}\n\nexport function getElementClientRect (element) {\n  const clientRect = (element instanceof domObjects.SVGElement\n    ? element.getBoundingClientRect()\n    : element.getClientRects()[0])\n\n  return clientRect && {\n    left  : clientRect.left,\n    right : clientRect.right,\n    top   : clientRect.top,\n    bottom: clientRect.bottom,\n    width : clientRect.width  || clientRect.right  - clientRect.left,\n    height: clientRect.height || clientRect.bottom - clientRect.top,\n  }\n}\n\nexport function getElementRect (element) {\n  const clientRect = getElementClientRect(element)\n\n  if (!browser.isIOS7 && clientRect) {\n    const scroll = getScrollXY(win.getWindow(element))\n\n    clientRect.left   += scroll.x\n    clientRect.right  += scroll.x\n    clientRect.top    += scroll.y\n    clientRect.bottom += scroll.y\n  }\n\n  return clientRect\n}\n\nexport function getPath (node) {\n  const path = []\n\n  while (node) {\n    path.push(node)\n    node = parentNode(node)\n  }\n\n  return path\n}\n\nexport function trySelector (value) {\n  if (!is.string(value)) { return false }\n\n  // an exception will be raised if it is invalid\n  domObjects.document.querySelector(value)\n  return true\n}\n","export default (x: number, y: number) =>  Math.sqrt(x * x + y * y)\n","export interface PointerExtend {\n  webkit: RegExp\n  [prefix: string]: RegExp\n}\n\nfunction pointerExtend (dest, source) {\n  for (const prop in source) {\n    const prefixedPropREs = pointerExtend.prefixedPropREs\n    let deprecated = false\n\n    // skip deprecated prefixed properties\n    for (const vendor in prefixedPropREs) {\n      if (prop.indexOf(vendor) === 0 && prefixedPropREs[vendor].test(prop)) {\n        deprecated = true\n        break\n      }\n    }\n\n    if (!deprecated && typeof source[prop] !== 'function') {\n      dest[prop] = source[prop]\n    }\n  }\n  return dest\n}\n\npointerExtend.prefixedPropREs = {\n  webkit: /(Movement[XY]|Radius[XY]|RotationAngle|Force)$/,\n  moz: /(Pressure)$/,\n}\n\nexport default pointerExtend\n","import browser from './browser'\nimport dom from './domObjects'\nimport * as domUtils from './domUtils'\nimport hypot from './hypot'\nimport * as is from './is'\nimport pointerExtend from './pointerExtend'\n\nexport function copyCoords (dest, src) {\n  dest.page = dest.page || {}\n  dest.page.x = src.page.x\n  dest.page.y = src.page.y\n\n  dest.client = dest.client || {}\n  dest.client.x = src.client.x\n  dest.client.y = src.client.y\n\n  dest.timeStamp = src.timeStamp\n}\n\nexport function setCoordDeltas (targetObj, prev, cur) {\n  targetObj.page.x    = cur.page.x    - prev.page.x\n  targetObj.page.y    = cur.page.y    - prev.page.y\n  targetObj.client.x  = cur.client.x  - prev.client.x\n  targetObj.client.y  = cur.client.y  - prev.client.y\n  targetObj.timeStamp = cur.timeStamp - prev.timeStamp\n}\n\nexport function setCoordVelocity (targetObj, delta) {\n  const dt = Math.max(delta.timeStamp / 1000, 0.001)\n\n  targetObj.page.x   = delta.page.x / dt\n  targetObj.page.y   = delta.page.y / dt\n  targetObj.client.x = delta.client.x / dt\n  targetObj.client.y = delta.client.y / dt\n  targetObj.timeStamp = dt\n}\n\nexport function setZeroCoords (targetObj: ReturnType<typeof newCoords>) {\n  targetObj.page.x = 0\n  targetObj.page.y = 0\n  targetObj.client.x = 0\n  targetObj.client.y = 0\n}\n\nexport function isNativePointer  (pointer) {\n  return (pointer instanceof dom.Event || pointer instanceof dom.Touch)\n}\n\n// Get specified X/Y coords for mouse or event.touches[0]\nexport function getXY (type, pointer, xy) {\n  xy = xy || {}\n  type = type || 'page'\n\n  xy.x = pointer[type + 'X']\n  xy.y = pointer[type + 'Y']\n\n  return xy\n}\n\nexport function getPageXY (pointer: Interact.PointerType | Interact.InteractEvent, page?: Interact.Point) {\n  page = page || { x: 0, y: 0 }\n\n  // Opera Mobile handles the viewport and scrolling oddly\n  if (browser.isOperaMobile && isNativePointer(pointer)) {\n    getXY('screen', pointer, page)\n\n    page.x += window.scrollX\n    page.y += window.scrollY\n  }\n  else {\n    getXY('page', pointer, page)\n  }\n\n  return page\n}\n\nexport function getClientXY (pointer, client) {\n  client = client || {}\n\n  if (browser.isOperaMobile && isNativePointer(pointer)) {\n    // Opera Mobile handles the viewport and scrolling oddly\n    getXY('screen', pointer, client)\n  }\n  else {\n    getXY('client', pointer, client)\n  }\n\n  return client\n}\n\nexport function getPointerId (pointer) {\n  return is.number(pointer.pointerId) ? pointer.pointerId : pointer.identifier\n}\n\nexport function setCoords (targetObj, pointers: any[], timeStamp: number) {\n  const pointer = (pointers.length > 1\n    ? pointerAverage(pointers)\n    : pointers[0])\n\n  const tmpXY = {} as { x: number, y: number }\n\n  getPageXY(pointer, tmpXY)\n  targetObj.page.x = tmpXY.x\n  targetObj.page.y = tmpXY.y\n\n  getClientXY(pointer, tmpXY)\n  targetObj.client.x = tmpXY.x\n  targetObj.client.y = tmpXY.y\n\n  targetObj.timeStamp = timeStamp\n}\n\nexport function getTouchPair (event) {\n  const touches = []\n\n  // array of touches is supplied\n  if (is.array(event)) {\n    touches[0] = event[0]\n    touches[1] = event[1]\n  }\n  // an event\n  else {\n    if (event.type === 'touchend') {\n      if (event.touches.length === 1) {\n        touches[0] = event.touches[0]\n        touches[1] = event.changedTouches[0]\n      }\n      else if (event.touches.length === 0) {\n        touches[0] = event.changedTouches[0]\n        touches[1] = event.changedTouches[1]\n      }\n    }\n    else {\n      touches[0] = event.touches[0]\n      touches[1] = event.touches[1]\n    }\n  }\n\n  return touches\n}\n\nexport function pointerAverage (pointers: PointerEvent[] | Event[]) {\n  const average = {\n    pageX  : 0,\n    pageY  : 0,\n    clientX: 0,\n    clientY: 0,\n    screenX: 0,\n    screenY: 0,\n  }\n\n  for (const pointer of pointers) {\n    for (const prop in average) {\n      average[prop] += pointer[prop]\n    }\n  }\n  for (const prop in average) {\n    average[prop] /= pointers.length\n  }\n\n  return average\n}\n\nexport function touchBBox (event: Event | Array<(Interact.PointerType) | TouchEvent>) {\n  if (!(event as any).length &&\n      !((event as TouchEvent).touches &&\n        (event as TouchEvent).touches.length > 1)) {\n    return null\n  }\n\n  const touches = getTouchPair(event)\n  const minX = Math.min(touches[0].pageX, touches[1].pageX)\n  const minY = Math.min(touches[0].pageY, touches[1].pageY)\n  const maxX = Math.max(touches[0].pageX, touches[1].pageX)\n  const maxY = Math.max(touches[0].pageY, touches[1].pageY)\n\n  return {\n    x: minX,\n    y: minY,\n    left: minX,\n    top: minY,\n    right: maxX,\n    bottom: maxY,\n    width: maxX - minX,\n    height: maxY - minY,\n  }\n}\n\nexport function touchDistance (event, deltaSource) {\n  const sourceX = deltaSource + 'X'\n  const sourceY = deltaSource + 'Y'\n  const touches = getTouchPair(event)\n\n  const dx = touches[0][sourceX] - touches[1][sourceX]\n  const dy = touches[0][sourceY] - touches[1][sourceY]\n\n  return hypot(dx, dy)\n}\n\nexport function touchAngle (event, deltaSource) {\n  const sourceX = deltaSource + 'X'\n  const sourceY = deltaSource + 'Y'\n  const touches = getTouchPair(event)\n  const dx = touches[1][sourceX] - touches[0][sourceX]\n  const dy = touches[1][sourceY] - touches[0][sourceY]\n  const angle = 180 * Math.atan2(dy, dx) / Math.PI\n\n  return  angle\n}\n\nexport function getPointerType (pointer) {\n  return is.string(pointer.pointerType)\n    ? pointer.pointerType\n    : is.number(pointer.pointerType)\n      ? [undefined, undefined, 'touch', 'pen', 'mouse'][pointer.pointerType]\n      // if the PointerEvent API isn't available, then the \"pointer\" must\n      // be either a MouseEvent, TouchEvent, or Touch object\n      : /touch/.test(pointer.type) || pointer instanceof dom.Touch\n        ? 'touch'\n        : 'mouse'\n}\n\n// [ event.target, event.currentTarget ]\nexport function getEventTargets (event) {\n  const path = is.func(event.composedPath) ? event.composedPath() : event.path\n\n  return [\n    domUtils.getActualElement(path ? path[0] : event.target),\n    domUtils.getActualElement(event.currentTarget),\n  ]\n}\n\nexport function newCoords () {\n  return {\n    page     : { x: 0, y: 0 },\n    client   : { x: 0, y: 0 },\n    timeStamp: 0,\n  }\n}\n\nexport function coordsToEvent (coords: MockCoords) {\n  const event = {\n    coords,\n    get page () { return this.coords.page },\n    get client () { return this.coords.client },\n    get timeStamp () { return this.coords.timeStamp },\n    get pageX () { return this.coords.page.x },\n    get pageY () { return this.coords.page.y },\n    get clientX () { return this.coords.client.x },\n    get clientY () { return this.coords.client.y },\n    get pointerId () { return this.coords.pointerId },\n    get target () { return this.coords.target },\n    get type () { return this.coords.type },\n    get pointerType () { return this.coords.pointerType },\n    get buttons () { return this.coords.buttons },\n  }\n\n  return event as typeof event & Interact.PointerType & Interact.PointerEventType\n}\n\nexport interface MockCoords {\n  page: Interact.Point\n  client: Interact.Point\n  timeStamp?: number\n  pointerId?: any\n  target?: any\n  type?: string\n  pointerType?: string\n  buttons?: number\n}\n\nexport { pointerExtend }\n","export default function extend<T, U extends object> (dest: U, source: T): T & U {\n  for (const prop in source) {\n    (dest as unknown as T)[prop] = source[prop]\n  }\n\n  const ret = dest as T & U\n\n  return ret\n}\n","import { closest, getElementRect, parentNode } from './domUtils'\nimport extend from './extend'\nimport * as is from './is'\n\nexport function getStringOptionResult (value: any, target: Interact.HasGetRect, element) {\n  if (value === 'parent') { return parentNode(element) }\n\n  if (value === 'self') { return target.getRect(element) }\n\n  return closest(element, value)\n}\n\nexport function resolveRectLike<T extends any[]> (\n  value: Interact.RectResolvable<T>,\n  target?: Interact.HasGetRect,\n  element?: Interact.Element,\n  functionArgs?: T,\n) {\n  if (is.string(value)) {\n    value = getStringOptionResult(value, target, element)\n  }\n  else if (is.func(value)) {\n    value = value(...functionArgs)\n  }\n\n  if (is.element(value)) {\n    value = getElementRect(value)\n  }\n\n  return value as Interact.Rect\n}\n\nexport function rectToXY (rect) {\n  return  rect && {\n    x: 'x' in rect ? rect.x : rect.left,\n    y: 'y' in rect ? rect.y : rect.top,\n  }\n}\n\nexport function xywhToTlbr (rect) {\n  if (rect && !('left' in rect && 'top' in rect)) {\n    rect = extend({}, rect)\n\n    rect.left   = rect.x || 0\n    rect.top    = rect.y || 0\n    rect.right  = rect.right   || (rect.left + rect.width)\n    rect.bottom = rect.bottom  || (rect.top + rect.height)\n  }\n\n  return rect\n}\n\nexport function tlbrToXywh (rect) {\n  if (rect && !('x' in rect && 'y' in rect)) {\n    rect = extend({}, rect)\n\n    rect.x      = rect.left || 0\n    rect.y      = rect.top  || 0\n    rect.width  = rect.width  || (rect.right  - rect.x)\n    rect.height = rect.height || (rect.bottom - rect.y)\n  }\n\n  return rect\n}\n","import * as arr from './arr'\nimport * as is from './is'\n\nexport default function clone<T extends { [key: string]: any }> (source: T): Partial<T> {\n  const dest = {} as Partial<T>\n\n  for (const prop in source) {\n    const value = source[prop]\n\n    if (is.plainObject(value)) {\n      dest[prop] = clone(value) as any\n    }\n    else if (is.array(value)) {\n      dest[prop] = arr.from(value) as typeof value\n    }\n    else {\n      dest[prop] = value\n    }\n  }\n\n  return dest\n}\n","import { contains } from './arr'\nimport * as domUtils from './domUtils'\nimport * as is from './is'\nimport pExtend from './pointerExtend'\nimport * as pointerUtils from './pointerUtils'\n\ntype Listener = (event: Event | FakeEvent) => any\n\nconst elements: EventTarget[] = []\nconst targets: Array<{\n  events: { [type: string]: Listener[] }\n  typeCount: number\n}> = []\n\nconst delegatedEvents: {\n  [type: string]: {\n    selectors: string[]\n    contexts: Node[]\n    listeners: Array<Array<[Listener, boolean, boolean]>>\n  }\n} = {}\nconst documents: Document[] = []\n\nfunction add (element: EventTarget, type: string, listener: Listener, optionalArg?: boolean | any) {\n  const options = getOptions(optionalArg)\n  let elementIndex = elements.indexOf(element)\n  let target = targets[elementIndex]\n\n  if (!target) {\n    target = {\n      events: {},\n      typeCount: 0,\n    }\n\n    elementIndex = elements.push(element) - 1\n    targets.push(target)\n  }\n\n  if (!target.events[type]) {\n    target.events[type] = []\n    target.typeCount++\n  }\n\n  if (!contains(target.events[type], listener)) {\n    element.addEventListener(type, listener as any, events.supportsOptions ? options : !!options.capture)\n    target.events[type].push(listener)\n  }\n}\n\nfunction remove (element: EventTarget, type: string, listener?: 'all' | Listener, optionalArg?: boolean | any) {\n  const options = getOptions(optionalArg)\n  const elementIndex = elements.indexOf(element)\n  const target = targets[elementIndex]\n\n  if (!target || !target.events) {\n    return\n  }\n\n  if (type === 'all') {\n    for (type in target.events) {\n      if (target.events.hasOwnProperty(type)) {\n        remove(element, type, 'all')\n      }\n    }\n    return\n  }\n\n  if (target.events[type]) {\n    const len = target.events[type].length\n\n    if (listener === 'all') {\n      for (let i = 0; i < len; i++) {\n        remove(element, type, target.events[type][i], options)\n      }\n      return\n    }\n    else {\n      for (let i = 0; i < len; i++) {\n        if (target.events[type][i] === listener) {\n          element.removeEventListener(type, listener as any, events.supportsOptions ? options : !!options.capture)\n          target.events[type].splice(i, 1)\n\n          break\n        }\n      }\n    }\n\n    if (target.events[type] && target.events[type].length === 0) {\n      (target.events[type] as any) = null\n      target.typeCount--\n    }\n  }\n\n  if (!target.typeCount) {\n    targets.splice(elementIndex, 1)\n    elements.splice(elementIndex, 1)\n  }\n}\n\nfunction addDelegate (selector: string, context: Node, type: string, listener: Listener, optionalArg?: any) {\n  const options = getOptions(optionalArg)\n  if (!delegatedEvents[type]) {\n    delegatedEvents[type] = {\n      contexts : [],\n      listeners: [],\n      selectors: [],\n    }\n\n    // add delegate listener functions\n    for (const doc of documents) {\n      add(doc, type, delegateListener)\n      add(doc, type, delegateUseCapture, true)\n    }\n  }\n\n  const delegated = delegatedEvents[type]\n  let index\n\n  for (index = delegated.selectors.length - 1; index >= 0; index--) {\n    if (delegated.selectors[index] === selector &&\n        delegated.contexts[index] === context) {\n      break\n    }\n  }\n\n  if (index === -1) {\n    index = delegated.selectors.length\n\n    delegated.selectors.push(selector)\n    delegated.contexts.push(context)\n    delegated.listeners.push([])\n  }\n\n  // keep listener and capture and passive flags\n  delegated.listeners[index].push([listener, !!options.capture, options.passive])\n}\n\nfunction removeDelegate (selector, context, type, listener?, optionalArg?: any) {\n  const options = getOptions(optionalArg)\n  const delegated = delegatedEvents[type]\n  let matchFound = false\n  let index\n\n  if (!delegated) { return }\n\n  // count from last index of delegated to 0\n  for (index = delegated.selectors.length - 1; index >= 0; index--) {\n    // look for matching selector and context Node\n    if (delegated.selectors[index] === selector &&\n        delegated.contexts[index] === context) {\n      const listeners = delegated.listeners[index]\n\n      // each item of the listeners array is an array: [function, capture, passive]\n      for (let i = listeners.length - 1; i >= 0; i--) {\n        const [fn, capture, passive] = listeners[i]\n\n        // check if the listener functions and capture and passive flags match\n        if (fn === listener && capture === !!options.capture && passive === options.passive) {\n          // remove the listener from the array of listeners\n          listeners.splice(i, 1)\n\n          // if all listeners for this interactable have been removed\n          // remove the interactable from the delegated arrays\n          if (!listeners.length) {\n            delegated.selectors.splice(index, 1)\n            delegated.contexts.splice(index, 1)\n            delegated.listeners.splice(index, 1)\n\n            // remove delegate function from context\n            remove(context, type, delegateListener)\n            remove(context, type, delegateUseCapture, true)\n\n            // remove the arrays if they are empty\n            if (!delegated.selectors.length) {\n              delegatedEvents[type] = null\n            }\n          }\n\n          // only remove one listener\n          matchFound = true\n          break\n        }\n      }\n\n      if (matchFound) { break }\n    }\n  }\n}\n\n// bound to the interactable context when a DOM event\n// listener is added to a selector interactable\nfunction delegateListener (event: Event, optionalArg?: any) {\n  const options = getOptions(optionalArg)\n  const fakeEvent = new FakeEvent(event)\n  const delegated = delegatedEvents[event.type]\n  const [eventTarget] = (pointerUtils.getEventTargets(event))\n  let element = eventTarget\n\n  // climb up document tree looking for selector matches\n  while (is.element(element)) {\n    for (let i = 0; i < delegated.selectors.length; i++) {\n      const selector = delegated.selectors[i]\n      const context = delegated.contexts[i]\n\n      if (domUtils.matchesSelector(element, selector) &&\n          domUtils.nodeContains(context, eventTarget) &&\n          domUtils.nodeContains(context, element)) {\n        const listeners = delegated.listeners[i]\n\n        fakeEvent.currentTarget = element\n\n        for (const [fn, capture, passive] of listeners) {\n          if (capture === !!options.capture && passive === options.passive) {\n            fn(fakeEvent)\n          }\n        }\n      }\n    }\n\n    element = domUtils.parentNode(element)\n  }\n}\n\nfunction delegateUseCapture (event: Event) {\n  return delegateListener.call(this, event, true)\n}\n\nfunction getOptions (param) {\n  return is.object(param) ? param : { capture: param }\n}\n\nexport class FakeEvent implements Partial<Event> {\n  currentTarget: EventTarget\n\n  constructor (public originalEvent) {\n    // duplicate the event so that currentTarget can be changed\n    pExtend(this, originalEvent)\n  }\n\n  preventOriginalDefault () {\n    this.originalEvent.preventDefault()\n  }\n\n  stopPropagation () {\n    this.originalEvent.stopPropagation()\n  }\n\n  stopImmediatePropagation () {\n    this.originalEvent.stopImmediatePropagation()\n  }\n}\n\nconst events = {\n  add,\n  remove,\n\n  addDelegate,\n  removeDelegate,\n\n  delegateListener,\n  delegateUseCapture,\n  delegatedEvents,\n  documents,\n\n  supportsOptions: false,\n  supportsPassive: false,\n\n  _elements: elements,\n  _targets: targets,\n\n  init (window: Window) {\n    window.document.createElement('div').addEventListener('test', null, {\n      get capture () { return (events.supportsOptions = true) },\n      get passive () { return (events.supportsPassive = true) },\n    })\n  },\n}\n\nexport default events\n","import { rectToXY, resolveRectLike } from './rect'\n\nexport default function (target: Interact.HasGetRect & { options: Interact.PerActionDefaults }, element, action?) {\n  const actionOptions = target.options[action]\n  const actionOrigin = actionOptions && actionOptions.origin\n  const origin = actionOrigin || target.options.origin\n\n  const originRect = resolveRectLike(origin, target, element, [target && element])\n\n  return rectToXY(originRect) || { x: 0, y: 0 }\n}\n","import extend from './extend'\nimport * as is from './is'\n\nexport interface NormalizedListeners {\n  [type: string]: Interact.Listener[]\n}\n\nexport default function normalize (\n  type: Interact.EventTypes,\n  listeners?: Interact.ListenersArg | Interact.ListenersArg[],\n  result?: NormalizedListeners,\n): NormalizedListeners {\n  result = result || {}\n\n  if (is.string(type) && type.search(' ') !== -1) {\n    type = split(type)\n  }\n\n  if (is.array(type)) {\n    return type.reduce<NormalizedListeners>(\n      (acc, t) => extend(acc, normalize(t, listeners, result)),\n      result,\n    )\n  }\n\n  // ({ type: fn }) -> ('', { type: fn })\n  if (is.object(type)) {\n    listeners = type\n    type = ''\n  }\n\n  if (is.func(listeners)) {\n    result[type] = result[type] || []\n    result[type].push(listeners)\n  }\n  else if (is.array(listeners)) {\n    for (const l of listeners) {\n      normalize(type, l, result)\n    }\n  }\n  else if (is.object(listeners)) {\n    for (const prefix in listeners) {\n      const combinedTypes = split(prefix).map(p => `${type}${p}`)\n\n      normalize(combinedTypes, listeners[prefix], result)\n    }\n  }\n\n  return result as NormalizedListeners\n}\n\nfunction split (type: string) {\n  return type.trim().split(/ +/)\n}\n","let lastTime = 0\nlet request\nlet cancel\n\nfunction init (window) {\n  request = window.requestAnimationFrame\n  cancel = window.cancelAnimationFrame\n\n  if (!request) {\n    const vendors = ['ms', 'moz', 'webkit', 'o']\n\n    for (const vendor of vendors) {\n      request = window[`${vendor}RequestAnimationFrame`]\n      cancel = window[`${vendor}CancelAnimationFrame`] || window[`${vendor}CancelRequestAnimationFrame`]\n    }\n  }\n\n  if (!request) {\n    request = callback => {\n      const currTime = Date.now()\n      const timeToCall = Math.max(0, 16 - (currTime - lastTime))\n      // eslint-disable-next-line standard/no-callback-literal\n      const token = setTimeout(() => { callback(currTime + timeToCall) },\n        timeToCall)\n\n      lastTime = currTime + timeToCall\n      return token\n    }\n\n    cancel = token => clearTimeout(token)\n  }\n}\n\nexport default {\n  request: callback => request(callback),\n  cancel: token => cancel(token),\n  init,\n}\n","import * as arr from './arr'\nimport * as dom from './domUtils'\nimport * as is from './is'\nimport * as pointer from './pointerUtils'\nimport * as rect from './rect'\nimport win from './window'\n\nexport function warnOnce<T> (this: T, method: (...args: any) => any, message: string) {\n  let warned = false\n\n  // eslint-disable-next-line no-shadow\n  return function (this: T) {\n    if (!warned) {\n      (win as any).window.console.warn(message)\n      warned = true\n    }\n\n    return method.apply(this, arguments)\n  }\n}\n\n// http://stackoverflow.com/a/5634528/2280888\nexport function _getQBezierValue (t: number, p1: number, p2: number, p3: number) {\n  const iT = 1 - t\n  return iT * iT * p1 + 2 * iT * t * p2 + t * t * p3\n}\n\nexport function getQuadraticCurvePoint (\n  startX: number, startY: number, cpX: number, cpY: number, endX: number, endY: number, position: number) {\n  return {\n    x:  _getQBezierValue(position, startX, cpX, endX),\n    y:  _getQBezierValue(position, startY, cpY, endY),\n  }\n}\n\n// http://gizma.com/easing/\nexport function easeOutQuad (t: number, b: number, c: number, d: number) {\n  t /= d\n  return -c * t * (t - 2) + b\n}\n\nexport function copyAction (dest: Interact.ActionProps, src: Interact.ActionProps) {\n  dest.name  = src.name\n  dest.axis  = src.axis\n  dest.edges = src.edges\n\n  return dest\n}\n\nexport { default as browser } from './browser'\nexport { default as clone } from './clone'\nexport { default as events } from './events'\nexport { default as extend } from './extend'\nexport { default as getOriginXY } from './getOriginXY'\nexport { default as hypot } from './hypot'\nexport { default as normalizeListeners } from './normalizeListeners'\nexport { default as raf } from './raf'\nexport { win, arr, dom, is, pointer, rect }\n","// tslint:disable no-empty-interface\n\nexport interface Defaults {\n  base: BaseDefaults\n  perAction: PerActionDefaults\n  actions: ActionDefaults\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface ActionDefaults {\n}\n\nexport interface BaseDefaults {\n  preventDefault?: 'auto' | 'never' | string\n  deltaSource?: 'page' | 'client'\n  context?: Interact.EventTarget\n}\n\nexport interface PerActionDefaults {\n  enabled?: boolean\n  origin?: Interact.Point | string | Interact.Element\n  listeners?: Interact.Listeners\n  allowFrom?: string | Interact.Element\n  ignoreFrom?: string | Interact.Element\n}\n\nexport type Options = Partial<BaseDefaults> & Partial<PerActionDefaults> & {\n  [P in keyof ActionDefaults]?: Partial<ActionDefaults[P]>\n}\n\n// export interface Options extends BaseDefaults, PerActionDefaults {}\n\nexport interface OptionsArg extends BaseDefaults, Interact.OrBoolean<PerActionDefaults> {}\n\nexport const defaults: Defaults = {\n  base: {\n    preventDefault: 'auto',\n    deltaSource: 'page',\n  },\n\n  perAction: {\n    enabled: false,\n    origin: { x: 0, y: 0 },\n  },\n\n  actions: {} as ActionDefaults,\n}\n\nexport default defaults\n","import * as arr from '../utils/arr'\nimport extend from '../utils/extend'\nimport normalize, { NormalizedListeners } from '../utils/normalizeListeners'\nimport { EventPhase, InteractEvent } from './InteractEvent'\nimport { ActionName } from './scope'\n\nfunction fireUntilImmediateStopped<\n  T extends ActionName,\n  P extends EventPhase,\n> (event: InteractEvent<T, P>, listeners: Interact.Listener[]) {\n  for (const listener of listeners) {\n    if (event.immediatePropagationStopped) { break }\n\n    listener(event)\n  }\n}\n\nclass Eventable {\n  options: any\n  types: NormalizedListeners = {}\n  propagationStopped = false\n  immediatePropagationStopped = false\n  global: any\n\n  constructor (options?: { [index: string]: any }) {\n    this.options = extend({}, options || {})\n  }\n\n  fire (event: any) {\n    let listeners\n    const global = this.global\n\n    // Interactable#on() listeners\n    // tslint:disable no-conditional-assignment\n    if ((listeners = this.types[event.type])) {\n      fireUntilImmediateStopped(event, listeners)\n    }\n\n    // interact.on() listeners\n    if (!event.propagationStopped && global && (listeners = global[event.type]))  {\n      fireUntilImmediateStopped(event, listeners)\n    }\n  }\n\n  on (type: string, listener: Interact.ListenersArg) {\n    const listeners = normalize(type, listener)\n\n    for (type in listeners) {\n      this.types[type] = arr.merge(this.types[type] || [], listeners[type])\n    }\n  }\n\n  off (type: string, listener: Interact.ListenersArg) {\n    const listeners = normalize(type, listener)\n\n    for (type in listeners) {\n      const eventList = this.types[type]\n\n      if (!eventList || !eventList.length) { continue }\n\n      for (const subListener of listeners[type]) {\n        const index = eventList.indexOf(subListener)\n\n        if (index !== -1) {\n          eventList.splice(index, 1)\n        }\n      }\n    }\n  }\n\n  getRect (_element: Interact.Element) {\n    return null\n  }\n}\n\nexport default Eventable\n","import * as arr from '../utils/arr'\nimport browser from '../utils/browser'\nimport clone from '../utils/clone'\nimport { getElementRect, matchesUpTo, nodeContains, trySelector } from '../utils/domUtils'\nimport events from '../utils/events'\nimport extend from '../utils/extend'\nimport * as is from '../utils/is'\nimport normalizeListeners from '../utils/normalizeListeners'\nimport { getWindow } from '../utils/window'\nimport { ActionDefaults, Defaults, Options } from './defaultOptions'\nimport Eventable from './Eventable'\nimport { Actions } from './scope'\n\ntype IgnoreValue = string | Interact.Element | boolean\n\n/** */\nexport class Interactable implements Partial<Eventable> {\n  protected get _defaults (): Defaults {\n    return {\n      base: {},\n      perAction: {},\n      actions: {} as ActionDefaults,\n    }\n  }\n\n  readonly options!: Required<Options>\n  readonly _actions: Actions\n  readonly target: Interact.Target\n  readonly events = new Eventable()\n  readonly _context: Document | Interact.Element\n  readonly _win: Window\n  readonly _doc: Document\n\n  /** */\n  constructor (target: Interact.Target, options: any, defaultContext: Document | Interact.Element) {\n    this._actions = options.actions\n    this.target   = target\n    this._context = options.context || defaultContext\n    this._win     = getWindow(trySelector(target) ? this._context : target)\n    this._doc     = this._win.document\n\n    this.set(options)\n  }\n\n  setOnEvents (actionName: string, phases: NonNullable<any>) {\n    if (is.func(phases.onstart)) { this.on(`${actionName}start`, phases.onstart) }\n    if (is.func(phases.onmove)) { this.on(`${actionName}move`, phases.onmove) }\n    if (is.func(phases.onend)) { this.on(`${actionName}end`, phases.onend) }\n    if (is.func(phases.oninertiastart)) { this.on(`${actionName}inertiastart`, phases.oninertiastart) }\n\n    return this\n  }\n\n  updatePerActionListeners (actionName, prev, cur) {\n    if (is.array(prev) || is.object(prev)) {\n      this.off(actionName, prev)\n    }\n\n    if (is.array(cur) || is.object(cur)) {\n      this.on(actionName, cur)\n    }\n  }\n\n  setPerAction (actionName, options: Interact.OrBoolean<Options>) {\n    const defaults = this._defaults\n\n    // for all the default per-action options\n    for (const optionName in options) {\n      const actionOptions = this.options[actionName]\n      const optionValue = options[optionName]\n      const isArray = is.array(optionValue)\n\n      // remove old event listeners and add new ones\n      if (optionName === 'listeners') {\n        this.updatePerActionListeners(actionName, actionOptions.listeners, optionValue)\n      }\n\n      // if the option value is an array\n      if (isArray) {\n        actionOptions[optionName] = arr.from(optionValue)\n      }\n      // if the option value is an object\n      else if (!isArray && is.plainObject(optionValue)) {\n        // copy the object\n        actionOptions[optionName] = extend(\n          actionOptions[optionName] || {},\n          clone(optionValue))\n\n        // set anabled field to true if it exists in the defaults\n        if (is.object(defaults.perAction[optionName]) && 'enabled' in defaults.perAction[optionName]) {\n          actionOptions[optionName].enabled = optionValue.enabled !== false\n        }\n      }\n      // if the option value is a boolean and the default is an object\n      else if (is.bool(optionValue) && is.object(defaults.perAction[optionName])) {\n        actionOptions[optionName].enabled = optionValue\n      }\n      // if it's anything else, do a plain assignment\n      else {\n        actionOptions[optionName] = optionValue\n      }\n    }\n  }\n\n  /**\n   * The default function to get an Interactables bounding rect. Can be\n   * overridden using {@link Interactable.rectChecker}.\n   *\n   * @param {Element} [element] The element to measure.\n   * @return {object} The object's bounding rectangle.\n   */\n  getRect (element: Interact.Element) {\n    element = element || (is.element(this.target)\n      ? this.target\n      : null)\n\n    if (is.string(this.target)) {\n      element = element || this._context.querySelector(this.target)\n    }\n\n    return getElementRect(element)\n  }\n\n  /**\n   * Returns or sets the function used to calculate the interactable's\n   * element's rectangle\n   *\n   * @param {function} [checker] A function which returns this Interactable's\n   * bounding rectangle. See {@link Interactable.getRect}\n   * @return {function | object} The checker function or this Interactable\n   */\n  rectChecker (checker: (element: Interact.Element) => any) {\n    if (is.func(checker)) {\n      this.getRect = checker\n\n      return this\n    }\n\n    if (checker === null) {\n      delete this.getRect\n\n      return this\n    }\n\n    return this.getRect\n  }\n\n  _backCompatOption (optionName, newValue) {\n    if (trySelector(newValue) || is.object(newValue)) {\n      this.options[optionName] = newValue\n\n      for (const action of this._actions.names) {\n        this.options[action][optionName] = newValue\n      }\n\n      return this\n    }\n\n    return this.options[optionName]\n  }\n\n  /**\n   * Gets or sets the origin of the Interactable's element.  The x and y\n   * of the origin will be subtracted from action event coordinates.\n   *\n   * @param {Element | object | string} [origin] An HTML or SVG Element whose\n   * rect will be used, an object eg. { x: 0, y: 0 } or string 'parent', 'self'\n   * or any CSS selector\n   *\n   * @return {object} The current origin or this Interactable\n   */\n  origin (newValue) {\n    return this._backCompatOption('origin', newValue)\n  }\n\n  /**\n   * Returns or sets the mouse coordinate types used to calculate the\n   * movement of the pointer.\n   *\n   * @param {string} [newValue] Use 'client' if you will be scrolling while\n   * interacting; Use 'page' if you want autoScroll to work\n   * @return {string | object} The current deltaSource or this Interactable\n   */\n  deltaSource (newValue) {\n    if (newValue === 'page' || newValue === 'client') {\n      this.options.deltaSource = newValue\n\n      return this\n    }\n\n    return this.options.deltaSource\n  }\n\n  /**\n   * Gets the selector context Node of the Interactable. The default is\n   * `window.document`.\n   *\n   * @return {Node} The context Node of this Interactable\n   */\n  context () {\n    return this._context\n  }\n\n  inContext (element) {\n    return (this._context === element.ownerDocument ||\n            nodeContains(this._context, element))\n  }\n\n  testIgnoreAllow (\n    this: Interactable,\n    options: { ignoreFrom: IgnoreValue, allowFrom: IgnoreValue },\n    targetNode: Node,\n    eventTarget: Interact.EventTarget,\n  ) {\n    return (!this.testIgnore(options.ignoreFrom, targetNode, eventTarget) &&\n            this.testAllow(options.allowFrom, targetNode, eventTarget))\n  }\n\n  testAllow (\n    this: Interactable,\n    allowFrom: IgnoreValue,\n    targetNode: Node,\n    element: Interact.EventTarget,\n  ) {\n    if (!allowFrom) { return true }\n\n    if (!is.element(element)) { return false }\n\n    if (is.string(allowFrom)) {\n      return matchesUpTo(element, allowFrom, targetNode)\n    }\n    else if (is.element(allowFrom)) {\n      return nodeContains(allowFrom, element)\n    }\n\n    return false\n  }\n\n  testIgnore (\n    this: Interactable,\n    ignoreFrom: IgnoreValue,\n    targetNode: Node,\n    element: Interact.EventTarget,\n  ) {\n    if (!ignoreFrom || !is.element(element)) { return false }\n\n    if (is.string(ignoreFrom)) {\n      return matchesUpTo(element, ignoreFrom, targetNode)\n    }\n    else if (is.element(ignoreFrom)) {\n      return nodeContains(ignoreFrom, element)\n    }\n\n    return false\n  }\n\n  /**\n   * Calls listeners for the given InteractEvent type bound globally\n   * and directly to this Interactable\n   *\n   * @param {InteractEvent} iEvent The InteractEvent object to be fired on this\n   * Interactable\n   * @return {Interactable} this Interactable\n   */\n  fire (iEvent) {\n    this.events.fire(iEvent)\n\n    return this\n  }\n\n  _onOff (method: 'on' | 'off', typeArg: Interact.EventTypes, listenerArg?: Interact.ListenersArg | null, options?: any) {\n    if (is.object(typeArg) && !is.array(typeArg)) {\n      options = listenerArg\n      listenerArg = null\n    }\n\n    const addRemove = method === 'on' ? 'add' : 'remove'\n    const listeners = normalizeListeners(typeArg, listenerArg)\n\n    for (let type in listeners) {\n      if (type === 'wheel') { type = browser.wheelEvent }\n\n      for (const listener of listeners[type]) {\n        // if it is an action event type\n        if (arr.contains(this._actions.eventTypes, type)) {\n          this.events[method](type, listener)\n        }\n        // delegated event\n        else if (is.string(this.target)) {\n          events[`${addRemove}Delegate`](this.target, this._context, type, listener, options)\n        }\n        // remove listener from this Interactable's element\n        else {\n          (events[addRemove] as typeof events.remove)(this.target, type, listener, options)\n        }\n      }\n    }\n\n    return this\n  }\n\n  /**\n   * Binds a listener for an InteractEvent, pointerEvent or DOM event.\n   *\n   * @param {string | array | object} types The types of events to listen\n   * for\n   * @param {function | array | object} [listener] The event listener function(s)\n   * @param {object | boolean} [options] options object or useCapture flag for\n   * addEventListener\n   * @return {Interactable} This Interactable\n   */\n  on (types: Interact.EventTypes, listener?: Interact.ListenersArg, options?: any) {\n    return this._onOff('on', types, listener, options)\n  }\n\n  /**\n   * Removes an InteractEvent, pointerEvent or DOM event listener.\n   *\n   * @param {string | array | object} types The types of events that were\n   * listened for\n   * @param {function | array | object} [listener] The event listener function(s)\n   * @param {object | boolean} [options] options object or useCapture flag for\n   * removeEventListener\n   * @return {Interactable} This Interactable\n   */\n  off (types: string | string[] | Interact.EventTypes, listener?: Interact.ListenersArg, options?: any) {\n    return this._onOff('off', types, listener, options)\n  }\n\n  /**\n   * Reset the options of this Interactable\n   *\n   * @param {object} options The new settings to apply\n   * @return {object} This Interactable\n   */\n  set (options: Interact.OptionsArg) {\n    const defaults = this._defaults\n\n    if (!is.object(options)) {\n      options = {}\n    }\n\n    (this.options as Required<Options>) = clone(defaults.base) as Required<Options>\n\n    for (const actionName in this._actions.methodDict) {\n      const methodName = this._actions.methodDict[actionName]\n\n      this.options[actionName] = {}\n      this.setPerAction(actionName, extend(extend({}, defaults.perAction), defaults.actions[actionName]))\n\n      this[methodName](options[actionName])\n    }\n\n    for (const setting in options) {\n      if (is.func(this[setting])) {\n        this[setting](options[setting])\n      }\n    }\n\n    return this\n  }\n\n  /**\n   * Remove this interactable from the list of interactables and remove it's\n   * action capabilities and event listeners\n   *\n   * @return {interact}\n   */\n  unset () {\n    events.remove(this.target as Node, 'all')\n\n    if (is.string(this.target)) {\n      // remove delegated events\n      for (const type in events.delegatedEvents) {\n        const delegated = events.delegatedEvents[type]\n\n        if (delegated.selectors[0] === this.target &&\n            delegated.contexts[0] === this._context) {\n          delegated.selectors.splice(0, 1)\n          delegated.contexts.splice(0, 1)\n          delegated.listeners.splice(0, 1)\n\n          // remove the arrays if they are empty\n          if (!delegated.selectors.length) {\n            delegated[type] = null\n          }\n        }\n\n        events.remove(this._context, type, events.delegateListener)\n        events.remove(this._context, type, events.delegateUseCapture, true)\n      }\n    }\n    else {\n      events.remove(this.target as Node, 'all')\n    }\n  }\n}\n\nexport default Interactable\n","import * as arr from '../utils/arr'\nimport * as domUtils from '../utils/domUtils'\nimport extend from '../utils/extend'\nimport * as is from '../utils/is'\n\ndeclare module '@interactjs/core/scope' {\n  interface SignalArgs {\n    'interactable:new': {\n      interactable: Interact.Interactable\n      target: Interact.Target\n      options: Interact.OptionsArg\n      win: Window\n    }\n  }\n}\n\nexport default class InteractableSet {\n  // all set interactables\n  list: Interact.Interactable[] = []\n\n  selectorMap: {\n    [selector: string]: Array<{ context: Document | Interact.Element, interactable: Interact.Interactable }>\n  } = {}\n\n  constructor (protected scope: Interact.Scope) {\n    scope.addListeners({\n      'interactable:unset': ({ interactable }) => {\n        const { target, _context: context } = interactable\n        const targetMappings = is.string(target)\n          ? this.selectorMap[target]\n          : target[this.scope.id]\n\n        const targetIndex = targetMappings.findIndex(m => m.context === context)\n        if (targetMappings[targetIndex]) {\n        // Destroying mappingInfo's context and interactable\n          targetMappings[targetIndex].context = null\n          targetMappings[targetIndex].interactable = null\n        }\n        targetMappings.splice(targetIndex, 1)\n      },\n    })\n  }\n\n  new (target: Interact.Target, options?: any): Interact.Interactable {\n    options = extend(options || {}, {\n      actions: this.scope.actions,\n    })\n    const interactable = new this.scope.Interactable(target, options, this.scope.document)\n    const mappingInfo = { context: interactable._context, interactable }\n\n    this.scope.addDocument(interactable._doc)\n    this.list.push(interactable)\n\n    if (is.string(target)) {\n      if (!this.selectorMap[target]) { this.selectorMap[target] = [] }\n      this.selectorMap[target].push(mappingInfo)\n    } else {\n      if (!interactable.target[this.scope.id]) {\n        Object.defineProperty(target, this.scope.id, {\n          value: [],\n          configurable: true,\n        })\n      }\n\n      target[this.scope.id].push(mappingInfo)\n    }\n\n    this.scope.fire('interactable:new', {\n      target,\n      options,\n      interactable,\n      win: this.scope._win,\n    })\n\n    return interactable\n  }\n\n  get (target: Interact.Target, options) {\n    const context = (options && options.context) || this.scope.document\n    const isSelector = is.string(target)\n    const targetMappings = isSelector\n      ? this.selectorMap[target as string]\n      : target[this.scope.id]\n\n    if (!targetMappings) { return null }\n\n    const found = arr.find(\n      targetMappings,\n      m => m.context === context &&\n        (isSelector || m.interactable.inContext(target)))\n\n    return found && found.interactable\n  }\n\n  forEachMatch<T> (node: Node, callback: (interactable: Interact.Interactable) => T): T | void {\n    for (const interactable of this.list) {\n      let ret\n\n      if ((is.string(interactable.target)\n      // target is a selector and the element matches\n        ? (is.element(node) && domUtils.matchesSelector(node, interactable.target))\n        // target is the element\n        : node === interactable.target) &&\n        // the element is in context\n        (interactable.inContext(node))) {\n        ret = callback(interactable)\n      }\n\n      if (ret !== undefined) {\n        return ret\n      }\n    }\n  }\n}\n","import Interactable from './Interactable'\nimport Interaction from './Interaction'\nimport { ActionName } from './scope'\n\nexport enum EventPhase {\n  Start = 'start',\n  Move = 'move',\n  End = 'end',\n  _NONE = '',\n}\n\nexport class BaseEvent<T extends ActionName = any> {\n  type: string\n  target: EventTarget\n  currentTarget: EventTarget\n  interactable: Interactable\n  _interaction: Interaction<T>\n  timeStamp: any\n  immediatePropagationStopped = false\n  propagationStopped = false\n\n  get interaction () {\n    return this._interaction._proxy\n  }\n\n  constructor (interaction) {\n    this._interaction = interaction\n  }\n\n  preventDefault () {}\n\n  /**\n   * Don't call any other listeners (even on the current target)\n   */\n  stopPropagation () {\n    this.propagationStopped = true\n  }\n\n  /**\n   * Don't call listeners on the remaining targets\n   */\n  stopImmediatePropagation () {\n    this.immediatePropagationStopped = this.propagationStopped = true\n  }\n}\n\nexport default BaseEvent\n","import extend from '../utils/extend'\nimport getOriginXY from '../utils/getOriginXY'\nimport hypot from '../utils/hypot'\nimport BaseEvent from './BaseEvent'\nimport defaults from './defaultOptions'\nimport Interaction from './Interaction'\nimport { ActionName } from './scope'\n\nexport enum EventPhase {\n  Start = 'start',\n  Move = 'move',\n  End = 'end',\n  _NONE = '',\n}\n\nexport class InteractEvent<\n  T extends ActionName = any,\n  P extends EventPhase = EventPhase._NONE,\n> extends BaseEvent<T> {\n  target: Interact.Element\n  currentTarget: Interact.Element\n  relatedTarget: Interact.Element\n  screenX?: number\n  screenY?: number\n  button: number\n  buttons: number\n  ctrlKey: boolean\n  shiftKey: boolean\n  altKey: boolean\n  metaKey: boolean\n  page: Interact.Point\n  client: Interact.Point\n  delta: Interact.Point\n  rect: Interact.FullRect\n  x0: number\n  y0: number\n  t0: number\n  dt: number\n  duration: number\n  clientX0: number\n  clientY0: number\n  velocity: Interact.Point\n  speed: number\n  swipe: ReturnType<InteractEvent<T>['getSwipe']>\n  timeStamp: any\n  // drag\n  dragEnter?: Interact.Element\n  dragLeave?: Interact.Element\n  // resize\n  axes?: 'x' | 'y' | 'xy'\n  preEnd?: boolean\n\n  /** */\n  constructor (\n    interaction: Interaction,\n    event: Interact.PointerEventType,\n    actionName: T,\n    phase: P,\n    element: Interact.Element,\n    related?: Interact.Element,\n    preEnd?: boolean,\n    type?: string,\n  ) {\n    super(interaction)\n\n    element = element || interaction.element\n\n    const target      = interaction.interactable\n    const deltaSource = (((target && target.options) || defaults) as any).deltaSource as 'page' | 'client'\n    const origin      = getOriginXY(target, element, actionName)\n    const starting    = phase === 'start'\n    const ending      = phase === 'end'\n    const prevEvent   = starting ? this : interaction.prevEvent\n    const coords      = starting\n      ? interaction.coords.start\n      : ending\n        ? { page: prevEvent.page, client: prevEvent.client, timeStamp: interaction.coords.cur.timeStamp }\n        : interaction.coords.cur\n\n    this.page      = extend({}, coords.page)\n    this.client    = extend({}, coords.client)\n    this.rect      = extend({}, interaction.rect)\n    this.timeStamp = coords.timeStamp\n\n    if (!ending) {\n      this.page.x -= origin.x\n      this.page.y -= origin.y\n\n      this.client.x -= origin.x\n      this.client.y -= origin.y\n    }\n\n    this.ctrlKey       = event.ctrlKey\n    this.altKey        = event.altKey\n    this.shiftKey      = event.shiftKey\n    this.metaKey       = event.metaKey\n    this.button        = (event as MouseEvent).button\n    this.buttons       = (event as MouseEvent).buttons\n    this.target        = element\n    this.currentTarget = element\n    this.relatedTarget = related || null\n    this.preEnd        = preEnd\n    this.type          = type || (actionName + (phase || ''))\n    this.interactable  = target\n\n    this.t0 = starting\n      ? interaction.pointers[interaction.pointers.length - 1].downTime\n      : prevEvent.t0\n\n    this.x0       = interaction.coords.start.page.x - origin.x\n    this.y0       = interaction.coords.start.page.y - origin.y\n    this.clientX0 = interaction.coords.start.client.x - origin.x\n    this.clientY0 = interaction.coords.start.client.y - origin.y\n\n    if (starting || ending) {\n      this.delta = { x: 0, y: 0 }\n    }\n    else {\n      this.delta = {\n        x: this[deltaSource].x - prevEvent[deltaSource].x,\n        y: this[deltaSource].y - prevEvent[deltaSource].y,\n      }\n    }\n\n    this.dt        = interaction.coords.delta.timeStamp\n    this.duration  = this.timeStamp - this.t0\n\n    // velocity and speed in pixels per second\n    this.velocity = extend({}, interaction.coords.velocity[deltaSource])\n    this.speed = hypot(this.velocity.x, this.velocity.y)\n\n    this.swipe = (ending || phase === 'inertiastart') ? this.getSwipe() : null\n  }\n\n  get pageX () { return this.page.x }\n  set pageX (value) { this.page.x = value }\n  get pageY () { return this.page.y }\n  set pageY (value) { this.page.y = value }\n\n  get clientX () { return this.client.x }\n  set clientX (value) { this.client.x = value }\n  get clientY () { return this.client.y }\n  set clientY (value) { this.client.y = value }\n\n  get dx () { return this.delta.x }\n  set dx (value) { this.delta.x = value }\n  get dy () { return this.delta.y }\n  set dy (value) { this.delta.y = value }\n\n  get velocityX () { return this.velocity.x }\n  set velocityX (value) { this.velocity.x = value }\n  get velocityY () { return this.velocity.y }\n  set velocityY (value) { this.velocity.y = value }\n\n  getSwipe () {\n    const interaction = this._interaction\n\n    if (interaction.prevEvent.speed < 600 ||\n        this.timeStamp - interaction.prevEvent.timeStamp > 150) {\n      return null\n    }\n\n    let angle = 180 * Math.atan2(interaction.prevEvent.velocityY, interaction.prevEvent.velocityX) / Math.PI\n    const overlap = 22.5\n\n    if (angle < 0) {\n      angle += 360\n    }\n\n    const left = 135 - overlap <= angle && angle < 225 + overlap\n    const up   = 225 - overlap <= angle && angle < 315 + overlap\n\n    const right = !left && (315 - overlap <= angle || angle <  45 + overlap)\n    const down  = !up   &&   45 - overlap <= angle && angle < 135 + overlap\n\n    return {\n      up,\n      down,\n      left,\n      right,\n      angle,\n      speed: interaction.prevEvent.speed,\n      velocity: {\n        x: interaction.prevEvent.velocityX,\n        y: interaction.prevEvent.velocityY,\n      },\n    }\n  }\n\n  preventDefault () {}\n\n  /**\n   * Don't call listeners on the remaining targets\n   */\n  stopImmediatePropagation () {\n    this.immediatePropagationStopped = this.propagationStopped = true\n  }\n\n  /**\n   * Don't call any other listeners (even on the current target)\n   */\n  stopPropagation () {\n    this.propagationStopped = true\n  }\n}\n\nexport default InteractEvent\n","/* eslint-disable @typescript-eslint/no-parameter-properties */\nexport class PointerInfo {\n  constructor (\n    public id: number,\n    public pointer: Interact.PointerType,\n    public event: Interact.PointerEventType,\n    public downTime: number,\n    public downTarget: Interact.EventTarget,\n  ) {}\n}\n\nexport default PointerInfo\n","import * as dom from '../utils/domUtils'\n\nexport interface SearchDetails {\n  pointer: Interact.PointerType\n  pointerId: number\n  pointerType: string\n  eventType: string\n  eventTarget: Interact.EventTarget\n  curEventTarget: Interact.EventTarget\n  scope: Interact.Scope\n}\n\nconst finder = {\n  methodOrder: ['simulationResume', 'mouseOrPen', 'hasPointer', 'idle'],\n\n  search (details) {\n    for (const method of finder.methodOrder) {\n      const interaction = finder[method](details)\n\n      if (interaction) {\n        return interaction\n      }\n    }\n  },\n\n  // try to resume simulation with a new pointer\n  simulationResume ({ pointerType, eventType, eventTarget, scope }: SearchDetails) {\n    if (!/down|start/i.test(eventType)) {\n      return null\n    }\n\n    for (const interaction of scope.interactions.list) {\n      let element = eventTarget\n\n      if (interaction.simulation && interaction.simulation.allowResume &&\n          (interaction.pointerType === pointerType)) {\n        while (element) {\n          // if the element is the interaction element\n          if (element === interaction.element) {\n            return interaction\n          }\n          element = dom.parentNode(element)\n        }\n      }\n    }\n\n    return null\n  },\n\n  // if it's a mouse or pen interaction\n  mouseOrPen ({ pointerId, pointerType, eventType, scope }: SearchDetails) {\n    if (pointerType !== 'mouse' && pointerType !== 'pen') {\n      return null\n    }\n\n    let firstNonActive\n\n    for (const interaction of scope.interactions.list) {\n      if (interaction.pointerType === pointerType) {\n        // if it's a down event, skip interactions with running simulations\n        if (interaction.simulation && !hasPointerId(interaction, pointerId)) { continue }\n\n        // if the interaction is active, return it immediately\n        if (interaction.interacting()) {\n          return interaction\n        }\n        // otherwise save it and look for another active interaction\n        else if (!firstNonActive) {\n          firstNonActive = interaction\n        }\n      }\n    }\n\n    // if no active mouse interaction was found use the first inactive mouse\n    // interaction\n    if (firstNonActive) {\n      return firstNonActive\n    }\n\n    // find any mouse or pen interaction.\n    // ignore the interaction if the eventType is a *down, and a simulation\n    // is active\n    for (const interaction of scope.interactions.list) {\n      if (interaction.pointerType === pointerType && !(/down/i.test(eventType) && interaction.simulation)) {\n        return interaction\n      }\n    }\n\n    return null\n  },\n\n  // get interaction that has this pointer\n  hasPointer ({ pointerId, scope }: SearchDetails) {\n    for (const interaction of scope.interactions.list) {\n      if (hasPointerId(interaction, pointerId)) {\n        return interaction\n      }\n    }\n\n    return null\n  },\n\n  // get first idle interaction with a matching pointerType\n  idle ({ pointerType, scope }: SearchDetails) {\n    for (const interaction of scope.interactions.list) {\n      // if there's already a pointer held down\n      if (interaction.pointers.length === 1) {\n        const target = interaction.interactable\n        // don't add this pointer if there is a target interactable and it\n        // isn't gesturable\n        if (target && !(target.options.gesture && target.options.gesture.enabled)) {\n          continue\n        }\n      }\n      // maximum of 2 pointers per interaction\n      else if (interaction.pointers.length >= 2) {\n        continue\n      }\n\n      if (!interaction.interacting() && (pointerType === interaction.pointerType)) {\n        return interaction\n      }\n    }\n\n    return null\n  },\n}\n\nfunction hasPointerId (interaction: Interact.Interaction, pointerId: number) {\n  return interaction.pointers.some(({ id }) => id === pointerId)\n}\n\nexport default finder\n","import { ActionName, Scope } from '../core/scope'\nimport * as arr from '../utils/arr'\nimport * as is from '../utils/is'\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    draggable: DraggableMethod\n  }\n}\n\ndeclare module '@interactjs/core/defaultOptions' {\n  interface ActionDefaults {\n    drag: Interact.DraggableOptions\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface Actions {\n    [ActionName.Drag]?: typeof drag\n  }\n\n  // eslint-disable-next-line no-shadow\n  enum ActionName {\n    Drag = 'drag'\n  }\n}\n\n(ActionName as any).Drag = 'drag'\n\nexport type DragEvent = Interact.InteractEvent<ActionName.Drag>\n\nexport type DraggableMethod = Interact.ActionMethod<Interact.DraggableOptions>\n\nfunction install (scope: Scope) {\n  const {\n    actions,\n    Interactable,\n    defaults,\n  } = scope\n\n  scope.addListeners({\n    'interactions:before-action-move': beforeMove,\n    'interactions:action-resume': beforeMove,\n\n    // dragmove\n    'interactions:action-move': move,\n  })\n\n  Interactable.prototype.draggable = drag.draggable\n\n  actions[ActionName.Drag] = drag\n  actions.names.push(ActionName.Drag)\n  arr.merge(actions.eventTypes, [\n    'dragstart',\n    'dragmove',\n    'draginertiastart',\n    'dragresume',\n    'dragend',\n  ])\n  actions.methodDict.drag = 'draggable'\n\n  defaults.actions.drag = drag.defaults\n}\n\nfunction beforeMove ({ interaction }) {\n  if (interaction.prepared.name !== 'drag') { return }\n\n  const axis = interaction.prepared.axis\n\n  if (axis === 'x') {\n    interaction.coords.cur.page.y   = interaction.coords.start.page.y\n    interaction.coords.cur.client.y = interaction.coords.start.client.y\n\n    interaction.coords.velocity.client.y = 0\n    interaction.coords.velocity.page.y   = 0\n  }\n  else if (axis === 'y') {\n    interaction.coords.cur.page.x   = interaction.coords.start.page.x\n    interaction.coords.cur.client.x = interaction.coords.start.client.x\n\n    interaction.coords.velocity.client.x = 0\n    interaction.coords.velocity.page.x   = 0\n  }\n}\n\nfunction move ({ iEvent, interaction }) {\n  if (interaction.prepared.name !== 'drag') { return }\n\n  const axis = interaction.prepared.axis\n\n  if (axis === 'x' || axis === 'y') {\n    const opposite = axis === 'x' ? 'y' : 'x'\n\n    iEvent.page[opposite]   = interaction.coords.start.page[opposite]\n    iEvent.client[opposite] = interaction.coords.start.client[opposite]\n    iEvent.delta[opposite] = 0\n  }\n}\n\n/**\n * ```js\n * interact(element).draggable({\n *     onstart: function (event) {},\n *     onmove : function (event) {},\n *     onend  : function (event) {},\n *\n *     // the axis in which the first movement must be\n *     // for the drag sequence to start\n *     // 'xy' by default - any direction\n *     startAxis: 'x' || 'y' || 'xy',\n *\n *     // 'xy' by default - don't restrict to one axis (move in any direction)\n *     // 'x' or 'y' to restrict movement to either axis\n *     // 'start' to restrict movement to the axis the drag started in\n *     lockAxis: 'x' || 'y' || 'xy' || 'start',\n *\n *     // max number of drags that can happen concurrently\n *     // with elements of this Interactable. Infinity by default\n *     max: Infinity,\n *\n *     // max number of drags that can target the same element+Interactable\n *     // 1 by default\n *     maxPerElement: 2\n * })\n *\n * var isDraggable = interact('element').draggable(); // true\n * ```\n *\n * Get or set whether drag actions can be performed on the target\n *\n * @alias Interactable.prototype.draggable\n *\n * @param {boolean | object} [options] true/false or An object with event\n * listeners to be fired on drag events (object makes the Interactable\n * draggable)\n * @return {boolean | Interactable} boolean indicating if this can be the\n * target of drag events, or this Interctable\n */\nconst draggable: DraggableMethod = function draggable (this: Interact.Interactable, options?: Interact.DraggableOptions | boolean): any {\n  if (is.object(options)) {\n    this.options.drag.enabled = options.enabled !== false\n    this.setPerAction('drag', options)\n    this.setOnEvents('drag', options)\n\n    if (/^(xy|x|y|start)$/.test(options.lockAxis)) {\n      this.options.drag.lockAxis = options.lockAxis\n    }\n    if (/^(xy|x|y)$/.test(options.startAxis)) {\n      this.options.drag.startAxis = options.startAxis\n    }\n\n    return this\n  }\n\n  if (is.bool(options)) {\n    this.options.drag.enabled = options\n\n    return this\n  }\n\n  return this.options.drag\n}\n\nconst drag: Interact.Plugin = {\n  id: 'actions/drag',\n  install,\n  draggable,\n  beforeMove,\n  move,\n  defaults: {\n    startAxis : 'xy',\n    lockAxis  : 'xy',\n  } as Interact.DropzoneOptions,\n\n  checker (_pointer, _event, interactable) {\n    const dragOptions = interactable.options.drag\n\n    return dragOptions.enabled\n      ? {\n        name: 'drag',\n        axis: (dragOptions.lockAxis === 'start'\n          ? dragOptions.startAxis\n          : dragOptions.lockAxis),\n      }\n      : null\n  },\n\n  getCursor () {\n    return 'move'\n  },\n}\n\nexport default drag\n","import BaseEvent from '../../core/BaseEvent'\nimport Interactable from '../../core/Interactable'\nimport InteractEvent from '../../core/InteractEvent'\nimport Interaction from '../../core/Interaction'\nimport { ActionName } from '../../core/scope'\nimport * as arr from '../../utils/arr'\n\nclass DropEvent extends BaseEvent {\n  target: Interact.Element\n  dropzone: Interactable\n  dragEvent: InteractEvent<ActionName.Drag>\n  relatedTarget: Interact.Element\n  draggable: Interactable\n  timeStamp: number\n  propagationStopped = false\n  immediatePropagationStopped = false\n\n  /**\n   * Class of events fired on dropzones during drags with acceptable targets.\n   */\n  constructor (dropState: Interaction['dropState'], dragEvent: InteractEvent, type: string) {\n    super(dragEvent._interaction)\n\n    const { element, dropzone } = type === 'dragleave'\n      ? dropState.prev\n      : dropState.cur\n\n    this.type          = type\n    this.target        = element\n    this.currentTarget = element\n    this.dropzone      = dropzone\n    this.dragEvent     = dragEvent\n    this.relatedTarget = dragEvent.target\n    this.draggable     = dragEvent.interactable\n    this.timeStamp     = dragEvent.timeStamp\n  }\n\n  /**\n   * If this is a `dropactivate` event, the dropzone element will be\n   * deactivated.\n   *\n   * If this is a `dragmove` or `dragenter`, a `dragleave` will be fired on the\n   * dropzone element and more.\n   */\n  reject () {\n    const { dropState } = this._interaction\n\n    if (\n      (this.type !== 'dropactivate') && (\n        !this.dropzone ||\n        dropState.cur.dropzone !== this.dropzone ||\n        dropState.cur.element !== this.target)) {\n      return\n    }\n\n    dropState.prev.dropzone = this.dropzone\n    dropState.prev.element = this.target\n\n    dropState.rejected = true\n    dropState.events.enter = null\n\n    this.stopImmediatePropagation()\n\n    if (this.type === 'dropactivate') {\n      const activeDrops = dropState.activeDrops\n      const index = arr.findIndex(activeDrops, ({ dropzone, element }) =>\n        dropzone === this.dropzone && element === this.target)\n\n      dropState.activeDrops = [\n        ...activeDrops.slice(0, index),\n        ...activeDrops.slice(index + 1),\n      ]\n\n      const deactivateEvent = new DropEvent(dropState, this.dragEvent, 'dropdeactivate')\n\n      deactivateEvent.dropzone = this.dropzone\n      deactivateEvent.target = this.target\n\n      this.dropzone.fire(deactivateEvent)\n    }\n    else {\n      this.dropzone.fire(new DropEvent(dropState, this.dragEvent, 'dragleave'))\n    }\n  }\n\n  preventDefault () {}\n\n  stopPropagation () {\n    this.propagationStopped = true\n  }\n\n  stopImmediatePropagation () {\n    this.immediatePropagationStopped = this.propagationStopped = true\n  }\n}\n\nexport default DropEvent\n","import Interactable from '../../core/Interactable'\nimport InteractEvent from '../../core/InteractEvent'\nimport { Scope } from '../../core/scope'\nimport * as utils from '../../utils/index'\nimport drag from '../drag'\nimport DropEvent from './DropEvent'\n\nexport interface DropzoneMethod {\n  (options: Interact.DropzoneOptions | boolean): Interact.Interactable\n  (): Interact.DropzoneOptions\n}\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    dropzone: DropzoneMethod\n    dropCheck: (\n      dragEvent: InteractEvent,\n      event: Interact.PointerEventType,\n      draggable: Interactable,\n      draggableElement: Interact.Element,\n      dropElemen: Interact.Element,\n      rect: any\n    ) => boolean\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    dropState?: {\n      cur: {\n        dropzone: Interactable    // the dropzone a drag target might be dropped into\n        element: Interact.Element // the element at the time of checking\n      }\n      prev: {\n        dropzone: Interactable    // the dropzone that was recently dragged away from\n        element: Interact.Element // the element at the time of checking\n      }\n      rejected: boolean           // wheather the potential drop was rejected from a listener\n      events: any                 // the drop events related to the current drag event\n      activeDrops: Array<{\n        dropzone: Interactable\n        element: Interact.Element\n        rect: Interact.Rect\n      }>\n    }\n  }\n}\n\ndeclare module '@interactjs/core/defaultOptions' {\n  interface ActionDefaults {\n    drop: Interact.DropzoneOptions\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    dynamicDrop?: boolean\n  }\n}\n\ndeclare module '@interactjs/interact/interact' {\n  interface InteractStatic {\n    dynamicDrop: (newValue?: boolean) => boolean | Interact.interact\n  }\n}\n\nfunction install (scope: Scope) {\n  const {\n    actions,\n    /** @lends module:interact */\n    interact,\n    /** @lends Interactable */\n    Interactable, // eslint-disable-line no-shadow\n    defaults,\n  } = scope\n\n  scope.usePlugin(drag)\n\n  /**\n   *\n   * ```js\n   * interact('.drop').dropzone({\n   *   accept: '.can-drop' || document.getElementById('single-drop'),\n   *   overlap: 'pointer' || 'center' || zeroToOne\n   * }\n   * ```\n   *\n   * Returns or sets whether draggables can be dropped onto this target to\n   * trigger drop events\n   *\n   * Dropzones can receive the following events:\n   *  - `dropactivate` and `dropdeactivate` when an acceptable drag starts and ends\n   *  - `dragenter` and `dragleave` when a draggable enters and leaves the dropzone\n   *  - `dragmove` when a draggable that has entered the dropzone is moved\n   *  - `drop` when a draggable is dropped into this dropzone\n   *\n   * Use the `accept` option to allow only elements that match the given CSS\n   * selector or element. The value can be:\n   *\n   *  - **an Element** - only that element can be dropped into this dropzone.\n   *  - **a string**, - the element being dragged must match it as a CSS selector.\n   *  - **`null`** - accept options is cleared - it accepts any element.\n   *\n   * Use the `overlap` option to set how drops are checked for. The allowed\n   * values are:\n   *\n   *   - `'pointer'`, the pointer must be over the dropzone (default)\n   *   - `'center'`, the draggable element's center must be over the dropzone\n   *   - a number from 0-1 which is the `(intersection area) / (draggable area)`.\n   *   e.g. `0.5` for drop to happen when half of the area of the draggable is\n   *   over the dropzone\n   *\n   * Use the `checker` option to specify a function to check if a dragged element\n   * is over this Interactable.\n   *\n   * @param {boolean | object | null} [options] The new options to be set.\n   * @return {boolean | Interactable} The current setting or this Interactable\n   */\n  Interactable.prototype.dropzone = function (this: Interact.Interactable, options?: Interact.DropzoneOptions | boolean) {\n    return dropzoneMethod(this, options)\n  }\n\n  /**\n   * ```js\n   * interact(target)\n   * .dropChecker(function(dragEvent,         // related dragmove or dragend event\n   *                       event,             // TouchEvent/PointerEvent/MouseEvent\n   *                       dropped,           // bool result of the default checker\n   *                       dropzone,          // dropzone Interactable\n   *                       dropElement,       // dropzone elemnt\n   *                       draggable,         // draggable Interactable\n   *                       draggableElement) {// draggable element\n   *\n   *   return dropped && event.target.hasAttribute('allow-drop')\n   * }\n   * ```\n   */\n  Interactable.prototype.dropCheck = function (this: Interact.Interactable, dragEvent, event, draggable, draggableElement, dropElement, rect) {\n    return dropCheckMethod(this, dragEvent, event, draggable, draggableElement, dropElement, rect)\n  }\n\n  /**\n   * Returns or sets whether the dimensions of dropzone elements are calculated\n   * on every dragmove or only on dragstart for the default dropChecker\n   *\n   * @param {boolean} [newValue] True to check on each move. False to check only\n   * before start\n   * @return {boolean | interact} The current setting or interact\n   */\n  interact.dynamicDrop = function (newValue?: boolean) {\n    if (utils.is.bool(newValue)) {\n      // if (dragging && scope.dynamicDrop !== newValue && !newValue) {\n      //  calcRects(dropzones)\n      // }\n\n      scope.dynamicDrop = newValue\n\n      return interact\n    }\n    return scope.dynamicDrop\n  }\n\n  utils.arr.merge(actions.eventTypes, [\n    'dragenter',\n    'dragleave',\n    'dropactivate',\n    'dropdeactivate',\n    'dropmove',\n    'drop',\n  ])\n  actions.methodDict.drop = 'dropzone'\n\n  scope.dynamicDrop = false\n\n  defaults.actions.drop = drop.defaults\n}\n\nfunction collectDrops ({ interactables }, draggableElement) {\n  const drops = []\n\n  // collect all dropzones and their elements which qualify for a drop\n  for (const dropzone of interactables.list) {\n    if (!dropzone.options.drop.enabled) { continue }\n\n    const accept = dropzone.options.drop.accept\n\n    // test the draggable draggableElement against the dropzone's accept setting\n    if ((utils.is.element(accept) && accept !== draggableElement) ||\n        (utils.is.string(accept) &&\n        !utils.dom.matchesSelector(draggableElement, accept)) ||\n        (utils.is.func(accept) && !accept({ dropzone, draggableElement }))) {\n      continue\n    }\n\n    // query for new elements if necessary\n    const dropElements = utils.is.string(dropzone.target)\n      ? dropzone._context.querySelectorAll(dropzone.target)\n      : utils.is.array(dropzone.target) ? dropzone.target : [dropzone.target]\n\n    for (const dropzoneElement of dropElements) {\n      if (dropzoneElement !== draggableElement) {\n        drops.push({\n          dropzone,\n          element: dropzoneElement,\n        })\n      }\n    }\n  }\n\n  return drops\n}\n\nfunction fireActivationEvents (activeDrops, event) {\n  // loop through all active dropzones and trigger event\n  for (const { dropzone, element } of activeDrops) {\n    event.dropzone = dropzone\n\n    // set current element as event target\n    event.target = element\n    dropzone.fire(event)\n    event.propagationStopped = event.immediatePropagationStopped = false\n  }\n}\n\n// return a new array of possible drops. getActiveDrops should always be\n// called when a drag has just started or a drag event happens while\n// dynamicDrop is true\nfunction getActiveDrops (scope: Scope, dragElement: Interact.Element) {\n  // get dropzones and their elements that could receive the draggable\n  const activeDrops = collectDrops(scope, dragElement)\n\n  for (const activeDrop of activeDrops) {\n    activeDrop.rect = activeDrop.dropzone.getRect(activeDrop.element)\n  }\n\n  return activeDrops\n}\n\nfunction getDrop ({ dropState, interactable: draggable, element: dragElement }: Partial<Interact.Interaction>, dragEvent, pointerEvent) {\n  const validDrops = []\n\n  // collect all dropzones and their elements which qualify for a drop\n  for (const { dropzone, element: dropzoneElement, rect } of dropState.activeDrops) {\n    validDrops.push(dropzone.dropCheck(dragEvent, pointerEvent, draggable, dragElement, dropzoneElement, rect)\n      ? dropzoneElement\n      : null)\n  }\n\n  // get the most appropriate dropzone based on DOM depth and order\n  const dropIndex = utils.dom.indexOfDeepestElement(validDrops)\n\n  return dropState.activeDrops[dropIndex] || null\n}\n\nfunction getDropEvents (interaction: Interact.Interaction, _pointerEvent, dragEvent) {\n  const { dropState } = interaction\n  const dropEvents = {\n    enter     : null,\n    leave     : null,\n    activate  : null,\n    deactivate: null,\n    move      : null,\n    drop      : null,\n  }\n\n  if (dragEvent.type === 'dragstart') {\n    dropEvents.activate = new DropEvent(dropState, dragEvent, 'dropactivate')\n\n    dropEvents.activate.target   = null\n    dropEvents.activate.dropzone = null\n  }\n  if (dragEvent.type === 'dragend') {\n    dropEvents.deactivate = new DropEvent(dropState, dragEvent, 'dropdeactivate')\n\n    dropEvents.deactivate.target   = null\n    dropEvents.deactivate.dropzone = null\n  }\n\n  if (dropState.rejected) {\n    return dropEvents\n  }\n\n  if (dropState.cur.element !== dropState.prev.element) {\n    // if there was a previous dropzone, create a dragleave event\n    if (dropState.prev.dropzone) {\n      dropEvents.leave = new DropEvent(dropState, dragEvent, 'dragleave')\n\n      dragEvent.dragLeave    = dropEvents.leave.target   = dropState.prev.element\n      dragEvent.prevDropzone = dropEvents.leave.dropzone = dropState.prev.dropzone\n    }\n    // if dropzone is not null, create a dragenter event\n    if (dropState.cur.dropzone) {\n      dropEvents.enter = new DropEvent(dropState, dragEvent, 'dragenter')\n\n      dragEvent.dragEnter = dropState.cur.element\n      dragEvent.dropzone = dropState.cur.dropzone\n    }\n  }\n\n  if (dragEvent.type === 'dragend' && dropState.cur.dropzone) {\n    dropEvents.drop = new DropEvent(dropState, dragEvent, 'drop')\n\n    dragEvent.dropzone = dropState.cur.dropzone\n    dragEvent.relatedTarget = dropState.cur.element\n  }\n  if (dragEvent.type === 'dragmove' && dropState.cur.dropzone) {\n    dropEvents.move = new DropEvent(dropState, dragEvent, 'dropmove')\n\n    dropEvents.move.dragmove = dragEvent\n    dragEvent.dropzone = dropState.cur.dropzone\n  }\n\n  return dropEvents\n}\n\nfunction fireDropEvents (interaction: Interact.Interaction, events) {\n  const { dropState } = interaction\n  const {\n    activeDrops,\n    cur,\n    prev,\n  } = dropState\n\n  if (events.leave) { prev.dropzone.fire(events.leave) }\n  if (events.move) { cur.dropzone.fire(events.move) }\n  if (events.enter) { cur.dropzone.fire(events.enter) }\n  if (events.drop) { cur.dropzone.fire(events.drop) }\n\n  if (events.deactivate) {\n    fireActivationEvents(activeDrops, events.deactivate)\n  }\n\n  dropState.prev.dropzone  = cur.dropzone\n  dropState.prev.element = cur.element\n}\n\nfunction onEventCreated ({ interaction, iEvent, event }: Interact.DoPhaseArg, scope) {\n  if (iEvent.type !== 'dragmove' && iEvent.type !== 'dragend') { return }\n\n  const { dropState } = interaction\n\n  if (scope.dynamicDrop) {\n    dropState.activeDrops = getActiveDrops(scope, interaction.element)\n  }\n\n  const dragEvent = iEvent\n  const dropResult = getDrop(interaction, dragEvent, event)\n\n  // update rejected status\n  dropState.rejected = dropState.rejected &&\n    !!dropResult &&\n    dropResult.dropzone === dropState.cur.dropzone &&\n    dropResult.element === dropState.cur.element\n\n  dropState.cur.dropzone  = dropResult && dropResult.dropzone\n  dropState.cur.element = dropResult && dropResult.element\n\n  dropState.events = getDropEvents(interaction, event, dragEvent)\n}\n\nfunction dropzoneMethod (interactable: Interact.Interactable): Interact.DropzoneOptions\nfunction dropzoneMethod (interactable: Interact.Interactable, options: Interact.DropzoneOptions | boolean)\nfunction dropzoneMethod (interactable: Interact.Interactable, options?: Interact.DropzoneOptions | boolean) {\n  if (utils.is.object(options)) {\n    interactable.options.drop.enabled = options.enabled !== false\n\n    if (options.listeners) {\n      const normalized = utils.normalizeListeners(options.listeners)\n      // rename 'drop' to '' as it will be prefixed with 'drop'\n      const corrected = Object.keys(normalized).reduce((acc, type) => {\n        const correctedType = /^(enter|leave)/.test(type)\n          ? `drag${type}`\n          : /^(activate|deactivate|move)/.test(type)\n            ? `drop${type}`\n            : type\n\n        acc[correctedType] = normalized[type]\n\n        return acc\n      }, {})\n\n      interactable.off(interactable.options.drop.listeners)\n      interactable.on(corrected)\n      interactable.options.drop.listeners = corrected\n    }\n\n    if (utils.is.func(options.ondrop)) { interactable.on('drop', options.ondrop) }\n    if (utils.is.func(options.ondropactivate)) { interactable.on('dropactivate', options.ondropactivate) }\n    if (utils.is.func(options.ondropdeactivate)) { interactable.on('dropdeactivate', options.ondropdeactivate) }\n    if (utils.is.func(options.ondragenter)) { interactable.on('dragenter', options.ondragenter) }\n    if (utils.is.func(options.ondragleave)) { interactable.on('dragleave', options.ondragleave) }\n    if (utils.is.func(options.ondropmove)) { interactable.on('dropmove', options.ondropmove) }\n\n    if (/^(pointer|center)$/.test(options.overlap as string)) {\n      interactable.options.drop.overlap = options.overlap\n    }\n    else if (utils.is.number(options.overlap)) {\n      interactable.options.drop.overlap = Math.max(Math.min(1, options.overlap), 0)\n    }\n    if ('accept' in options) {\n      interactable.options.drop.accept = options.accept\n    }\n    if ('checker' in options) {\n      interactable.options.drop.checker = options.checker\n    }\n\n    return interactable\n  }\n\n  if (utils.is.bool(options)) {\n    interactable.options.drop.enabled = options\n\n    return interactable\n  }\n\n  return interactable.options.drop\n}\n\nfunction dropCheckMethod (\n  interactable: Interact.Interactable,\n  dragEvent: InteractEvent,\n  event: Interact.PointerEventType,\n  draggable: Interact.Interactable,\n  draggableElement: Interact.Element,\n  dropElement: Interact.Element,\n  rect: any,\n) {\n  let dropped = false\n\n  // if the dropzone has no rect (eg. display: none)\n  // call the custom dropChecker or just return false\n  if (!(rect = rect || interactable.getRect(dropElement))) {\n    return (interactable.options.drop.checker\n      ? interactable.options.drop.checker(dragEvent, event, dropped, interactable, dropElement, draggable, draggableElement)\n      : false)\n  }\n\n  const dropOverlap = interactable.options.drop.overlap\n\n  if (dropOverlap === 'pointer') {\n    const origin = utils.getOriginXY(draggable, draggableElement, 'drag')\n    const page = utils.pointer.getPageXY(dragEvent)\n\n    page.x += origin.x\n    page.y += origin.y\n\n    const horizontal = (page.x > rect.left) && (page.x < rect.right)\n    const vertical   = (page.y > rect.top) && (page.y < rect.bottom)\n\n    dropped = horizontal && vertical\n  }\n\n  const dragRect = draggable.getRect(draggableElement)\n\n  if (dragRect && dropOverlap === 'center') {\n    const cx = dragRect.left + dragRect.width  / 2\n    const cy = dragRect.top  + dragRect.height / 2\n\n    dropped = cx >= rect.left && cx <= rect.right && cy >= rect.top && cy <= rect.bottom\n  }\n\n  if (dragRect && utils.is.number(dropOverlap)) {\n    const overlapArea  = (Math.max(0, Math.min(rect.right, dragRect.right) - Math.max(rect.left, dragRect.left)) *\n                          Math.max(0, Math.min(rect.bottom, dragRect.bottom) - Math.max(rect.top, dragRect.top)))\n\n    const overlapRatio = overlapArea / (dragRect.width * dragRect.height)\n\n    dropped = overlapRatio >= dropOverlap\n  }\n\n  if (interactable.options.drop.checker) {\n    dropped = interactable.options.drop.checker(dragEvent, event, dropped, interactable, dropElement, draggable, draggableElement)\n  }\n\n  return dropped\n}\n\nconst drop = {\n  id: 'actions/drop',\n  install,\n  listeners: {\n    'interactions:before-action-start': ({ interaction }) => {\n      if (interaction.prepared.name !== 'drag') { return }\n\n      interaction.dropState = {\n        cur: {\n          dropzone: null,\n          element: null,\n        },\n        prev: {\n          dropzone: null,\n          element: null,\n        },\n        rejected: null,\n        events: null,\n        activeDrops: null,\n      }\n    },\n\n    'interactions:after-action-start': ({ interaction, event, iEvent: dragEvent }, scope) => {\n      if (interaction.prepared.name !== 'drag') { return }\n\n      const { dropState } = interaction\n\n      // reset active dropzones\n      dropState.activeDrops = null\n      dropState.events = null\n      dropState.activeDrops = getActiveDrops(scope, interaction.element)\n      dropState.events = getDropEvents(interaction, event, dragEvent)\n\n      if (dropState.events.activate) {\n        fireActivationEvents(dropState.activeDrops, dropState.events.activate)\n      }\n    },\n\n    // FIXME proper signal types\n    'interactions:action-move': onEventCreated,\n    'interactions:action-end': onEventCreated,\n\n    'interactions:after-action-move': function fireDropAfterMove ({ interaction }) {\n      if (interaction.prepared.name !== 'drag') { return }\n\n      fireDropEvents(interaction, interaction.dropState.events)\n      interaction.dropState.events = {}\n    },\n\n    'interactions:after-action-end': ({ interaction }) => {\n      if (interaction.prepared.name !== 'drag') { return }\n\n      fireDropEvents(interaction, interaction.dropState.events)\n    },\n\n    'interactions:stop': ({ interaction }) => {\n      if (interaction.prepared.name !== 'drag') { return }\n\n      const { dropState } = interaction\n\n      if (dropState) {\n        dropState.activeDrops = null\n        dropState.events = null\n        dropState.cur.dropzone = null\n        dropState.cur.element = null\n        dropState.prev.dropzone = null\n        dropState.prev.element = null\n        dropState.rejected = false\n      }\n    },\n  },\n  getActiveDrops,\n  getDrop,\n  getDropEvents,\n  fireDropEvents,\n  defaults: {\n    enabled: false,\n    accept : null,\n    overlap: 'pointer',\n  } as Interact.DropzoneOptions,\n}\n\nexport default drop\n","import InteractEvent from '../core/InteractEvent'\nimport { ActionName, Scope } from '../core/scope'\nimport * as utils from '../utils/index'\n\nexport type GesturableMethod = Interact.ActionMethod<Interact.GesturableOptions>\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    gesture?: {\n      angle: number           // angle from first to second touch\n      distance: number\n      scale: number           // gesture.distance / gesture.startDistance\n      startAngle: number      // angle of line joining two touches\n      startDistance: number   // distance between two touches of touchStart\n    }\n  }\n}\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    gesturable: GesturableMethod\n  }\n}\n\ndeclare module '@interactjs/core/defaultOptions' {\n  interface ActionDefaults {\n    gesture: Interact.GesturableOptions\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface Actions {\n    [ActionName.Gesture]?: typeof gesture\n  }\n\n  // eslint-disable-next-line no-shadow\n  enum ActionName {\n    Gesture = 'gesture'\n  }\n}\n\n(ActionName as any).Gesture = 'gesture'\n\nexport interface GestureEvent extends Interact.InteractEvent<ActionName.Gesture> {\n  distance: number\n  angle: number\n  da: number // angle change\n  scale: number // ratio of distance start to current event\n  ds: number // scale change\n  box: Interact.Rect // enclosing box of all points\n  touches: Interact.PointerType[]\n}\n\nexport interface GestureSignalArg extends Interact.DoPhaseArg {\n  iEvent: GestureEvent\n  interaction: Interact.Interaction<ActionName.Gesture>\n  event: Interact.PointerEventType | GestureEvent\n}\n\nfunction install (scope: Scope) {\n  const {\n    actions,\n    Interactable,\n    defaults,\n  } = scope\n\n  /**\n   * ```js\n   * interact(element).gesturable({\n   *     onstart: function (event) {},\n   *     onmove : function (event) {},\n   *     onend  : function (event) {},\n   *\n   *     // limit multiple gestures.\n   *     // See the explanation in {@link Interactable.draggable} example\n   *     max: Infinity,\n   *     maxPerElement: 1,\n   * })\n   *\n   * var isGestureable = interact(element).gesturable()\n   * ```\n   *\n   * Gets or sets whether multitouch gestures can be performed on the target\n   *\n   * @param {boolean | object} [options] true/false or An object with event\n   * listeners to be fired on gesture events (makes the Interactable gesturable)\n   * @return {boolean | Interactable} A boolean indicating if this can be the\n   * target of gesture events, or this Interactable\n   */\n  Interactable.prototype.gesturable = function (this: Interact.Interactable, options: Interact.GesturableOptions | boolean) {\n    if (utils.is.object(options)) {\n      this.options.gesture.enabled = options.enabled !== false\n      this.setPerAction('gesture', options)\n      this.setOnEvents('gesture', options)\n\n      return this\n    }\n\n    if (utils.is.bool(options)) {\n      this.options.gesture.enabled = options\n\n      return this\n    }\n\n    return this.options.gesture as Interact.Options\n  } as GesturableMethod\n\n  actions[ActionName.Gesture] = gesture\n  actions.names.push(ActionName.Gesture)\n  utils.arr.merge(actions.eventTypes, [\n    'gesturestart',\n    'gesturemove',\n    'gestureend',\n  ])\n  actions.methodDict.gesture = 'gesturable'\n\n  defaults.actions.gesture = gesture.defaults\n}\n\nconst gesture = {\n  id: 'actions/gesture',\n  install,\n  listeners: {\n    'interactions:action-start': updateGestureProps,\n    'interactions:action-move': updateGestureProps,\n    'interactions:action-end': updateGestureProps,\n\n    'interactions:new': ({ interaction }) => {\n      interaction.gesture = {\n        angle: 0,\n        distance: 0,\n        scale: 1,\n        startAngle: 0,\n        startDistance: 0,\n      }\n    },\n  },\n\n  defaults: {\n  },\n\n  checker (_pointer, _event, _interactable, _element, interaction: { pointers: { length: number } }) {\n    if (interaction.pointers.length >= 2) {\n      return { name: 'gesture' }\n    }\n\n    return null\n  },\n\n  getCursor () {\n    return ''\n  },\n}\n\nfunction updateGestureProps ({ interaction, iEvent, event, phase }: GestureSignalArg) {\n  if (interaction.prepared.name !== 'gesture') { return }\n\n  const pointers = interaction.pointers.map(p => p.pointer)\n  const starting = phase === 'start'\n  const ending = phase === 'end'\n  const deltaSource = interaction.interactable.options.deltaSource\n\n  iEvent.touches = [pointers[0], pointers[1]]\n\n  if (starting) {\n    iEvent.distance = utils.pointer.touchDistance(pointers, deltaSource)\n    iEvent.box      = utils.pointer.touchBBox(pointers)\n    iEvent.scale    = 1\n    iEvent.ds       = 0\n    iEvent.angle    = utils.pointer.touchAngle(pointers, deltaSource)\n    iEvent.da       = 0\n\n    interaction.gesture.startDistance = iEvent.distance\n    interaction.gesture.startAngle = iEvent.angle\n  }\n  else if (ending || event instanceof InteractEvent) {\n    const prevEvent = interaction.prevEvent as GestureEvent\n\n    iEvent.distance = prevEvent.distance\n    iEvent.box      = prevEvent.box\n    iEvent.scale    = prevEvent.scale\n    iEvent.ds       = 0\n    iEvent.angle    = prevEvent.angle\n    iEvent.da       = 0\n  }\n  else {\n    iEvent.distance = utils.pointer.touchDistance(pointers, deltaSource)\n    iEvent.box      = utils.pointer.touchBBox(pointers)\n    iEvent.scale    = iEvent.distance / interaction.gesture.startDistance\n    iEvent.angle    = utils.pointer.touchAngle(pointers, deltaSource)\n\n    iEvent.ds = iEvent.scale - interaction.gesture.scale\n    iEvent.da = iEvent.angle - interaction.gesture.angle\n  }\n\n  interaction.gesture.distance = iEvent.distance\n  interaction.gesture.angle = iEvent.angle\n\n  if (utils.is.number(iEvent.scale) &&\n      iEvent.scale !== Infinity &&\n      !isNaN(iEvent.scale)) {\n    interaction.gesture.scale = iEvent.scale\n  }\n}\n\nexport default gesture\n","import { Interaction } from '../core/Interaction'\nimport { ActionName, Scope } from '../core/scope'\nimport * as arr from '../utils/arr'\nimport * as dom from '../utils/domUtils'\nimport extend from '../utils/extend'\nimport * as is from '../utils/is'\n\nexport type EdgeName = 'top' | 'left' | 'bottom' | 'right'\n\nexport type ResizableMethod = Interact.ActionMethod<Interact.ResizableOptions>\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    resizable: ResizableMethod\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    resizeAxes: 'x' | 'y' | 'xy'\n    resizeRects: {\n      start: Interact.FullRect\n      current: Interact.Rect\n      inverted: Interact.FullRect\n      previous: Interact.FullRect\n      delta: Interact.FullRect\n    }\n    resizeStartAspectRatio: number\n  }\n\n  interface ActionProps {\n    edges?: { [edge in 'top' | 'left' | 'bottom' | 'right']?: boolean }\n    _linkedEdges?: { [edge in 'top' | 'left' | 'bottom' | 'right']?: boolean }\n  }\n}\n\ndeclare module '@interactjs/core/defaultOptions' {\n  interface ActionDefaults {\n    resize: Interact.ResizableOptions\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface Actions {\n    [ActionName.Resize]?: typeof resize\n  }\n\n  // eslint-disable-next-line no-shadow\n  enum ActionName {\n    Resize = 'resize'\n  }\n}\n\n(ActionName as any).Resize = 'resize'\n\nexport interface ResizeEvent extends Interact.InteractEvent<ActionName.Resize> {\n  deltaRect?: Interact.FullRect\n  edges?: Interact.ActionProps['edges']\n}\n\nfunction install (scope: Scope) {\n  const {\n    actions,\n    browser,\n    /** @lends Interactable */\n    Interactable, // tslint:disable-line no-shadowed-variable\n    defaults,\n  } = scope\n\n  // Less Precision with touch input\n\n  resize.cursors = initCursors(browser)\n  resize.defaultMargin = browser.supportsTouch || browser.supportsPointerEvent ? 20 : 10\n\n  /**\n   * ```js\n   * interact(element).resizable({\n   *   onstart: function (event) {},\n   *   onmove : function (event) {},\n   *   onend  : function (event) {},\n   *\n   *   edges: {\n   *     top   : true,       // Use pointer coords to check for resize.\n   *     left  : false,      // Disable resizing from left edge.\n   *     bottom: '.resize-s',// Resize if pointer target matches selector\n   *     right : handleEl    // Resize if pointer target is the given Element\n   *   },\n   *\n   *     // Width and height can be adjusted independently. When `true`, width and\n   *     // height are adjusted at a 1:1 ratio.\n   *     square: false,\n   *\n   *     // Width and height can be adjusted independently. When `true`, width and\n   *     // height maintain the aspect ratio they had when resizing started.\n   *     preserveAspectRatio: false,\n   *\n   *   // a value of 'none' will limit the resize rect to a minimum of 0x0\n   *   // 'negate' will allow the rect to have negative width/height\n   *   // 'reposition' will keep the width/height positive by swapping\n   *   // the top and bottom edges and/or swapping the left and right edges\n   *   invert: 'none' || 'negate' || 'reposition'\n   *\n   *   // limit multiple resizes.\n   *   // See the explanation in the {@link Interactable.draggable} example\n   *   max: Infinity,\n   *   maxPerElement: 1,\n   * })\n   *\n   * var isResizeable = interact(element).resizable()\n   * ```\n   *\n   * Gets or sets whether resize actions can be performed on the target\n   *\n   * @param {boolean | object} [options] true/false or An object with event\n   * listeners to be fired on resize events (object makes the Interactable\n   * resizable)\n   * @return {boolean | Interactable} A boolean indicating if this can be the\n   * target of resize elements, or this Interactable\n   */\n  Interactable.prototype.resizable = function (this: Interact.Interactable, options: Interact.ResizableOptions | boolean) {\n    return resizable(this, options, scope)\n  } as ResizableMethod\n\n  actions[ActionName.Resize] = resize\n  actions.names.push(ActionName.Resize)\n  arr.merge(actions.eventTypes, [\n    'resizestart',\n    'resizemove',\n    'resizeinertiastart',\n    'resizeresume',\n    'resizeend',\n  ])\n  actions.methodDict.resize = 'resizable'\n\n  defaults.actions.resize = resize.defaults\n}\n\nconst resize = {\n  id: 'actions/resize',\n  install,\n  listeners: {\n    'interactions:new': ({ interaction }) => {\n      interaction.resizeAxes = 'xy'\n    },\n\n    'interactions:action-start': arg => {\n      start(arg)\n      updateEventAxes(arg)\n    },\n    'interactions:action-move': arg => {\n      move(arg)\n      updateEventAxes(arg)\n    },\n    'interactions:action-end': end,\n  },\n\n  defaults: {\n    square: false,\n    preserveAspectRatio: false,\n    axis: 'xy',\n\n    // use default margin\n    margin: NaN,\n\n    // object with props left, right, top, bottom which are\n    // true/false values to resize when the pointer is over that edge,\n    // CSS selectors to match the handles for each direction\n    // or the Elements for each handle\n    edges: null,\n\n    // a value of 'none' will limit the resize rect to a minimum of 0x0\n    // 'negate' will alow the rect to have negative width/height\n    // 'reposition' will keep the width/height positive by swapping\n    // the top and bottom edges and/or swapping the left and right edges\n    invert: 'none',\n  } as Interact.ResizableOptions,\n\n  checker (\n    _pointer: Interact.PointerType,\n    _event: Interact.PointerEventType,\n    interactable: Interact.Interactable,\n    element: Interact.Element,\n    interaction: Interaction,\n    rect: Interact.Rect,\n  ) {\n    if (!rect) { return null }\n\n    const page = extend({}, interaction.coords.cur.page)\n    const options = interactable.options\n\n    if (options.resize.enabled) {\n      const resizeOptions = options.resize\n      const resizeEdges: { [edge: string]: boolean } = { left: false, right: false, top: false, bottom: false }\n\n      // if using resize.edges\n      if (is.object(resizeOptions.edges)) {\n        for (const edge in resizeEdges) {\n          resizeEdges[edge] = checkResizeEdge(edge,\n            resizeOptions.edges[edge],\n            page,\n            interaction._latestPointer.eventTarget,\n            element,\n            rect,\n            resizeOptions.margin || this.defaultMargin)\n        }\n\n        resizeEdges.left = resizeEdges.left && !resizeEdges.right\n        resizeEdges.top  = resizeEdges.top  && !resizeEdges.bottom\n\n        if (resizeEdges.left || resizeEdges.right || resizeEdges.top || resizeEdges.bottom) {\n          return {\n            name: 'resize',\n            edges: resizeEdges,\n          }\n        }\n      }\n      else {\n        const right  = options.resize.axis !== 'y' && page.x > (rect.right  - this.defaultMargin)\n        const bottom = options.resize.axis !== 'x' && page.y > (rect.bottom - this.defaultMargin)\n\n        if (right || bottom) {\n          return {\n            name: 'resize',\n            axes: (right ? 'x' : '') + (bottom ? 'y' : ''),\n          }\n        }\n      }\n    }\n\n    return null\n  },\n\n  cursors: null as ReturnType<typeof initCursors>,\n\n  getCursor ({ edges, axis, name }: Interact.ActionProps) {\n    const cursors = resize.cursors\n    let result: string = null\n\n    if (axis) {\n      result = cursors[name + axis]\n    }\n    else if (edges) {\n      let cursorKey = ''\n\n      for (const edge of ['top', 'bottom', 'left', 'right']) {\n        if (edges[edge]) {\n          cursorKey += edge\n        }\n      }\n\n      result = cursors[cursorKey]\n    }\n\n    return result\n  },\n\n  defaultMargin: null as number,\n}\n\nfunction resizable (interactable: Interact.Interactable, options: Interact.OrBoolean<Interact.ResizableOptions> | boolean, scope: Scope) {\n  if (is.object(options)) {\n    interactable.options.resize.enabled = options.enabled !== false\n    interactable.setPerAction('resize', options)\n    interactable.setOnEvents('resize', options)\n\n    if (is.string(options.axis) && /^x$|^y$|^xy$/.test(options.axis)) {\n      interactable.options.resize.axis = options.axis\n    }\n    else if (options.axis === null) {\n      interactable.options.resize.axis = scope.defaults.actions.resize.axis\n    }\n\n    if (is.bool(options.preserveAspectRatio)) {\n      interactable.options.resize.preserveAspectRatio = options.preserveAspectRatio\n    }\n    else if (is.bool(options.square)) {\n      interactable.options.resize.square = options.square\n    }\n\n    return interactable\n  }\n  if (is.bool(options)) {\n    interactable.options.resize.enabled = options\n\n    return interactable\n  }\n  return interactable.options.resize\n}\n\nfunction checkResizeEdge (\n  name: string,\n  value: any,\n  page: Interact.Point,\n  element: Node,\n  interactableElement: Interact.Element,\n  rect: Interact.Rect,\n  margin: number,\n) {\n  // false, '', undefined, null\n  if (!value) { return false }\n\n  // true value, use pointer coords and element rect\n  if (value === true) {\n    // if dimensions are negative, \"switch\" edges\n    const width  = is.number(rect.width) ? rect.width  : rect.right  - rect.left\n    const height = is.number(rect.height) ? rect.height : rect.bottom - rect.top\n\n    // don't use margin greater than half the relevent dimension\n    margin = Math.min(margin, (name === 'left' || name === 'right' ? width : height) / 2)\n\n    if (width < 0) {\n      if      (name === 'left')  { name = 'right' }\n      else if (name === 'right') { name = 'left'  }\n    }\n    if (height < 0) {\n      if      (name === 'top')    { name = 'bottom' }\n      else if (name === 'bottom') { name = 'top'    }\n    }\n\n    if (name === 'left') { return page.x < ((width  >= 0 ? rect.left : rect.right) + margin) }\n    if (name === 'top') { return page.y < ((height >= 0 ? rect.top : rect.bottom) + margin) }\n\n    if (name === 'right') { return page.x > ((width  >= 0 ? rect.right : rect.left) - margin) }\n    if (name === 'bottom') { return page.y > ((height >= 0 ? rect.bottom : rect.top) - margin) }\n  }\n\n  // the remaining checks require an element\n  if (!is.element(element)) { return false }\n\n  return is.element(value)\n  // the value is an element to use as a resize handle\n    ? value === element\n    // otherwise check if element matches value as selector\n    : dom.matchesUpTo(element, value, interactableElement)\n}\n\nfunction initCursors (browser: typeof import ('@interactjs/utils/browser').default) {\n  return (browser.isIe9 ? {\n    x : 'e-resize',\n    y : 's-resize',\n    xy: 'se-resize',\n\n    top        : 'n-resize',\n    left       : 'w-resize',\n    bottom     : 's-resize',\n    right      : 'e-resize',\n    topleft    : 'se-resize',\n    bottomright: 'se-resize',\n    topright   : 'ne-resize',\n    bottomleft : 'ne-resize',\n  } : {\n    x : 'ew-resize',\n    y : 'ns-resize',\n    xy: 'nwse-resize',\n\n    top        : 'ns-resize',\n    left       : 'ew-resize',\n    bottom     : 'ns-resize',\n    right      : 'ew-resize',\n    topleft    : 'nwse-resize',\n    bottomright: 'nwse-resize',\n    topright   : 'nesw-resize',\n    bottomleft : 'nesw-resize',\n  })\n}\n\nfunction start ({ iEvent, interaction }: { iEvent: ResizeEvent, interaction: Interaction }) {\n  if (interaction.prepared.name !== 'resize' || !interaction.prepared.edges) {\n    return\n  }\n\n  const startRect = extend({}, interaction.rect)\n  const resizeOptions = interaction.interactable.options.resize\n\n  /*\n   * When using the `resizable.square` or `resizable.preserveAspectRatio` options, resizing from one edge\n   * will affect another. E.g. with `resizable.square`, resizing to make the right edge larger will make\n   * the bottom edge larger by the same amount. We call these 'linked' edges. Any linked edges will depend\n   * on the active edges and the edge being interacted with.\n   */\n  if (resizeOptions.square || resizeOptions.preserveAspectRatio) {\n    const linkedEdges = extend({}, interaction.prepared.edges)\n\n    linkedEdges.top    = linkedEdges.top    || (linkedEdges.left   && !linkedEdges.bottom)\n    linkedEdges.left   = linkedEdges.left   || (linkedEdges.top    && !linkedEdges.right)\n    linkedEdges.bottom = linkedEdges.bottom || (linkedEdges.right  && !linkedEdges.top)\n    linkedEdges.right  = linkedEdges.right  || (linkedEdges.bottom && !linkedEdges.left)\n\n    interaction.prepared._linkedEdges = linkedEdges\n  }\n  else {\n    interaction.prepared._linkedEdges = null\n  }\n\n  // if using `resizable.preserveAspectRatio` option, record aspect ratio at the start of the resize\n  if (resizeOptions.preserveAspectRatio) {\n    interaction.resizeStartAspectRatio = startRect.width / startRect.height\n  }\n\n  interaction.resizeRects = {\n    start     : startRect,\n    current   : {\n      left: startRect.left,\n      right: startRect.right,\n      top: startRect.top,\n      bottom: startRect.bottom,\n    },\n    inverted  : extend({}, startRect),\n    previous  : extend({}, startRect),\n    delta     : {\n      left: 0,\n      right : 0,\n      width : 0,\n      top : 0,\n      bottom: 0,\n      height: 0,\n    },\n  }\n\n  iEvent.edges = interaction.prepared.edges\n  iEvent.rect = interaction.resizeRects.inverted\n  iEvent.deltaRect = interaction.resizeRects.delta\n}\n\nfunction move ({ iEvent, interaction }: { iEvent: ResizeEvent, interaction: Interaction }) {\n  if (interaction.prepared.name !== 'resize' || !interaction.prepared.edges) { return }\n\n  const resizeOptions = interaction.interactable.options.resize\n  const invert = resizeOptions.invert\n  const invertible = invert === 'reposition' || invert === 'negate'\n\n  let edges = interaction.prepared.edges\n\n  // eslint-disable-next-line no-shadow\n  const start      = interaction.resizeRects.start\n  const current    = interaction.resizeRects.current\n  const inverted   = interaction.resizeRects.inverted\n  const deltaRect  = interaction.resizeRects.delta\n  const previous   = extend(interaction.resizeRects.previous, inverted)\n  const originalEdges = edges\n\n  const eventDelta = extend({}, iEvent.delta)\n\n  if (resizeOptions.preserveAspectRatio || resizeOptions.square) {\n    // `resize.preserveAspectRatio` takes precedence over `resize.square`\n    const startAspectRatio = resizeOptions.preserveAspectRatio\n      ? interaction.resizeStartAspectRatio\n      : 1\n\n    edges = interaction.prepared._linkedEdges\n\n    if ((originalEdges.left && originalEdges.bottom) ||\n        (originalEdges.right && originalEdges.top)) {\n      eventDelta.y = -eventDelta.x / startAspectRatio\n    }\n    else if (originalEdges.left || originalEdges.right) { eventDelta.y = eventDelta.x / startAspectRatio }\n    else if (originalEdges.top  || originalEdges.bottom) { eventDelta.x = eventDelta.y * startAspectRatio }\n  }\n\n  // update the 'current' rect without modifications\n  if (edges.top) { current.top    += eventDelta.y }\n  if (edges.bottom) { current.bottom += eventDelta.y }\n  if (edges.left) { current.left   += eventDelta.x }\n  if (edges.right) { current.right  += eventDelta.x }\n\n  if (invertible) {\n    // if invertible, copy the current rect\n    extend(inverted, current)\n\n    if (invert === 'reposition') {\n      // swap edge values if necessary to keep width/height positive\n      let swap\n\n      if (inverted.top > inverted.bottom) {\n        swap = inverted.top\n\n        inverted.top = inverted.bottom\n        inverted.bottom = swap\n      }\n      if (inverted.left > inverted.right) {\n        swap = inverted.left\n\n        inverted.left = inverted.right\n        inverted.right = swap\n      }\n    }\n  }\n  else {\n    // if not invertible, restrict to minimum of 0x0 rect\n    inverted.top    = Math.min(current.top, start.bottom)\n    inverted.bottom = Math.max(current.bottom, start.top)\n    inverted.left   = Math.min(current.left, start.right)\n    inverted.right  = Math.max(current.right, start.left)\n  }\n\n  inverted.width  = inverted.right  - inverted.left\n  inverted.height = inverted.bottom - inverted.top\n\n  for (const edge in inverted) {\n    deltaRect[edge] = inverted[edge] - previous[edge]\n  }\n\n  iEvent.edges = interaction.prepared.edges\n  iEvent.rect = inverted\n  iEvent.deltaRect = deltaRect\n}\n\nfunction end ({ iEvent, interaction }: { iEvent: ResizeEvent, interaction: Interaction }) {\n  if (interaction.prepared.name !== 'resize' || !interaction.prepared.edges) { return }\n\n  iEvent.edges = interaction.prepared.edges\n  iEvent.rect = interaction.resizeRects.inverted\n  iEvent.deltaRect = interaction.resizeRects.delta\n}\n\nfunction updateEventAxes ({ iEvent, interaction }: { iEvent: ResizeEvent, interaction: Interaction }) {\n  if (interaction.prepared.name !== ActionName.Resize || !interaction.resizeAxes) { return }\n\n  const options = interaction.interactable.options\n\n  if (options.resize.square) {\n    if (interaction.resizeAxes === 'y') {\n      iEvent.delta.x = iEvent.delta.y\n    }\n    else {\n      iEvent.delta.y = iEvent.delta.x\n    }\n    iEvent.axes = 'xy'\n  }\n  else {\n    iEvent.axes = interaction.resizeAxes\n\n    if (interaction.resizeAxes === 'x') {\n      iEvent.delta.y = 0\n    }\n    else if (interaction.resizeAxes === 'y') {\n      iEvent.delta.x = 0\n    }\n  }\n}\n\nexport default resize\n","import { Scope } from '../core/scope'\nimport drag from './drag'\nimport drop from './drop/index'\nimport gesture from './gesture'\nimport resize from './resize'\n\nfunction install (scope: Scope) {\n  scope.usePlugin(gesture)\n  scope.usePlugin(resize)\n  scope.usePlugin(drag)\n  scope.usePlugin(drop)\n}\n\nconst id = 'actions'\n\nexport {\n  id,\n  install,\n  gesture,\n  resize,\n  drag,\n  drop,\n}\n","import * as domUtils from '../utils/domUtils'\nimport * as is from '../utils/is'\nimport raf from '../utils/raf'\nimport { getStringOptionResult } from '../utils/rect'\nimport { getWindow } from '../utils/window'\n\ntype Scope = import ('@interactjs/core/scope').Scope\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    autoScroll: typeof autoScroll\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    autoScroll?: typeof autoScroll\n  }\n}\n\ndeclare module '@interactjs/core/defaultOptions' {\n  interface PerActionDefaults {\n    autoScroll?: AutoScrollOptions\n  }\n}\n\nexport interface AutoScrollOptions {\n  container?: Window | HTMLElement\n  margin?: number\n  distance?: number\n  interval?: number\n}\n\nfunction install (scope: Scope) {\n  const {\n    defaults,\n    actions,\n  } = scope\n\n  scope.autoScroll = autoScroll\n  autoScroll.now = () => scope.now()\n\n  actions.eventTypes.push('autoscroll')\n  defaults.perAction.autoScroll = autoScroll.defaults\n}\n\nconst autoScroll = {\n  defaults: {\n    enabled  : false,\n    margin   : 60,\n\n    // the item that is scrolled (Window or HTMLElement)\n    container: null as AutoScrollOptions['container'],\n\n    // the scroll speed in pixels per second\n    speed    : 300,\n  } as AutoScrollOptions,\n\n  now: Date.now,\n\n  interaction: null,\n  i: null,    // the handle returned by window.setInterval\n  x: 0,\n  y: 0, // Direction each pulse is to scroll in\n\n  isScrolling: false,\n  prevTime: 0,\n  margin: 0,\n  speed: 0,\n\n  start (interaction: Interact.Interaction) {\n    autoScroll.isScrolling = true\n    raf.cancel(autoScroll.i)\n\n    interaction.autoScroll = autoScroll\n    autoScroll.interaction = interaction\n    autoScroll.prevTime = autoScroll.now()\n    autoScroll.i = raf.request(autoScroll.scroll)\n  },\n\n  stop () {\n    autoScroll.isScrolling = false\n    if (autoScroll.interaction) {\n      autoScroll.interaction.autoScroll = null\n    }\n    raf.cancel(autoScroll.i)\n  },\n\n  // scroll the window by the values in scroll.x/y\n  scroll () {\n    const { interaction } = autoScroll\n    const { interactable, element } = interaction\n    const options = interactable.options[autoScroll.interaction.prepared.name].autoScroll\n    const container = getContainer(options.container, interactable, element)\n    const now = autoScroll.now()\n    // change in time in seconds\n    const dt = (now - autoScroll.prevTime) / 1000\n    // displacement\n    const s = options.speed * dt\n\n    if (s >= 1) {\n      const scrollBy = {\n        x: autoScroll.x * s,\n        y: autoScroll.y * s,\n      }\n\n      if (scrollBy.x || scrollBy.y) {\n        const prevScroll = getScroll(container)\n\n        if (is.window(container)) {\n          container.scrollBy(scrollBy.x, scrollBy.y)\n        }\n        else if (container) {\n          container.scrollLeft += scrollBy.x\n          container.scrollTop  += scrollBy.y\n        }\n\n        const curScroll = getScroll(container)\n        const delta = {\n          x: curScroll.x - prevScroll.x,\n          y: curScroll.y - prevScroll.y,\n        }\n\n        if (delta.x || delta.y) {\n          interactable.fire({\n            type: 'autoscroll',\n            target: element,\n            interactable,\n            delta,\n            interaction,\n            container,\n          })\n        }\n      }\n\n      autoScroll.prevTime = now\n    }\n\n    if (autoScroll.isScrolling) {\n      raf.cancel(autoScroll.i)\n      autoScroll.i = raf.request(autoScroll.scroll)\n    }\n  },\n  check (interactable, actionName) {\n    const options = interactable.options\n\n    return options[actionName].autoScroll && options[actionName].autoScroll.enabled\n  },\n  onInteractionMove ({ interaction, pointer }) {\n    if (!(interaction.interacting() &&\n          autoScroll.check(interaction.interactable, interaction.prepared.name))) {\n      return\n    }\n\n    if (interaction.simulation) {\n      autoScroll.x = autoScroll.y = 0\n      return\n    }\n\n    let top\n    let right\n    let bottom\n    let left\n\n    const { interactable, element } = interaction\n    const options = interactable.options[interaction.prepared.name].autoScroll\n    const container = getContainer(options.container, interactable, element)\n\n    if (is.window(container)) {\n      left   = pointer.clientX < autoScroll.margin\n      top    = pointer.clientY < autoScroll.margin\n      right  = pointer.clientX > container.innerWidth  - autoScroll.margin\n      bottom = pointer.clientY > container.innerHeight - autoScroll.margin\n    }\n    else {\n      const rect = domUtils.getElementClientRect(container)\n\n      left   = pointer.clientX < rect.left   + autoScroll.margin\n      top    = pointer.clientY < rect.top    + autoScroll.margin\n      right  = pointer.clientX > rect.right  - autoScroll.margin\n      bottom = pointer.clientY > rect.bottom - autoScroll.margin\n    }\n\n    autoScroll.x = (right ? 1 : left ? -1 : 0)\n    autoScroll.y = (bottom ? 1 :  top ? -1 : 0)\n\n    if (!autoScroll.isScrolling) {\n      // set the autoScroll properties to those of the target\n      autoScroll.margin = options.margin\n      autoScroll.speed  = options.speed\n\n      autoScroll.start(interaction)\n    }\n  },\n}\n\nexport function getContainer (value, interactable, element) {\n  return (is.string(value) ? getStringOptionResult(value, interactable, element) : value) || getWindow(element)\n}\n\nexport function getScroll (container) {\n  if (is.window(container)) { container = window.document.body }\n\n  return { x: container.scrollLeft, y: container.scrollTop }\n}\n\nexport function getScrollSize (container) {\n  if (is.window(container)) { container = window.document.body }\n\n  return { x: container.scrollWidth, y: container.scrollHeight }\n}\n\nexport function getScrollSizeDelta ({ interaction, element }, func) {\n  const scrollOptions = interaction && interaction.interactable.options[interaction.prepared.name].autoScroll\n\n  if (!scrollOptions || !scrollOptions.enabled) {\n    func()\n    return { x: 0, y: 0 }\n  }\n\n  const scrollContainer = getContainer(\n    scrollOptions.container,\n    interaction.interactable,\n    element,\n  )\n\n  const prevSize = getScroll(scrollContainer)\n  func()\n  const curSize = getScroll(scrollContainer)\n\n  return {\n    x: curSize.x - prevSize.x,\n    y: curSize.y - prevSize.y,\n  }\n}\n\nexport default {\n  id: 'auto-scroll',\n  install,\n  listeners: {\n    'interactions:new': ({ interaction }) => {\n      interaction.autoScroll = null\n    },\n\n    'interactions:destroy': ({ interaction }) => {\n      interaction.autoScroll = null\n      autoScroll.stop()\n      if (autoScroll.interaction) {\n        autoScroll.interaction = null\n      }\n    },\n\n    'interactions:stop': autoScroll.stop,\n\n    'interactions:action-move': (arg: any) => autoScroll.onInteractionMove(arg),\n  },\n}\n","import { warnOnce } from '../utils/index'\nimport * as is from '../utils/is'\n\n// TODO: there seems to be a @babel/preset-typescript bug causing regular import\n// syntax to remain in js output\ntype Actions = import ('@interactjs/core/scope').Actions\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    getAction: typeof getAction\n    defaultActionChecker: (pointer: any, event: any, interaction: any, element: any) => any\n    styleCursor: typeof styleCursor\n    actionChecker: typeof actionChecker\n    ignoreFrom: (...args: any) => boolean\n    allowFrom: (...args: any) => boolean\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    pointerIsDown: boolean\n  }\n}\n\nfunction install (scope: Interact.Scope) {\n  const {\n    /** @lends Interactable */\n    Interactable, // tslint:disable-line no-shadowed-variable\n    actions,\n  } = scope\n\n  Interactable.prototype.getAction = getAction\n\n  /**\n   * ```js\n   * interact(element, { ignoreFrom: document.getElementById('no-action') })\n   * // or\n   * interact(element).ignoreFrom('input, textarea, a')\n   * ```\n   * @deprecated\n   * If the target of the `mousedown`, `pointerdown` or `touchstart` event or any\n   * of it's parents match the given CSS selector or Element, no\n   * drag/resize/gesture is started.\n   *\n   * Don't use this method. Instead set the `ignoreFrom` option for each action\n   * or for `pointerEvents`\n   *\n   * @example\n   * interact(targett)\n   *   .draggable({\n   *     ignoreFrom: 'input, textarea, a[href]'',\n   *   })\n   *   .pointerEvents({\n   *     ignoreFrom: '[no-pointer]',\n   *   })\n   *\n   * @param {string | Element | null} [newValue] a CSS selector string, an\n   * Element or `null` to not ignore any elements\n   * @return {string | Element | object} The current ignoreFrom value or this\n   * Interactable\n   */\n  Interactable.prototype.ignoreFrom = warnOnce(function (this: Interact.Interactable, newValue) {\n    return this._backCompatOption('ignoreFrom', newValue)\n  }, 'Interactable.ignoreFrom() has been deprecated. Use Interactble.draggable({ignoreFrom: newValue}).')\n\n  /**\n   * @deprecated\n   *\n   * A drag/resize/gesture is started only If the target of the `mousedown`,\n   * `pointerdown` or `touchstart` event or any of it's parents match the given\n   * CSS selector or Element.\n   *\n   * Don't use this method. Instead set the `allowFrom` option for each action\n   * or for `pointerEvents`\n   *\n   * @example\n   * interact(targett)\n   *   .resizable({\n   *     allowFrom: '.resize-handle',\n   *   .pointerEvents({\n   *     allowFrom: '.handle',,\n   *   })\n   *\n   * @param {string | Element | null} [newValue] a CSS selector string, an\n   * Element or `null` to allow from any element\n   * @return {string | Element | object} The current allowFrom value or this\n   * Interactable\n   */\n  Interactable.prototype.allowFrom = warnOnce(function (this: Interact.Interactable, newValue) {\n    return this._backCompatOption('allowFrom', newValue)\n  }, 'Interactable.allowFrom() has been deprecated. Use Interactble.draggable({allowFrom: newValue}).')\n\n  /**\n   * ```js\n   * interact('.resize-drag')\n   *   .resizable(true)\n   *   .draggable(true)\n   *   .actionChecker(function (pointer, event, action, interactable, element, interaction) {\n   *\n   *   if (interact.matchesSelector(event.target, '.drag-handle')) {\n   *     // force drag with handle target\n   *     action.name = drag\n   *   }\n   *   else {\n   *     // resize from the top and right edges\n   *     action.name  = 'resize'\n   *     action.edges = { top: true, right: true }\n   *   }\n   *\n   *   return action\n   * })\n   * ```\n   *\n   * Returns or sets the function used to check action to be performed on\n   * pointerDown\n   *\n   * @param {function | null} [checker] A function which takes a pointer event,\n   * defaultAction string, interactable, element and interaction as parameters\n   * and returns an object with name property 'drag' 'resize' or 'gesture' and\n   * optionally an `edges` object with boolean 'top', 'left', 'bottom' and right\n   * props.\n   * @return {Function | Interactable} The checker function or this Interactable\n   */\n  Interactable.prototype.actionChecker = actionChecker\n\n  /**\n   * Returns or sets whether the the cursor should be changed depending on the\n   * action that would be performed if the mouse were pressed and dragged.\n   *\n   * @param {boolean} [newValue]\n   * @return {boolean | Interactable} The current setting or this Interactable\n   */\n  Interactable.prototype.styleCursor = styleCursor\n\n  Interactable.prototype.defaultActionChecker = function (this: Interact.Interactable, pointer, event, interaction, element) {\n    return defaultActionChecker(this, pointer, event, interaction, element, actions)\n  }\n}\n\nfunction getAction (\n  this: Interact.Interactable,\n  pointer: Interact.PointerType,\n  event: Interact.PointerEventType,\n  interaction: Interact.Interaction,\n  element: Interact.Element,\n): Interact.ActionProps {\n  const action = this.defaultActionChecker(pointer, event, interaction, element)\n\n  if (this.options.actionChecker) {\n    return this.options.actionChecker(pointer, event, action, this, element, interaction)\n  }\n\n  return action\n}\n\nfunction defaultActionChecker (\n  interactable: Interact.Interactable,\n  pointer: Interact.PointerType,\n  event: Interact.PointerEventType,\n  interaction: Interact.Interaction,\n  element: Interact.Element,\n  actions: Actions,\n) {\n  const rect = interactable.getRect(element)\n  const buttons = (event as MouseEvent).buttons || ({\n    0: 1,\n    1: 4,\n    3: 8,\n    4: 16,\n  })[(event as MouseEvent).button as 0 | 1 | 3 | 4]\n  let action = null\n\n  for (const actionName of actions.names) {\n    // check mouseButton setting if the pointer is down\n    if (interaction.pointerIsDown &&\n        /mouse|pointer/.test(interaction.pointerType) &&\n      (buttons & interactable.options[actionName].mouseButtons) === 0) {\n      continue\n    }\n\n    action = (actions[actionName as keyof Actions] as any).checker(pointer, event, interactable, element, interaction, rect)\n\n    if (action) {\n      return action\n    }\n  }\n}\n\nfunction styleCursor (this: Interact.Interactable, newValue?: boolean) {\n  if (is.bool(newValue)) {\n    this.options.styleCursor = newValue\n\n    return this\n  }\n\n  if (newValue === null) {\n    delete this.options.styleCursor\n\n    return this\n  }\n\n  return this.options.styleCursor\n}\n\nfunction actionChecker (this: Interact.Interactable, checker: any) {\n  if (is.func(checker)) {\n    this.options.actionChecker = checker\n\n    return this\n  }\n\n  if (checker === null) {\n    delete this.options.actionChecker\n\n    return this\n  }\n\n  return this.options.actionChecker\n}\n\nexport default {\n  id: 'auto-start/interactableMethods',\n  install,\n}\n","import * as utils from '../utils/index'\nimport InteractableMethods from './InteractableMethods'\n\ndeclare module '@interactjs/interact/interact' {\n  interface InteractStatic {\n    maxInteractions: (newValue: any) => any\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    autoStart: AutoStart\n    maxInteractions: (...args: any) => any\n  }\n}\n\ndeclare module '@interactjs/core/defaultOptions' {\n  interface BaseDefaults {\n    actionChecker?\n    styleCursor?\n  }\n\n  interface PerActionDefaults {\n    manualStart?: boolean\n    max?: number\n    maxPerElement?: number\n    allowFrom?: string | Interact.Element\n    ignoreFrom?: string | Interact.Element\n\n    // only allow left button by default\n    // see https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons#Return_value\n    mouseButtons?: 0 | 1 | 2 | 4 | 16\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface SignalArgs {\n    'autoStart:before-start': Interact.SignalArgs['interactions:move']\n    'autoStart:prepared': { interaction: Interact.Interaction }\n  }\n}\n\nexport interface AutoStart {\n  // Allow this many interactions to happen simultaneously\n  maxInteractions: number\n  withinInteractionLimit: typeof withinInteractionLimit\n  cursorElement: Interact.Element\n}\n\nfunction install (scope: Interact.Scope) {\n  const {\n    interact,\n    defaults,\n  } = scope\n\n  scope.usePlugin(InteractableMethods)\n\n  defaults.base.actionChecker = null\n  defaults.base.styleCursor = true\n\n  utils.extend(defaults.perAction, {\n    manualStart: false,\n    max: Infinity,\n    maxPerElement: 1,\n    allowFrom:  null,\n    ignoreFrom: null,\n\n    // only allow left button by default\n    // see https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons#Return_value\n    mouseButtons: 1,\n  })\n\n  /**\n   * Returns or sets the maximum number of concurrent interactions allowed.  By\n   * default only 1 interaction is allowed at a time (for backwards\n   * compatibility). To allow multiple interactions on the same Interactables and\n   * elements, you need to enable it in the draggable, resizable and gesturable\n   * `'max'` and `'maxPerElement'` options.\n   *\n   * @alias module:interact.maxInteractions\n   *\n   * @param {number} [newValue] Any number. newValue <= 0 means no interactions.\n   */\n  interact.maxInteractions = newValue => maxInteractions(newValue, scope)\n\n  scope.autoStart = {\n    // Allow this many interactions to happen simultaneously\n    maxInteractions: Infinity,\n    withinInteractionLimit,\n    cursorElement: null,\n  }\n}\n\nfunction prepareOnDown ({ interaction, pointer, event, eventTarget }: Interact.SignalArgs['interactions:down'], scope: Interact.Scope) {\n  if (interaction.interacting()) { return }\n\n  const actionInfo = getActionInfo(interaction, pointer, event, eventTarget, scope)\n  prepare(interaction, actionInfo, scope)\n}\n\nfunction prepareOnMove ({ interaction, pointer, event, eventTarget }: Interact.SignalArgs['interactions:move'], scope: Interact.Scope) {\n  if (interaction.pointerType !== 'mouse' ||\n      interaction.pointerIsDown ||\n      interaction.interacting()) { return }\n\n  const actionInfo = getActionInfo(interaction, pointer, event, eventTarget as Interact.Element, scope)\n  prepare(interaction, actionInfo, scope)\n}\n\nfunction startOnMove (arg: Interact.SignalArgs['interactions:move'], scope: Interact.Scope) {\n  const { interaction } = arg\n\n  if (!interaction.pointerIsDown ||\n      interaction.interacting() ||\n      !interaction.pointerWasMoved ||\n      !interaction.prepared.name) {\n    return\n  }\n\n  scope.fire('autoStart:before-start', arg)\n\n  const { interactable } = interaction\n\n  if (interaction.prepared.name && interactable) {\n    // check manualStart and interaction limit\n    if (interactable.options[interaction.prepared.name].manualStart ||\n        !withinInteractionLimit(interactable, interaction.element, interaction.prepared, scope)) {\n      interaction.stop()\n    }\n    else {\n      interaction.start(interaction.prepared, interactable, interaction.element)\n      setInteractionCursor(interaction, scope)\n    }\n  }\n}\n\nfunction clearCursorOnStop ({ interaction }: { interaction: Interact.Interaction }, scope: Interact.Scope) {\n  const { interactable } = interaction\n\n  if (interactable && interactable.options.styleCursor) {\n    setCursor(interaction.element, '', scope)\n  }\n}\n\n// Check if the current interactable supports the action.\n// If so, return the validated action. Otherwise, return null\nfunction validateAction (\n  action: Interact.ActionProps,\n  interactable: Interact.Interactable,\n  element: Interact.Element,\n  eventTarget: Interact.EventTarget,\n  scope: Interact.Scope,\n) {\n  if (interactable.testIgnoreAllow(interactable.options[action.name], element, eventTarget) &&\n      interactable.options[action.name].enabled &&\n      withinInteractionLimit(interactable, element, action, scope)) {\n    return action\n  }\n\n  return null\n}\n\nfunction validateMatches (\n  interaction: Interact.Interaction,\n  pointer,\n  event,\n  matches: Interact.Interactable[],\n  matchElements: Interact.Element[],\n  eventTarget: Interact.EventTarget,\n  scope: Interact.Scope,\n) {\n  for (let i = 0, len = matches.length; i < len; i++) {\n    const match = matches[i]\n    const matchElement = matchElements[i]\n    const matchAction = match.getAction(pointer, event, interaction, matchElement)\n\n    if (!matchAction) { continue }\n\n    const action = validateAction(\n      matchAction,\n      match,\n      matchElement,\n      eventTarget,\n      scope)\n\n    if (action) {\n      return {\n        action,\n        interactable: match,\n        element: matchElement,\n      }\n    }\n  }\n\n  return { action: null, interactable: null, element: null }\n}\n\nfunction getActionInfo (\n  interaction: Interact.Interaction,\n  pointer: Interact.PointerType,\n  event: Interact.PointerEventType,\n  eventTarget: Interact.EventTarget,\n  scope: Interact.Scope,\n) {\n  let matches = []\n  let matchElements = []\n\n  let element = eventTarget\n\n  function pushMatches (interactable) {\n    matches.push(interactable)\n    matchElements.push(element)\n  }\n\n  while (utils.is.element(element)) {\n    matches = []\n    matchElements = []\n\n    scope.interactables.forEachMatch(element, pushMatches)\n\n    const actionInfo = validateMatches(interaction, pointer, event, matches, matchElements, eventTarget, scope)\n\n    if (actionInfo.action &&\n      !actionInfo.interactable.options[actionInfo.action.name].manualStart) {\n      return actionInfo\n    }\n\n    element = utils.dom.parentNode(element)\n  }\n\n  return { action: null, interactable: null, element: null }\n}\n\nfunction prepare (\n  interaction: Interact.Interaction,\n  { action, interactable, element }: {\n    action: Interact.ActionProps\n    interactable: Interact.Interactable\n    element: Interact.Element\n  },\n  scope: Interact.Scope,\n) {\n  action = action || { name: null }\n\n  // clear previous target element cursor\n  if (interaction.interactable && interaction.interactable.options.styleCursor) {\n    setCursor(interaction.element, '', scope)\n  }\n\n  interaction.interactable = interactable\n  interaction.element = element\n  utils.copyAction(interaction.prepared, action)\n\n  interaction.rect = interactable && action.name\n    ? interactable.getRect(element)\n    : null\n\n  setInteractionCursor(interaction, scope)\n\n  scope.fire('autoStart:prepared', { interaction })\n}\n\nfunction withinInteractionLimit (interactable: Interact.Interactable, element: Interact.Element, action, scope: Interact.Scope) {\n  const options = interactable.options\n  const maxActions = options[action.name].max\n  const maxPerElement = options[action.name].maxPerElement\n  const autoStartMax = scope.autoStart.maxInteractions\n  let activeInteractions = 0\n  let interactableCount = 0\n  let elementCount = 0\n\n  // no actions if any of these values == 0\n  if (!(maxActions && maxPerElement && autoStartMax)) { return false }\n\n  for (const interaction of scope.interactions.list) {\n    const otherAction = interaction.prepared.name\n\n    if (!interaction.interacting()) { continue }\n\n    activeInteractions++\n\n    if (activeInteractions >= autoStartMax) {\n      return false\n    }\n\n    if (interaction.interactable !== interactable) { continue }\n\n    interactableCount += otherAction === action.name ? 1 : 0\n\n    if (interactableCount >= maxActions) {\n      return false\n    }\n\n    if (interaction.element === element) {\n      elementCount++\n\n      if (otherAction === action.name && elementCount >= maxPerElement) {\n        return false\n      }\n    }\n  }\n\n  return autoStartMax > 0\n}\n\nfunction maxInteractions (newValue, scope: Interact.Scope) {\n  if (utils.is.number(newValue)) {\n    scope.autoStart.maxInteractions = newValue\n\n    return this\n  }\n\n  return scope.autoStart.maxInteractions\n}\n\nfunction setCursor (element: Interact.Element, cursor, scope: Interact.Scope) {\n  if (scope.autoStart.cursorElement) {\n    scope.autoStart.cursorElement.style.cursor = ''\n  }\n\n  element.ownerDocument.documentElement.style.cursor = cursor\n  element.style.cursor = cursor\n  scope.autoStart.cursorElement = cursor ? element : null\n}\n\nfunction setInteractionCursor (interaction: Interact.Interaction, scope: Interact.Scope) {\n  const { interactable, element, prepared } = interaction\n\n  if (!(interaction.pointerType === 'mouse' && interactable && interactable.options.styleCursor)) {\n    return\n  }\n\n  let cursor = ''\n\n  if (prepared.name) {\n    const cursorChecker: Interact.CursorChecker = interactable.options[prepared.name].cursorChecker\n\n    if (utils.is.func(cursorChecker)) {\n      cursor = cursorChecker(prepared, interactable, element, interaction._interacting)\n    }\n    else {\n      cursor = scope.actions[prepared.name].getCursor(prepared)\n    }\n  }\n\n  setCursor(interaction.element, cursor || '', scope)\n}\n\nexport default {\n  id: 'auto-start/base',\n  install,\n  listeners: {\n    'interactions:down': prepareOnDown,\n    'interactions:move': (arg, scope) => {\n      prepareOnMove(arg, scope)\n      startOnMove(arg, scope)\n    },\n    'interactions:stop': clearCursorOnStop,\n  },\n  before: 'ations',\n  maxInteractions,\n  withinInteractionLimit,\n  validateAction,\n} as Interact.Plugin\n","import { ActionName } from '../core/scope'\nimport { parentNode } from '../utils/domUtils'\nimport * as is from '../utils/is'\nimport autoStart from './base'\n\nfunction beforeStart ({ interaction, eventTarget, dx, dy }: Interact.SignalArgs['interactions:move'], scope: Interact.Scope) {\n  if (interaction.prepared.name !== 'drag') { return }\n\n  // check if a drag is in the correct axis\n  const absX = Math.abs(dx)\n  const absY = Math.abs(dy)\n  const targetOptions = interaction.interactable.options.drag\n  const startAxis = targetOptions.startAxis\n  const currentAxis = (absX > absY ? 'x' : absX < absY ? 'y' : 'xy')\n\n  interaction.prepared.axis = targetOptions.lockAxis === 'start'\n    ? currentAxis[0]  as 'x' | 'y' // always lock to one axis even if currentAxis === 'xy'\n    : targetOptions.lockAxis\n\n  // if the movement isn't in the startAxis of the interactable\n  if (currentAxis !== 'xy' && startAxis !== 'xy' && startAxis !== currentAxis) {\n    // cancel the prepared action\n    interaction.prepared.name = null\n\n    // then try to get a drag from another ineractable\n    let element = eventTarget\n\n    const getDraggable = function (interactable) {\n      if (interactable === interaction.interactable) { return }\n\n      const options = interaction.interactable.options.drag\n\n      if (!options.manualStart &&\n          interactable.testIgnoreAllow(options, element, eventTarget)) {\n        const action = interactable.getAction(\n          interaction.downPointer, interaction.downEvent, interaction, element)\n\n        if (action &&\n            action.name === ActionName.Drag &&\n            checkStartAxis(currentAxis, interactable) &&\n            autoStart.validateAction(action, interactable, element, eventTarget, scope)) {\n          return interactable\n        }\n      }\n    }\n\n    // check all interactables\n    while (is.element(element)) {\n      const interactable = scope.interactables.forEachMatch(element, getDraggable)\n\n      if (interactable) {\n        interaction.prepared.name = ActionName.Drag\n        interaction.interactable = interactable\n        interaction.element = element\n        break\n      }\n\n      element = parentNode(element)\n    }\n  }\n}\n\nfunction checkStartAxis (startAxis, interactable) {\n  if (!interactable) { return false }\n\n  const thisAxis = interactable.options[ActionName.Drag].startAxis\n\n  return (startAxis === 'xy' || thisAxis === 'xy' || thisAxis === startAxis)\n}\n\nexport default {\n  id: 'auto-start/dragAxis',\n  listeners: { 'autoStart:before-start': beforeStart },\n}\n","import basePlugin from './base'\n\ndeclare module '@interactjs/core/defaultOptions' {\n  interface PerActionDefaults {\n    hold?: number\n    delay?: number\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    autoStartHoldTimer?: any\n  }\n}\n\nfunction install (scope: Interact.Scope) {\n  const {\n    defaults,\n  } = scope\n\n  scope.usePlugin(basePlugin)\n\n  defaults.perAction.hold = 0\n  defaults.perAction.delay = 0\n}\n\nfunction getHoldDuration (interaction) {\n  const actionName = interaction.prepared && interaction.prepared.name\n\n  if (!actionName) { return null }\n\n  const options = interaction.interactable.options\n\n  return options[actionName].hold || options[actionName].delay\n}\n\nexport default {\n  id: 'auto-start/hold',\n  install,\n  listeners: {\n    'interactions:new': ({ interaction }) => {\n      interaction.autoStartHoldTimer = null\n    },\n\n    'autoStart:prepared': ({ interaction }) => {\n      const hold = getHoldDuration(interaction)\n\n      if (hold > 0) {\n        interaction.autoStartHoldTimer = setTimeout(() => {\n          interaction.start(interaction.prepared, interaction.interactable, interaction.element)\n        }, hold)\n      }\n    },\n\n    'interactions:move': ({ interaction, duplicate }) => {\n      if (interaction.pointerWasMoved && !duplicate) {\n        clearTimeout(interaction.autoStartHoldTimer)\n      }\n    },\n\n    // prevent regular down->move autoStart\n    'autoStart:before-start': ({ interaction }) => {\n      const hold = getHoldDuration(interaction)\n\n      if (hold > 0) {\n        interaction.prepared.name = null\n      }\n    },\n  },\n  getHoldDuration,\n}\n","import autoStart from './base'\nimport dragAxis from './dragAxis'\nimport hold from './hold'\n\nfunction install (scope) {\n  scope.usePlugin(autoStart)\n  scope.usePlugin(hold)\n  scope.usePlugin(dragAxis)\n}\n\nconst id = 'auto-start'\n\nexport {\n  id,\n  install,\n  autoStart,\n  hold,\n  dragAxis,\n}\n","import { matchesSelector, nodeContains } from '../utils/domUtils'\nimport events from '../utils/events'\nimport * as is from '../utils/is'\nimport { getWindow } from '../utils/window'\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    preventDefault: typeof preventDefault\n    checkAndPreventDefault: (event: Event) => void\n  }\n}\n\nfunction preventDefault (this: Interact.Interactable, newValue?: 'always' | 'never' | 'auto') {\n  if (/^(always|never|auto)$/.test(newValue)) {\n    this.options.preventDefault = newValue\n    return this\n  }\n\n  if (is.bool(newValue)) {\n    this.options.preventDefault = newValue ? 'always' : 'never'\n    return this\n  }\n\n  return this.options.preventDefault\n}\n\nfunction checkAndPreventDefault (interactable: Interact.Interactable, scope: Interact.Scope, event: Event) {\n  const setting = interactable.options.preventDefault\n\n  if (setting === 'never') { return }\n\n  if (setting === 'always') {\n    event.preventDefault()\n    return\n  }\n\n  // setting === 'auto'\n\n  // if the browser supports passive event listeners and isn't running on iOS,\n  // don't preventDefault of touch{start,move} events. CSS touch-action and\n  // user-select should be used instead of calling event.preventDefault().\n  if (events.supportsPassive && /^touch(start|move)$/.test(event.type)) {\n    const doc = getWindow(event.target).document\n    const docOptions = scope.getDocOptions(doc)\n\n    if (!(docOptions && docOptions.events) || docOptions.events.passive !== false) {\n      return\n    }\n  }\n\n  // don't preventDefault of pointerdown events\n  if (/^(mouse|pointer|touch)*(down|start)/i.test(event.type)) {\n    return\n  }\n\n  // don't preventDefault on editable elements\n  if (is.element(event.target) &&\n      matchesSelector(event.target, 'input,select,textarea,[contenteditable=true],[contenteditable=true] *')) {\n    return\n  }\n\n  event.preventDefault()\n}\n\nfunction onInteractionEvent ({ interaction, event }: { interaction: Interact.Interaction, event: Interact.PointerEventType }) {\n  if (interaction.interactable) {\n    interaction.interactable.checkAndPreventDefault(event as Event)\n  }\n}\n\nexport function install (scope: Interact.Scope) {\n  /** @lends Interactable */\n  const { Interactable } = scope\n\n  /**\n   * Returns or sets whether to prevent the browser's default behaviour in\n   * response to pointer events. Can be set to:\n   *  - `'always'` to always prevent\n   *  - `'never'` to never prevent\n   *  - `'auto'` to let interact.js try to determine what would be best\n   *\n   * @param {string} [newValue] `'always'`, `'never'` or `'auto'`\n   * @return {string | Interactable} The current setting or this Interactable\n   */\n  Interactable.prototype.preventDefault = preventDefault\n\n  Interactable.prototype.checkAndPreventDefault = function (event) {\n    return checkAndPreventDefault(this, scope, event)\n  }\n\n  // prevent native HTML5 drag on interact.js target elements\n  scope.interactions.docEvents.push({\n    type: 'dragstart',\n    listener (event) {\n      for (const interaction of scope.interactions.list) {\n        if (interaction.element &&\n          (interaction.element === event.target ||\n           nodeContains(interaction.element, event.target))) {\n          interaction.interactable.checkAndPreventDefault(event)\n          return\n        }\n      }\n    },\n  })\n}\n\nexport default {\n  id: 'core/interactablePreventDefault',\n  install,\n  listeners: ['down', 'move', 'up', 'cancel'].reduce((acc, eventType) => {\n    acc[`interactions:${eventType}`] = onInteractionEvent\n    return acc\n  }, {}),\n}\n","/* eslint-disable no-console */\n/* global process */\nimport domObjects from '../utils/domObjects'\nimport { parentNode } from '../utils/domUtils'\nimport extend from '../utils/extend'\nimport * as is from '../utils/is'\nimport win from '../utils/window'\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    logger: Logger\n  }\n}\n\ndeclare module '@interactjs/core/defaultOptions' {\n  interface BaseDefaults {\n    devTools?: DevToolsOptions\n  }\n}\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    devTools?: Interact.OptionMethod<DevToolsOptions>\n  }\n}\n\nexport interface DevToolsOptions {\n  ignore: { [P in keyof typeof CheckName]?: boolean }\n}\n\nexport interface Logger {\n  warn: (...args: any[]) => void\n  error: (...args: any[]) => void\n  log: (...args: any[]) => void\n}\n\nexport interface Check {\n  name: string\n  text: string\n  perform: (interaction: Interact.Interaction) => boolean\n  getInfo: (interaction: Interact.Interaction) => any[]\n}\n\nenum CheckName {\n  touchAction = '',\n  boxSizing = '',\n  noListeners = '',\n}\n\nconst prefix  = '[interact.js] '\nconst links = {\n  touchAction: 'https://developer.mozilla.org/en-US/docs/Web/CSS/touch-action',\n  boxSizing: 'https://developer.mozilla.org/en-US/docs/Web/CSS/box-sizing',\n}\n\nconst isProduction = process.env.NODE_ENV === 'production'\n\n// eslint-disable-next-line no-restricted-syntax\nfunction install (scope: Interact.Scope, { logger }: { logger?: Logger } = {}) {\n  const {\n    Interactable,\n    defaults,\n  } = scope\n\n  scope.logger = logger || console\n\n  defaults.base.devTools = {\n    ignore: {},\n  }\n\n  Interactable.prototype.devTools = function (options?) {\n    if (options) {\n      extend(this.options.devTools, options)\n      return this\n    }\n\n    return this.options.devTools\n  }\n}\n\nconst checks: Check[] = [\n  {\n    name: 'touchAction',\n    perform ({ element }) {\n      return !parentHasStyle(element, 'touchAction', /pan-|pinch|none/)\n    },\n    getInfo ({ element }) {\n      return [\n        element,\n        links.touchAction,\n      ]\n    },\n    text: 'Consider adding CSS \"touch-action: none\" to this element\\n',\n  },\n\n  {\n    name: 'boxSizing',\n    perform (interaction) {\n      const { element } = interaction\n\n      return interaction.prepared.name === 'resize' &&\n        element instanceof domObjects.HTMLElement &&\n        !hasStyle(element, 'boxSizing', /border-box/)\n    },\n    text: 'Consider adding CSS \"box-sizing: border-box\" to this resizable element',\n    getInfo ({ element }) {\n      return [\n        element,\n        links.boxSizing,\n      ]\n    },\n  },\n\n  {\n    name: 'noListeners',\n    perform (interaction) {\n      const actionName = interaction.prepared.name\n      const moveListeners = interaction.interactable.events.types[`${actionName}move`] || []\n\n      return !moveListeners.length\n    },\n    getInfo (interaction) {\n      return [\n        interaction.prepared.name,\n        interaction.interactable,\n      ]\n    },\n    text: 'There are no listeners set for this action',\n  },\n]\n\nfunction hasStyle (element: HTMLElement, prop: keyof CSSStyleDeclaration, styleRe: RegExp) {\n  return styleRe.test(element.style[prop] || win.window.getComputedStyle(element)[prop])\n}\n\nfunction parentHasStyle (element: Interact.Element, prop: keyof CSSStyleDeclaration, styleRe: RegExp) {\n  let parent = element as HTMLElement\n\n  while (is.element(parent)) {\n    if (hasStyle(parent, prop, styleRe)) {\n      return true\n    }\n\n    parent = parentNode(parent)\n  }\n\n  return false\n}\n\nconst id = 'dev-tools'\nconst defaultExport = isProduction\n  ? { id, install: () => {} }\n  : {\n    id,\n    install,\n    listeners: {\n      'interactions:action-start': ({ interaction }, scope) => {\n        for (const check of checks) {\n          const options = interaction.interactable && interaction.interactable.options[interaction.prepared.name]\n\n          if (\n            !(options && options.devTools && options.devTools.ignore[check.name]) &&\n            check.perform(interaction)\n          ) {\n            scope.logger.warn(prefix + check.text, ...check.getInfo(interaction))\n          }\n        }\n      },\n    },\n    checks,\n    CheckName,\n    links,\n    prefix,\n  }\n\nexport default defaultExport\n","import extend from '../utils/extend'\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    modifiers?: any\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    modifiers?: {\n      states: ModifierState[]\n      offsets: any\n      startOffset: any\n      startDelta: Interact.Point\n      result?: {\n        delta: {\n          x: number\n          y: number\n        }\n        rectDelta: {\n          left: number\n          right: number\n          top: number\n          bottom: number\n        }\n        coords: Interact.Point\n        changed: boolean\n      }\n      endPrevented: boolean\n    }\n  }\n}\n\ndeclare module '@interactjs/core/defaultOptions' {\n  interface PerActionDefaults {\n    modifiers?: Modifier[]\n  }\n}\n\nexport interface Modifier<\n  Defaults = any,\n  State extends ModifierState = any,\n  Name extends string = any\n> {\n  options?: Defaults\n  methods: {\n    start?: (arg: ModifierArg<State>) => void\n    set: (arg: ModifierArg<State>) => void\n    beforeEnd?: (arg: ModifierArg<State>) => boolean\n    stop?: (arg: ModifierArg<State>) => void\n  }\n  name?: Name\n}\n\nexport type ModifierState<\n  Defaults = {},\n  StateProps extends { [prop: string]: any } = {},\n  Name extends string = any\n> = {\n  options: Defaults\n  methods?: Modifier<Defaults>['methods']\n  index?: number\n  name?: Name\n} & StateProps\n\nexport interface ModifierArg<State extends ModifierState = ModifierState> {\n  interaction: Interact.Interaction\n  interactable: Interact.Interactable\n  phase: Interact.EventPhase\n  rect: Interact.Rect\n  states?: State[]\n  state?: State\n  element: Interact.Element\n  pageCoords?: Interact.Point\n  prevCoords?: Interact.Point\n  coords?: Interact.Point\n  startOffset?: Interact.Rect\n  preEnd?: boolean\n  requireEndOnly?: boolean\n}\n\nexport interface ModifierModule<\n  Defaults extends { enabled?: boolean },\n  State extends ModifierState,\n> {\n  defaults?: Defaults\n  start? (arg: ModifierArg<State>): void\n  set? (arg: ModifierArg<State>): void\n  beforeEnd? (arg: ModifierArg<State>): boolean\n  stop? (arg: ModifierArg<State>): void\n}\n\nfunction start (\n  { interaction, phase }: { interaction: Interact.Interaction, phase: Interact.EventPhase },\n  pageCoords: Interact.Point,\n  prevCoords: Interact.Point,\n) {\n  const { interactable, element } = interaction\n  const modifierList = getModifierList(interaction)\n  const states = prepareStates(modifierList)\n\n  const rect = extend({} as { [key: string]: any }, interaction.rect)\n\n  if (!('width'  in rect)) { rect.width  = rect.right  - rect.left }\n  if (!('height' in rect)) { rect.height = rect.bottom - rect.top  }\n\n  const startOffset = getRectOffset(rect, pageCoords)\n\n  interaction.modifiers.startOffset = startOffset\n  interaction.modifiers.startDelta = { x: 0, y: 0 }\n\n  const arg: ModifierArg<any> = {\n    interaction,\n    interactable,\n    element,\n    pageCoords,\n    phase,\n    rect,\n    startOffset,\n    states,\n    preEnd: false,\n    requireEndOnly: false,\n    prevCoords: prevCoords || (interaction.modifiers.result\n      ? interaction.modifiers.result.coords\n      : interaction.coords.prev.page),\n  }\n\n  interaction.modifiers.states = states\n  interaction.modifiers.result = null\n  startAll(arg)\n\n  const result = interaction.modifiers.result = setAll(arg)\n\n  return result\n}\n\nexport function startAll (arg: ModifierArg<any>) {\n  const states: ModifierState[] = arg.states\n\n  for (const state of states) {\n    if (state.methods.start) {\n      arg.state = state\n      state.methods.start(arg)\n    }\n  }\n}\n\nexport function setAll (arg: ModifierArg) {\n  const {\n    prevCoords,\n    phase,\n    preEnd,\n    requireEndOnly,\n    rect,\n    states,\n  } = arg\n\n  arg.coords = extend({}, arg.pageCoords)\n  arg.rect = extend({}, rect)\n\n  const result = {\n    delta: { x: 0, y: 0 },\n    rectDelta: {\n      left  : 0,\n      right : 0,\n      top   : 0,\n      bottom: 0,\n    },\n    coords: arg.coords,\n    changed: true,\n  }\n\n  for (const state of states) {\n    const { options } = state\n\n    if (!state.methods.set ||\n      !shouldDo(options, preEnd, requireEndOnly, phase)) { continue }\n\n    arg.state = state\n    state.methods.set(arg)\n  }\n\n  result.delta.x = arg.coords.x - arg.pageCoords.x\n  result.delta.y = arg.coords.y - arg.pageCoords.y\n\n  let rectChanged = false\n\n  if (rect) {\n    result.rectDelta.left   = arg.rect.left - rect.left\n    result.rectDelta.right  = arg.rect.right - rect.right\n    result.rectDelta.top    = arg.rect.top - rect.top\n    result.rectDelta.bottom = arg.rect.bottom - rect.bottom\n\n    rectChanged = result.rectDelta.left !== 0 ||\n      result.rectDelta.right !== 0 ||\n      result.rectDelta.top !== 0 ||\n      result.rectDelta.bottom !== 0\n  }\n\n  result.changed = !prevCoords || prevCoords.x !== result.coords.x ||\n    prevCoords.y !== result.coords.y ||\n    rectChanged\n\n  return result\n}\n\nfunction beforeMove (arg: Partial<Interact.DoPhaseArg> & {\n  interaction: Interact.Interaction\n  phase: Interact.EventPhase\n  preEnd?: boolean\n  skipModifiers?: number\n  prevCoords?: Interact.Point\n  modifiedCoords?: Interact.Point\n}): void | false {\n  const { interaction, phase, preEnd, skipModifiers } = arg\n  const { interactable, element } = interaction\n\n  const states = skipModifiers\n    ? interaction.modifiers.states.slice(skipModifiers)\n    : interaction.modifiers.states\n  const prevCoords = arg.prevCoords || (interaction.modifiers.result\n    ? interaction.modifiers.result.coords\n    : interaction.coords.prev.page)\n\n  const modifierResult = setAll({\n    interaction,\n    interactable,\n    element,\n    preEnd,\n    phase,\n    pageCoords: arg.modifiedCoords || interaction.coords.cur.page,\n    prevCoords,\n    rect: interaction.rect,\n    states,\n    requireEndOnly: false,\n  })\n\n  interaction.modifiers.result = modifierResult\n\n  // don't fire an action move if a modifier would keep the event in the same\n  // cordinates as before\n  if (!modifierResult.changed && interaction.interacting()) {\n    return false\n  }\n\n  if (arg.modifiedCoords) {\n    const { page } = interaction.coords.cur\n    const adjustment = {\n      x: arg.modifiedCoords.x - page.x,\n      y: arg.modifiedCoords.y - page.y,\n    }\n\n    modifierResult.coords.x += adjustment.x\n    modifierResult.coords.y += adjustment.y\n    modifierResult.delta.x += adjustment.x\n    modifierResult.delta.y += adjustment.y\n  }\n  setCoords(arg)\n}\n\nfunction beforeEnd (arg: Interact.DoPhaseArg & { noPreEnd?: boolean, state?: ModifierState }): void | false {\n  const { interaction, event, noPreEnd } = arg\n  const states = interaction.modifiers.states\n\n  if (noPreEnd || !states || !states.length) {\n    return\n  }\n\n  let didPreEnd = false\n\n  for (const state of states) {\n    arg.state = state\n    const { options, methods } = state\n\n    const endResult = methods.beforeEnd && methods.beforeEnd(arg as unknown as ModifierArg)\n\n    if (endResult === false) {\n      interaction.modifiers.endPrevented = true\n      return false\n    }\n\n    // if the endOnly option is true for any modifier\n    if (!didPreEnd && shouldDo(options, true, true)) {\n      // fire a move event at the modified coordinates\n      interaction.move({ event, preEnd: true })\n      didPreEnd = true\n    }\n  }\n}\n\nfunction stop (arg: { interaction: Interact.Interaction, phase: Interact.EventPhase }) {\n  const { interaction } = arg\n  const states = interaction.modifiers.states\n\n  if (!states || !states.length) {\n    return\n  }\n\n  const modifierArg: ModifierArg = extend({\n    states,\n    interactable: interaction.interactable,\n    element: interaction.element,\n    rect: null,\n  }, arg as any)\n\n  for (const state of states) {\n    modifierArg.state = state\n\n    if (state.methods.stop) { state.methods.stop(modifierArg) }\n  }\n\n  arg.interaction.modifiers.states = null\n  arg.interaction.modifiers.endPrevented = null\n}\n\nfunction getModifierList (interaction) {\n  const actionOptions = interaction.interactable.options[interaction.prepared.name]\n  const actionModifiers = actionOptions.modifiers\n\n  if (actionModifiers && actionModifiers.length) {\n    return actionModifiers.filter(\n      modifier => !modifier.options || modifier.options.enabled !== false,\n    )\n  }\n\n  return ['snap', 'snapSize', 'snapEdges', 'restrict', 'restrictEdges', 'restrictSize']\n    .map(type => {\n      const options = actionOptions[type]\n\n      return options && options.enabled && {\n        options,\n        methods: options._methods,\n      }\n    })\n    .filter(m => !!m)\n}\n\nexport function prepareStates (modifierList: Modifier[]) {\n  const states: ModifierState[] = []\n\n  for (let index = 0; index < modifierList.length; index++) {\n    const { options, methods, name } = modifierList[index]\n\n    if (options && options.enabled === false) { continue }\n\n    states.push({\n      options,\n      methods,\n      index,\n      name,\n    })\n  }\n\n  return states\n}\n\nexport function setCoords (arg: { interaction: Interact.Interaction, phase: Interact.EventPhase, rect?: Interact.Rect }) {\n  const { interaction, phase } = arg\n  const curCoords = interaction.coords.cur\n  const startCoords = interaction.coords.start\n  const { result, startDelta } = interaction.modifiers\n  const curDelta = result.delta\n\n  if (phase === 'start') {\n    extend(interaction.modifiers.startDelta, result.delta)\n  }\n\n  for (const [coordsSet, delta] of [[startCoords, startDelta], [curCoords, curDelta]] as const) {\n    coordsSet.page.x   += delta.x\n    coordsSet.page.y   += delta.y\n    coordsSet.client.x += delta.x\n    coordsSet.client.y += delta.y\n  }\n\n  const { rectDelta } = interaction.modifiers.result\n  const rect = arg.rect || interaction.rect\n\n  rect.left   += rectDelta.left\n  rect.right  += rectDelta.right\n  rect.top    += rectDelta.top\n  rect.bottom += rectDelta.bottom\n\n  rect.width = rect.right - rect.left\n  rect.height = rect.bottom - rect.top\n}\n\nexport function restoreCoords ({ interaction: { coords, rect, modifiers } }: { interaction: Interact.Interaction }) {\n  if (!modifiers.result) { return }\n\n  const { startDelta } = modifiers\n  const { delta: curDelta, rectDelta } = modifiers.result\n\n  const coordsAndDeltas = [\n    [coords.start, startDelta],\n    [coords.cur, curDelta],\n  ]\n\n  for (const [coordsSet, delta] of coordsAndDeltas as any) {\n    coordsSet.page.x -= delta.x\n    coordsSet.page.y -= delta.y\n    coordsSet.client.x -= delta.x\n    coordsSet.client.y -= delta.y\n  }\n\n  rect.left -= rectDelta.left\n  rect.right -= rectDelta.right\n  rect.top -= rectDelta.top\n  rect.bottom -= rectDelta.bottom\n}\n\nfunction shouldDo (options, preEnd?: boolean, requireEndOnly?: boolean, phase?: string) {\n  return options\n    ? options.enabled !== false &&\n      (preEnd || !options.endOnly) &&\n      (!requireEndOnly || options.endOnly || options.alwaysOnEnd) &&\n      (options.setStart || phase !== 'start')\n    : !requireEndOnly\n}\n\nfunction getRectOffset (rect, coords) {\n  return rect\n    ? {\n      left  : coords.x - rect.left,\n      top   : coords.y - rect.top,\n      right : rect.right  - coords.x,\n      bottom: rect.bottom - coords.y,\n    }\n    : {\n      left  : 0,\n      top   : 0,\n      right : 0,\n      bottom: 0,\n    }\n}\n\nexport function makeModifier<\n  Defaults extends { enabled?: boolean },\n  State extends ModifierState,\n  Name extends string\n> (\n  module: ModifierModule<Defaults, State>,\n  name?: Name,\n) {\n  const { defaults } = module\n  const methods = {\n    start: module.start,\n    set: module.set,\n    beforeEnd: module.beforeEnd,\n    stop: module.stop,\n  }\n\n  const modifier = (_options?: Partial<Defaults>) => {\n    const options: Defaults = (_options || {}) as Defaults\n\n    options.enabled = options.enabled !== false\n\n    // add missing defaults to options\n    for (const prop in defaults) {\n      if (!(prop in options)) {\n        options[prop] = defaults[prop]\n      }\n    }\n\n    const m: Modifier<Defaults, State, Name> = { options, methods, name }\n\n    return m\n  }\n\n  if (name && typeof name === 'string') {\n    // for backwrads compatibility\n    modifier._defaults = defaults\n    modifier._methods = methods\n  }\n\n  return modifier\n}\n\nexport default {\n  id: 'modifiers/base',\n  install: scope => {\n    scope.defaults.perAction.modifiers = []\n  },\n  listeners: {\n    'interactions:new': ({ interaction }) => {\n      interaction.modifiers = {\n        startOffset: { left: 0, right: 0, top: 0, bottom: 0 },\n        offsets: {},\n        states: null,\n        result: null,\n        endPrevented: false,\n        startDelta: null,\n      }\n    },\n\n    'interactions:before-action-start': arg => {\n      start(arg, arg.interaction.coords.start.page, arg.interaction.coords.prev.page)\n      setCoords(arg)\n    },\n\n    'interactions:action-resume': arg => {\n      stop(arg)\n      start(arg, arg.interaction.coords.cur.page, arg.interaction.modifiers.result.coords)\n      beforeMove(arg)\n    },\n\n    'interactions:after-action-move': restoreCoords,\n    'interactions:before-action-move': beforeMove,\n\n    'interactions:after-action-start': restoreCoords,\n\n    'interactions:before-action-end': beforeEnd,\n    'interactions:stop': stop,\n  },\n  before: 'ations',\n  startAll,\n  setAll,\n  prepareStates,\n  start,\n  beforeMove,\n  beforeEnd,\n  stop,\n  shouldDo,\n  getModifierList,\n  getRectOffset,\n  makeModifier,\n}\n","import { EventPhase } from '../core/InteractEvent'\nimport modifiers, { restoreCoords, setCoords } from '../modifiers/base'\nimport * as utils from '../utils/index'\nimport raf from '../utils/raf'\n\ndeclare module '@interactjs/core/InteractEvent' {\n  // eslint-disable-next-line no-shadow\n  enum EventPhase {\n    Resume = 'resume',\n    InertiaStart = 'inertiastart',\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    inertia?: {\n      active: boolean\n      smoothEnd: boolean\n      allowResume: boolean\n\n      startEvent?: Interact.InteractEvent\n      upCoords: {\n        page: Interact.Point\n        client: Interact.Point\n        timeStamp: number\n      }\n\n      xe?: number\n      ye?: number\n      sx?: number\n      sy?: number\n\n      t0?: number\n      te?: number\n      v0?: number\n      vx0?: number\n      vy0?: number\n      duration?: number\n      modifiedXe?: number\n      modifiedYe?: number\n\n      lambda_v0?: number // eslint-disable-line camelcase\n      one_ve_v0?: number // eslint-disable-line camelcase\n      timeout: any\n    }\n  }\n}\n\ndeclare module '@interactjs/core/defaultOptions' {\n  interface PerActionDefaults {\n    inertia?: {\n      enabled?: boolean\n      resistance?: number        // the lambda in exponential decay\n      minSpeed?: number          // target speed must be above this for inertia to start\n      endSpeed?: number          // the speed at which inertia is slow enough to stop\n      allowResume?: true         // allow resuming an action in inertia phase\n      smoothEndDuration?: number // animate to snap/restrict endOnly if there's no inertia\n    } | boolean // FIXME\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface SignalArgs {\n    'interactions:action-resume': {\n      interaction: Interact.Interaction\n      phase: EventPhase.Resume\n    }\n  }\n}\n\n(EventPhase as any).Resume = 'resume'\n;(EventPhase as any).InertiaStart = 'inertiastart'\n\nfunction install (scope: Interact.Scope) {\n  const {\n    defaults,\n  } = scope\n\n  scope.usePlugin(modifiers)\n\n  defaults.perAction.inertia = {\n    enabled          : false,\n    resistance       : 10,    // the lambda in exponential decay\n    minSpeed         : 100,   // target speed must be above this for inertia to start\n    endSpeed         : 10,    // the speed at which inertia is slow enough to stop\n    allowResume      : true,  // allow resuming an action in inertia phase\n    smoothEndDuration: 300,   // animate to snap/restrict endOnly if there's no inertia\n  }\n}\n\nfunction resume (\n  { interaction, event, pointer, eventTarget }: Interact.SignalArgs['interactions:down'],\n  scope: Interact.Scope,\n) {\n  const state = interaction.inertia\n\n  // Check if the down event hits the current inertia target\n  if (state.active) {\n    let element = eventTarget\n\n    // climb up the DOM tree from the event target\n    while (utils.is.element(element)) {\n      // if interaction element is the current inertia target element\n      if (element === interaction.element) {\n        // stop inertia\n        raf.cancel(state.timeout)\n        state.active = false\n        interaction.simulation = null\n\n        // update pointers to the down event's coordinates\n        interaction.updatePointer(pointer as Interact.PointerType, event as Interact.PointerEventType, eventTarget, true)\n        utils.pointer.setCoords(\n          interaction.coords.cur,\n          interaction.pointers.map(p => p.pointer),\n          interaction._now(),\n        )\n\n        // fire appropriate signals\n        const signalArg = {\n          interaction,\n          phase: EventPhase.Resume as const,\n        }\n\n        scope.fire('interactions:action-resume', signalArg)\n\n        // fire a reume event\n        const resumeEvent = new scope.InteractEvent(\n          interaction, event as Interact.PointerEventType, interaction.prepared.name, EventPhase.Resume, interaction.element)\n\n        interaction._fireEvent(resumeEvent)\n\n        utils.pointer.copyCoords(interaction.coords.prev, interaction.coords.cur)\n        break\n      }\n\n      element = utils.dom.parentNode(element)\n    }\n  }\n}\n\nfunction release<T extends Interact.ActionName> (\n  { interaction, event, noPreEnd }: Interact.DoPhaseArg & { noPreEnd?: boolean },\n  scope: Interact.Scope,\n) {\n  const state = interaction.inertia\n\n  if (!interaction.interacting() ||\n    (interaction.simulation && interaction.simulation.active) ||\n  noPreEnd) {\n    return null\n  }\n\n  const options = getOptions(interaction)\n\n  const now = interaction._now()\n  const { client: velocityClient } = interaction.coords.velocity\n  const pointerSpeed = utils.hypot(velocityClient.x, velocityClient.y)\n\n  let smoothEnd = false\n  let modifierResult: ReturnType<typeof modifiers.setAll>\n\n  // check if inertia should be started\n  const inertiaPossible = (options && options.enabled &&\n                     interaction.prepared.name !== 'gesture' &&\n                     event !== state.startEvent)\n\n  const inertia = (inertiaPossible &&\n    (now - interaction.coords.cur.timeStamp) < 50 &&\n    pointerSpeed > options.minSpeed &&\n    pointerSpeed > options.endSpeed)\n\n  const modifierArg = {\n    interaction,\n    interactable: interaction.interactable,\n    element: interaction.element,\n    rect: interaction.rect,\n    pageCoords: interaction.coords.cur.page,\n    states: inertiaPossible && interaction.modifiers.states.map(\n      modifierStatus => utils.extend({}, modifierStatus),\n    ),\n    preEnd: true,\n    prevCoords: null,\n    requireEndOnly: null,\n    phase: EventPhase.InertiaStart,\n  }\n\n  // smoothEnd\n  if (inertiaPossible && !inertia) {\n    modifierArg.prevCoords = interaction.modifiers.result\n      ? interaction.modifiers.result.coords\n      : interaction.prevEvent.page\n    modifierArg.requireEndOnly = false\n    modifierResult = modifiers.setAll(modifierArg)\n\n    if (modifierResult.changed) {\n      smoothEnd = true\n    }\n  }\n\n  if (!(inertia || smoothEnd)) { return null }\n\n  utils.pointer.copyCoords(state.upCoords, interaction.coords.cur)\n\n  setCoords(modifierArg)\n  interaction.pointers[0].pointer = state.startEvent = new scope.InteractEvent(\n    interaction,\n    event,\n    // FIXME add proper typing Action.name\n    interaction.prepared.name as T,\n    EventPhase.InertiaStart,\n    interaction.element,\n  )\n  restoreCoords(modifierArg)\n\n  state.t0 = now\n\n  state.active = true\n  state.allowResume = options.allowResume\n  interaction.simulation = state\n\n  interaction.interactable.fire(state.startEvent)\n\n  if (inertia) {\n    state.vx0 = interaction.coords.velocity.client.x\n    state.vy0 = interaction.coords.velocity.client.y\n    state.v0 = pointerSpeed\n\n    calcInertia(interaction, state)\n\n    utils.extend(modifierArg.pageCoords, interaction.coords.cur.page)\n\n    modifierArg.pageCoords.x += state.xe\n    modifierArg.pageCoords.y += state.ye\n    modifierArg.prevCoords = null\n    modifierArg.requireEndOnly = true\n\n    modifierResult = modifiers.setAll(modifierArg)\n\n    state.modifiedXe += modifierResult.delta.x\n    state.modifiedYe += modifierResult.delta.y\n\n    state.timeout = raf.request(() => inertiaTick(interaction))\n  }\n  else {\n    state.smoothEnd = true\n    state.xe = modifierResult.delta.x\n    state.ye = modifierResult.delta.y\n\n    state.sx = state.sy = 0\n\n    state.timeout = raf.request(() => smothEndTick(interaction))\n  }\n\n  return false\n}\n\nfunction stop ({ interaction }: Interact.DoPhaseArg) {\n  const state = interaction.inertia\n  if (state.active) {\n    raf.cancel(state.timeout)\n    state.active = false\n    interaction.simulation = null\n  }\n}\n\nfunction calcInertia (interaction: Interact.Interaction, state) {\n  const options = getOptions(interaction)\n  const lambda = options.resistance\n  const inertiaDur = -Math.log(options.endSpeed / state.v0) / lambda\n\n  state.x0 = interaction.prevEvent.page.x\n  state.y0 = interaction.prevEvent.page.y\n  state.t0 = state.startEvent.timeStamp / 1000\n  state.sx = state.sy = 0\n\n  state.modifiedXe = state.xe = (state.vx0 - inertiaDur) / lambda\n  state.modifiedYe = state.ye = (state.vy0 - inertiaDur) / lambda\n  state.te = inertiaDur\n\n  state.lambda_v0 = lambda / state.v0\n  state.one_ve_v0 = 1 - options.endSpeed / state.v0\n}\n\nfunction inertiaTick (interaction: Interact.Interaction) {\n  updateInertiaCoords(interaction)\n  utils.pointer.setCoordDeltas(interaction.coords.delta, interaction.coords.prev, interaction.coords.cur)\n  utils.pointer.setCoordVelocity(interaction.coords.velocity, interaction.coords.delta)\n\n  const state = interaction.inertia\n  const options = getOptions(interaction)\n  const lambda = options.resistance\n  const t = interaction._now() / 1000 - state.t0\n\n  if (t < state.te) {\n    const progress =  1 - (Math.exp(-lambda * t) - state.lambda_v0) / state.one_ve_v0\n\n    if (state.modifiedXe === state.xe && state.modifiedYe === state.ye) {\n      state.sx = state.xe * progress\n      state.sy = state.ye * progress\n    }\n    else {\n      const quadPoint = utils.getQuadraticCurvePoint(\n        0, 0,\n        state.xe, state.ye,\n        state.modifiedXe, state.modifiedYe,\n        progress)\n\n      state.sx = quadPoint.x\n      state.sy = quadPoint.y\n    }\n\n    interaction.move()\n\n    state.timeout = raf.request(() => inertiaTick(interaction))\n  }\n  else {\n    state.sx = state.modifiedXe\n    state.sy = state.modifiedYe\n\n    interaction.move()\n    interaction.end(state.startEvent)\n    state.active = false\n    interaction.simulation = null\n  }\n\n  utils.pointer.copyCoords(interaction.coords.prev, interaction.coords.cur)\n}\n\nfunction smothEndTick (interaction: Interact.Interaction) {\n  updateInertiaCoords(interaction)\n\n  const state = interaction.inertia\n  const t = interaction._now() - state.t0\n  const { smoothEndDuration: duration } = getOptions(interaction)\n\n  if (t < duration) {\n    state.sx = utils.easeOutQuad(t, 0, state.xe, duration)\n    state.sy = utils.easeOutQuad(t, 0, state.ye, duration)\n\n    interaction.move()\n\n    state.timeout = raf.request(() => smothEndTick(interaction))\n  }\n  else {\n    state.sx = state.xe\n    state.sy = state.ye\n\n    interaction.move()\n    interaction.end(state.startEvent)\n\n    state.smoothEnd =\n      state.active = false\n    interaction.simulation = null\n  }\n}\n\nfunction updateInertiaCoords (interaction: Interact.Interaction) {\n  const state = interaction.inertia\n\n  // return if inertia isn't running\n  if (!state.active) { return }\n\n  const pageUp   = state.upCoords.page\n  const clientUp = state.upCoords.client\n\n  utils.pointer.setCoords(interaction.coords.cur, [{\n    pageX  : pageUp.x   + state.sx,\n    pageY  : pageUp.y   + state.sy,\n    clientX: clientUp.x + state.sx,\n    clientY: clientUp.y + state.sy,\n  }], interaction._now())\n}\n\nfunction getOptions ({ interactable, prepared }: Interact.Interaction) {\n  return interactable &&\n    interactable.options &&\n    prepared.name &&\n    interactable.options[prepared.name].inertia\n}\n\nexport default {\n  id: 'inertia',\n  install,\n  listeners: {\n    'interactions:new': ({ interaction }) => {\n      interaction.inertia = {\n        active     : false,\n        smoothEnd  : false,\n        allowResume: false,\n        upCoords   : {} as any,\n        timeout    : null,\n      }\n    },\n\n    'interactions:before-action-end': release,\n    'interactions:down': resume,\n    'interactions:stop': stop,\n  },\n  before: 'modifiers/base',\n  calcInertia,\n  inertiaTick,\n  smothEndTick,\n  updateInertiaCoords,\n}\n","import extend from '../../utils/extend'\nimport * as is from '../../utils/is'\nimport * as rectUtils from '../../utils/rect'\nimport { ModifierArg, ModifierModule, ModifierState } from '../base'\n\nexport interface RestrictOptions {\n  // where to drag over\n  restriction: Interact.RectResolvable<[number, number, Interact.Interaction]>\n  // what part of self is allowed to drag over\n  elementRect: Interact.Rect\n  offset: Interact.Rect\n  // restrict just before the end drag\n  endOnly: boolean\n  enabled?: boolean\n}\n\nexport type RestrictState = ModifierState<RestrictOptions, {\n  offset: Interact.Rect\n}>\n\nfunction start ({ rect, startOffset, state, interaction, pageCoords }: ModifierArg<RestrictState>) {\n  const { options } = state\n  const { elementRect } = options\n  const offset: Interact.Rect = extend({\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0,\n  }, options.offset || {})\n\n  if (rect && elementRect) {\n    const restriction = getRestrictionRect(options.restriction, interaction, pageCoords)\n\n    if (restriction) {\n      const widthDiff = (restriction.right - restriction.left) - rect.width\n      const heightDiff = (restriction.bottom - restriction.top) - rect.height\n\n      if (widthDiff < 0) {\n        offset.left += widthDiff\n        offset.right += widthDiff\n      }\n      if (heightDiff < 0) {\n        offset.top += heightDiff\n        offset.bottom += heightDiff\n      }\n    }\n\n    offset.left += startOffset.left - (rect.width  * elementRect.left)\n    offset.top  += startOffset.top  - (rect.height * elementRect.top)\n\n    offset.right  += startOffset.right  - (rect.width  * (1 - elementRect.right))\n    offset.bottom += startOffset.bottom - (rect.height * (1 - elementRect.bottom))\n  }\n\n  state.offset = offset\n}\n\nfunction set ({ coords, interaction, state }: ModifierArg<RestrictState>) {\n  const { options, offset } = state\n\n  const restriction = getRestrictionRect(options.restriction, interaction, coords)\n\n  if (!restriction) { return }\n\n  const rect = rectUtils.xywhToTlbr(restriction)\n\n  coords.x = Math.max(Math.min(rect.right  - offset.right, coords.x), rect.left + offset.left)\n  coords.y = Math.max(Math.min(rect.bottom - offset.bottom, coords.y), rect.top  + offset.top)\n}\n\nexport function getRestrictionRect (value, interaction, coords?: Interact.Point) {\n  if (is.func(value)) {\n    return rectUtils.resolveRectLike(value, interaction.interactable, interaction.element, [coords.x, coords.y, interaction])\n  } else {\n    return rectUtils.resolveRectLike(value, interaction.interactable, interaction.element)\n  }\n}\n\nconst defaults: RestrictOptions = {\n  restriction: null,\n  elementRect: null,\n  offset: null,\n  endOnly: false,\n  enabled: false,\n}\n\nconst restrict: ModifierModule<RestrictOptions, RestrictState> = {\n  start,\n  set,\n  defaults,\n}\n\nexport default restrict\n","// This module adds the options.resize.restrictEdges setting which sets min and\n// max for the top, left, bottom and right edges of the target being resized.\n//\n// interact(target).resize({\n//   edges: { top: true, left: true },\n//   restrictEdges: {\n//     inner: { top: 200, left: 200, right: 400, bottom: 400 },\n//     outer: { top:   0, left:   0, right: 600, bottom: 600 },\n//   },\n// })\n\nimport extend from '../../utils/extend'\nimport * as rectUtils from '../../utils/rect'\nimport { ModifierArg, ModifierState } from '../base'\nimport { getRestrictionRect, RestrictOptions } from './pointer'\n\nexport interface RestrictEdgesOptions {\n  inner: RestrictOptions['restriction']\n  outer: RestrictOptions['restriction']\n  offset?: RestrictOptions['offset']\n  endOnly: boolean\n  enabled?: boolean\n}\n\nexport type RestrictEdgesState = ModifierState<RestrictEdgesOptions, {\n  inner: Interact.Rect\n  outer: Interact.Rect\n  offset: RestrictEdgesOptions['offset']\n}>\n\nconst noInner = { top: +Infinity, left: +Infinity, bottom: -Infinity, right: -Infinity }\nconst noOuter = { top: -Infinity, left: -Infinity, bottom: +Infinity, right: +Infinity }\n\nfunction start ({ interaction, state }: ModifierArg<RestrictEdgesState>) {\n  const { options } = state\n  const startOffset = interaction.modifiers.startOffset\n  let offset\n\n  if (options) {\n    const offsetRect = getRestrictionRect(options.offset, interaction, interaction.coords.start.page)\n\n    offset = rectUtils.rectToXY(offsetRect)\n  }\n\n  offset = offset || { x: 0, y: 0 }\n\n  state.offset = {\n    top:    offset.y + startOffset.top,\n    left:   offset.x + startOffset.left,\n    bottom: offset.y - startOffset.bottom,\n    right:  offset.x - startOffset.right,\n  }\n}\n\nfunction set ({ coords, interaction, state }: ModifierArg<RestrictEdgesState>) {\n  const { offset, options } = state\n  const edges = interaction.prepared._linkedEdges || interaction.prepared.edges\n\n  if (!edges) {\n    return\n  }\n\n  const page = extend({}, coords)\n  const inner = getRestrictionRect(options.inner, interaction, page) || {} as Interact.Rect\n  const outer = getRestrictionRect(options.outer, interaction, page) || {} as Interact.Rect\n\n  fixRect(inner, noInner)\n  fixRect(outer, noOuter)\n\n  if (edges.top) {\n    coords.y = Math.min(Math.max(outer.top    + offset.top,    page.y), inner.top    + offset.top)\n  }\n  else if (edges.bottom) {\n    coords.y = Math.max(Math.min(outer.bottom + offset.bottom, page.y), inner.bottom + offset.bottom)\n  }\n  if (edges.left) {\n    coords.x = Math.min(Math.max(outer.left   + offset.left,   page.x), inner.left   + offset.left)\n  }\n  else if (edges.right) {\n    coords.x = Math.max(Math.min(outer.right  + offset.right,  page.x), inner.right  + offset.right)\n  }\n}\n\nfunction fixRect (rect, defaults) {\n  for (const edge of ['top', 'left', 'bottom', 'right']) {\n    if (!(edge in rect)) {\n      rect[edge] = defaults[edge]\n    }\n  }\n\n  return rect\n}\n\nconst defaults: RestrictEdgesOptions = {\n  inner: null,\n  outer: null,\n  offset: null,\n  endOnly: false,\n  enabled: false,\n}\n\nconst restrictEdges = {\n  noInner,\n  noOuter,\n  start,\n  set,\n  defaults,\n}\n\nexport default restrictEdges\n","import extend from '../../utils/extend'\nimport restrictPointer from './pointer'\n\nconst defaults = extend({\n  get elementRect () {\n    return { top: 0, left: 0, bottom: 1, right: 1 }\n  },\n  set elementRect (_) {},\n}, restrictPointer.defaults)\n\nconst restrictRect = {\n  start: restrictPointer.start,\n  set: restrictPointer.set,\n  defaults,\n}\n\nexport default restrictRect\n","import extend from '../../utils/extend'\nimport * as rectUtils from '../../utils/rect'\nimport { ModifierArg, ModifierState } from '../base'\nimport restrictEdges, { RestrictEdgesState } from './edges'\nimport { getRestrictionRect, RestrictOptions } from './pointer'\n\nconst noMin = { width: -Infinity, height: -Infinity }\nconst noMax = { width: +Infinity, height: +Infinity }\n\nexport interface RestrictSizeOptions {\n  min?: Interact.Size | Interact.Point | RestrictOptions['restriction']\n  max?: Interact.Size | Interact.Point | RestrictOptions['restriction']\n  endOnly: boolean\n  enabled?: boolean\n}\n\nfunction start (arg: ModifierArg<RestrictEdgesState>) {\n  return restrictEdges.start(arg)\n}\n\nexport type RestrictSizeState =\n  RestrictEdgesState & ModifierState<RestrictSizeOptions & { inner: Interact.Rect, outer: Interact.Rect }, {\n    min: Interact.Rect\n    max: Interact.Rect\n  }>\n\nfunction set (arg: ModifierArg<RestrictSizeState>) {\n  const { interaction, state } = arg\n  const { options } = state\n  const edges = interaction.prepared._linkedEdges || interaction.prepared.edges\n\n  if (!edges) {\n    return\n  }\n\n  const rect = rectUtils.xywhToTlbr(interaction.resizeRects.inverted)\n\n  const minSize = rectUtils.tlbrToXywh(getRestrictionRect(options.min, interaction, arg.coords)) || noMin\n  const maxSize = rectUtils.tlbrToXywh(getRestrictionRect(options.max, interaction, arg.coords)) || noMax\n\n  state.options = {\n    endOnly: options.endOnly,\n    inner: extend({}, restrictEdges.noInner),\n    outer: extend({}, restrictEdges.noOuter),\n  }\n\n  if (edges.top) {\n    state.options.inner.top = rect.bottom - minSize.height\n    state.options.outer.top = rect.bottom - maxSize.height\n  }\n  else if (edges.bottom) {\n    state.options.inner.bottom = rect.top + minSize.height\n    state.options.outer.bottom = rect.top + maxSize.height\n  }\n  if (edges.left) {\n    state.options.inner.left = rect.right - minSize.width\n    state.options.outer.left = rect.right - maxSize.width\n  }\n  else if (edges.right) {\n    state.options.inner.right = rect.left + minSize.width\n    state.options.outer.right = rect.left + maxSize.width\n  }\n\n  restrictEdges.set(arg)\n\n  state.options = options\n}\n\nconst defaults: RestrictSizeOptions = {\n  min: null,\n  max: null,\n  endOnly: false,\n  enabled: false,\n}\n\nconst restrictSize = {\n  start,\n  set,\n  defaults,\n}\n\nexport default restrictSize\n","import * as utils from '../../utils/index'\nimport { ModifierArg, ModifierState } from '../base'\n\nexport interface SnapPosition {\n  x: number\n  y: number\n  range?: number\n}\n\nexport type SnapFunction = (\n  x: number,\n  y: number,\n  interaction: Interact.Interaction,\n  offset: Interact.Point,\n  index: number\n) => SnapPosition\nexport type SnapTarget = SnapPosition | SnapFunction\nexport interface SnapOptions {\n  targets: SnapTarget[]\n  // target range\n  range: number\n  // self points for snapping. [0,0] = top left, [1,1] = bottom right\n  relativePoints: Interact.Point[]\n  // startCoords = offset snapping from drag start page position\n  offset: Interact.Point | Interact.RectResolvable<[Interact.Interaction]> | 'startCoords'\n  offsetWithOrigin?: boolean\n  origin: Interact.RectResolvable<[Interact.Element]> | Interact.Point\n  endOnly?: boolean\n  enabled?: boolean\n}\n\nexport type SnapState = ModifierState<SnapOptions, {\n  offsets?: Interact.Point[]\n  realX?: number\n  realY?: number\n  range?: number\n  closest?: any\n  targetFields?: string[][]\n}>\n\nfunction start (arg: ModifierArg<SnapState>) {\n  const { interaction, interactable, element, rect, state, startOffset } = arg\n  const { options } = state\n  const offsets = []\n  const origin = options.offsetWithOrigin\n    ? getOrigin(arg)\n    : { x: 0, y: 0 }\n\n  let snapOffset\n\n  if (options.offset === 'startCoords') {\n    snapOffset = {\n      x: interaction.coords.start.page.x,\n      y: interaction.coords.start.page.y,\n    }\n  }\n  else  {\n    const offsetRect = utils.rect.resolveRectLike(options.offset as any, interactable, element, [interaction])\n\n    snapOffset = utils.rect.rectToXY(offsetRect) || { x: 0, y: 0 }\n    snapOffset.x += origin.x\n    snapOffset.y += origin.y\n  }\n\n  const relativePoints = options.relativePoints || []\n\n  if (rect && options.relativePoints && options.relativePoints.length) {\n    for (let index = 0; index < relativePoints.length; index++) {\n      const relativePoint = relativePoints[index]\n\n      offsets.push({\n        index,\n        relativePoint,\n        x: startOffset.left - (rect.width  * relativePoint.x) + snapOffset.x,\n        y: startOffset.top  - (rect.height * relativePoint.y) + snapOffset.y,\n      })\n    }\n  }\n  else {\n    offsets.push(utils.extend({\n      index: 0,\n      relativePoint: null,\n    }, snapOffset))\n  }\n\n  state.offsets = offsets\n}\n\nfunction set (arg: ModifierArg<SnapState>) {\n  const { interaction, coords, state } = arg\n  const { options, offsets } = state\n\n  const origin = utils.getOriginXY(interaction.interactable, interaction.element, interaction.prepared.name)\n  const page = utils.extend({}, coords)\n  const targets = []\n  let target\n\n  if (!options.offsetWithOrigin) {\n    page.x -= origin.x\n    page.y -= origin.y\n  }\n\n  state.realX = page.x\n  state.realY = page.y\n\n  for (const offset of offsets) {\n    const relativeX = page.x - offset.x\n    const relativeY = page.y - offset.y\n\n    for (let index = 0, len = options.targets.length; index < len; index++) {\n      const snapTarget = options.targets[index]\n      if (utils.is.func(snapTarget)) {\n        target = snapTarget(relativeX, relativeY, interaction, offset, index)\n      }\n      else {\n        target = snapTarget\n      }\n\n      if (!target) { continue }\n\n      targets.push({\n        x: (utils.is.number(target.x) ? target.x : relativeX) + offset.x,\n        y: (utils.is.number(target.y) ? target.y : relativeY) + offset.y,\n\n        range: utils.is.number(target.range) ? target.range : options.range,\n      })\n    }\n  }\n\n  const closest = {\n    target: null,\n    inRange: false,\n    distance: 0,\n    range: 0,\n    dx: 0,\n    dy: 0,\n  }\n\n  for (let i = 0, len = targets.length; i < len; i++) {\n    target = targets[i]\n\n    const range = target.range\n    const dx = target.x - page.x\n    const dy = target.y - page.y\n    const distance = utils.hypot(dx, dy)\n    let inRange = distance <= range\n\n    // Infinite targets count as being out of range\n    // compared to non infinite ones that are in range\n    if (range === Infinity && closest.inRange && closest.range !== Infinity) {\n      inRange = false\n    }\n\n    if (!closest.target || (inRange\n      // is the closest target in range?\n      ? (closest.inRange && range !== Infinity\n        // the pointer is relatively deeper in this target\n        ? distance / range < closest.distance / closest.range\n        // this target has Infinite range and the closest doesn't\n        : (range === Infinity && closest.range !== Infinity) ||\n          // OR this target is closer that the previous closest\n          distance < closest.distance)\n      // The other is not in range and the pointer is closer to this target\n      : (!closest.inRange && distance < closest.distance))) {\n      closest.target = target\n      closest.distance = distance\n      closest.range = range\n      closest.inRange = inRange\n      closest.dx = dx\n      closest.dy = dy\n\n      state.range = range\n    }\n  }\n\n  if (closest.inRange) {\n    coords.x = closest.target.x\n    coords.y = closest.target.y\n  }\n\n  state.closest = closest\n}\n\nfunction getOrigin (arg: Partial<ModifierArg<SnapState>>) {\n  const { element } = arg.interaction\n  const optionsOrigin = utils.rect.rectToXY(\n    utils.rect.resolveRectLike(arg.state.options.origin as any, null, null, [element]),\n  )\n  const origin = optionsOrigin || utils.getOriginXY(\n    arg.interactable,\n    element,\n    arg.interaction.prepared.name,\n  )\n\n  return origin\n}\n\nconst defaults: SnapOptions = {\n  range  : Infinity,\n  targets: null,\n  offset: null,\n  offsetWithOrigin: true,\n  origin: null,\n  relativePoints: null,\n  endOnly: false,\n  enabled: false,\n}\nconst snap = {\n  start,\n  set,\n  defaults,\n}\n\nexport default snap\n","// This module allows snapping of the size of targets during resize\n// interactions.\n\nimport extend from '../../utils/extend'\nimport * as is from '../../utils/is'\nimport { ModifierArg } from '../base'\nimport snap, { SnapOptions, SnapState } from './pointer'\n\nexport type SnapSizeOptions = Pick<\nSnapOptions,\n'targets' | 'offset' | 'endOnly' | 'range' | 'enabled'\n>\n\nfunction start (arg: ModifierArg<SnapState>) {\n  const { interaction, state } = arg\n  const { options } = state\n  const edges = interaction.prepared.edges\n\n  if (!edges) { return null }\n\n  arg.state = {\n    options: {\n      targets: null,\n      relativePoints: [{\n        x: edges.left ? 0 : 1,\n        y: edges.top ? 0 : 1,\n      }],\n      offset: options.offset || 'self',\n      origin: { x: 0, y: 0 },\n      range: options.range,\n    },\n  }\n\n  state.targetFields = state.targetFields || [\n    ['width', 'height'],\n    ['x', 'y'],\n  ]\n\n  snap.start(arg)\n  state.offsets = arg.state.offsets\n\n  arg.state = state\n}\n\nfunction set (arg) {\n  const { interaction, state, coords } = arg\n  const { options, offsets } = state\n  const relative = {\n    x: coords.x - offsets[0].x,\n    y: coords.y - offsets[0].y,\n  }\n\n  state.options = extend({}, options)\n  state.options.targets = []\n\n  for (const snapTarget of (options.targets || [])) {\n    let target\n\n    if (is.func(snapTarget)) {\n      target = snapTarget(relative.x, relative.y, interaction)\n    }\n    else {\n      target = snapTarget\n    }\n\n    if (!target) { continue }\n\n    for (const [xField, yField] of state.targetFields) {\n      if (xField in target || yField in target) {\n        target.x = target[xField]\n        target.y = target[yField]\n\n        break\n      }\n    }\n\n    state.options.targets.push(target)\n  }\n\n  snap.set(arg)\n\n  state.options = options\n}\n\nconst defaults: SnapSizeOptions = {\n  range: Infinity,\n  targets: null,\n  offset: null,\n  endOnly: false,\n  enabled: false,\n}\n\nconst snapSize = {\n  start,\n  set,\n  defaults,\n}\n\nexport default snapSize\n","/**\n * @module modifiers/snapEdges\n *\n * @description\n * This module allows snapping of the edges of targets during resize\n * interactions.\n *\n * @example\n * interact(target).resizable({\n *   snapEdges: {\n *     targets: [interact.snappers.grid({ x: 100, y: 50 })],\n *   },\n * })\n *\n * interact(target).resizable({\n *   snapEdges: {\n *     targets: [\n *       interact.snappers.grid({\n *        top: 50,\n *        left: 50,\n *        bottom: 100,\n *        right: 100,\n *       }),\n *     ],\n *   },\n * })\n */\n\nimport clone from '../../utils/clone'\nimport extend from '../../utils/extend'\nimport { ModifierArg } from '../base'\nimport { SnapState } from './pointer'\nimport snapSize, { SnapSizeOptions } from './size'\n\nfunction start (arg: ModifierArg<SnapState>) {\n  const edges = arg.interaction.prepared.edges\n\n  if (!edges) { return null }\n\n  arg.state.targetFields = arg.state.targetFields || [\n    [edges.left ? 'left' : 'right', edges.top ? 'top' : 'bottom'],\n  ]\n\n  return snapSize.start(arg)\n}\n\nfunction set (arg) {\n  return snapSize.set(arg)\n}\n\nconst snapEdges = {\n  start,\n  set,\n  defaults: extend(clone(snapSize.defaults) as SnapSizeOptions, {\n    offset: { x: 0, y: 0 },\n  } as unknown),\n}\n\nexport default snapEdges\n","import base from './base'\nimport restrictEdgesModule from './restrict/edges'\nimport restrictModule from './restrict/pointer'\nimport restrictRectModule from './restrict/rect'\nimport restrictSizeModule from './restrict/size'\nimport snapEdgesModule from './snap/edges'\nimport snapModule from './snap/pointer'\nimport snapSizeModule from './snap/size'\n\nconst { makeModifier } = base\n\nexport const snap = makeModifier(snapModule, 'snap')\nexport const snapSize = makeModifier(snapSizeModule, 'snapSize')\nexport const snapEdges = makeModifier(snapEdgesModule, 'snapEdges')\nexport const restrict = makeModifier(restrictModule, 'restrict')\nexport const restrictRect = makeModifier(restrictRectModule, 'restrictRect')\nexport const restrictEdges = makeModifier(restrictEdgesModule, 'restrictEdges')\nexport const restrictSize = makeModifier(restrictSizeModule, 'restrictSize')\n","import BaseEvent from '../core/BaseEvent'\nimport * as pointerUtils from '../utils/pointerUtils'\n\n/** */\nexport default class PointerEvent<T extends string> extends BaseEvent {\n  type: T\n  originalEvent: Interact.PointerEventType | PointerEvent<any>\n  pointerId: number\n  pointerType: string\n  double: boolean\n  pageX: number\n  pageY: number\n  clientX: number\n  clientY: number\n  dt: number\n  eventable: any\n\n  /** */\n  constructor (\n    type: T,\n    pointer: Interact.PointerType | PointerEvent<any>,\n    event: Interact.PointerEventType | PointerEvent<any>,\n    eventTarget: Interact.EventTarget,\n    interaction: Interact.Interaction,\n    timeStamp: number,\n  ) {\n    super(interaction)\n    pointerUtils.pointerExtend(this, event)\n\n    if (event !== pointer) {\n      pointerUtils.pointerExtend(this, pointer)\n    }\n\n    this.timeStamp     = timeStamp\n    this.originalEvent = event\n    this.type          = type\n    this.pointerId     = pointerUtils.getPointerId(pointer)\n    this.pointerType   = pointerUtils.getPointerType(pointer)\n    this.target        = eventTarget\n    this.currentTarget = null\n\n    if (type === 'tap') {\n      const pointerIndex = interaction.getPointerIndex(pointer)\n      this.dt = this.timeStamp - interaction.pointers[pointerIndex].downTime\n\n      const interval = this.timeStamp - interaction.tapTime\n\n      this.double = !!(interaction.prevTap &&\n        interaction.prevTap.type !== 'doubletap' &&\n        interaction.prevTap.target === this.target &&\n        interval < 500)\n    }\n    else if (type === 'doubletap') {\n      this.dt = (pointer as PointerEvent<'tap'>).timeStamp - interaction.tapTime\n    }\n  }\n\n  _subtractOrigin ({ x: originX, y: originY }) {\n    this.pageX   -= originX\n    this.pageY   -= originY\n    this.clientX -= originX\n    this.clientY -= originY\n\n    return this\n  }\n\n  _addOrigin ({ x: originX, y: originY }) {\n    this.pageX   += originX\n    this.pageY   += originY\n    this.clientX += originX\n    this.clientY += originY\n\n    return this\n  }\n\n  /**\n   * Prevent the default behaviour of the original Event\n   */\n  preventDefault () {\n    this.originalEvent.preventDefault()\n  }\n}\n","import { PerActionDefaults } from '../core/defaultOptions'\nimport Eventable from '../core/Eventable'\nimport Interaction from '../core/Interaction'\nimport { Scope } from '../core/scope'\nimport * as utils from '../utils/index'\nimport PointerEvent from './PointerEvent'\n\nexport type EventTargetList = Array<{\n  node: Node\n  eventable: Eventable\n  props: { [key: string]: any }\n}>\n\nexport interface PointerEventOptions extends PerActionDefaults {\n  enabled?: undefined // not used\n  holdDuration?: number\n  ignoreFrom?: any\n  allowFrom?: any\n  origin?: Interact.Point | string | Interact.Element\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    pointerEvents: typeof pointerEvents\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    prevTap?: PointerEvent<string>\n    tapTime?: number\n  }\n}\n\ndeclare module '@interactjs/core/PointerInfo' {\n  interface PointerInfo {\n    hold?: {\n      duration: number\n      timeout: any\n    }\n  }\n}\n\ndeclare module '@interactjs/core/defaultOptions' {\n  interface ActionDefaults {\n    pointerEvents: Interact.Options\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface SignalArgs {\n    'pointerEvents:new': { pointerEvent: PointerEvent<any> }\n    'pointerEvents:fired': {\n      interaction: Interaction\n      pointer: Interact.PointerType | PointerEvent<any>\n      event: Interact.PointerEventType | PointerEvent<any>\n      eventTarget: Interact.EventTarget\n      pointerEvent: PointerEvent<any>\n      targets?: EventTargetList\n      type: string\n    }\n    'pointerEvents:collect-targets': {\n      interaction: Interaction\n      pointer: Interact.PointerType | PointerEvent<any>\n      event: Interact.PointerEventType | PointerEvent<any>\n      eventTarget: Interact.EventTarget\n      targets?: EventTargetList\n      type: string\n      path: Node[]\n      node: null\n    }\n  }\n}\n\nconst defaults: PointerEventOptions = {\n  holdDuration: 600,\n  ignoreFrom  : null,\n  allowFrom   : null,\n  origin      : { x: 0, y: 0 },\n}\n\nconst pointerEvents = {\n  id: 'pointer-events/base',\n  install,\n  listeners: {\n    'interactions:new': addInteractionProps,\n    'interactions:update-pointer': addHoldInfo,\n    'interactions:move': moveAndClearHold,\n    'interactions:down': (arg, scope) => {\n      downAndStartHold(arg, scope)\n      fire(arg, scope)\n    },\n    'interactions:up': (arg, scope) => {\n      clearHold(arg)\n      fire(arg, scope)\n      tapAfterUp(arg, scope)\n    },\n    'interactions:cancel': (arg, scope) => {\n      clearHold(arg)\n      fire(arg, scope)\n    },\n  },\n  PointerEvent,\n  fire,\n  collectEventTargets,\n  defaults,\n  types: [\n    'down',\n    'move',\n    'up',\n    'cancel',\n    'tap',\n    'doubletap',\n    'hold',\n  ],\n}\n\nfunction fire<T extends string> (\n  arg: {\n    pointer: Interact.PointerType | PointerEvent<any>\n    event: Interact.PointerEventType | PointerEvent<any>\n    eventTarget: Interact.EventTarget\n    interaction: Interaction\n    type: T\n    targets?: EventTargetList\n  },\n  scope: Interact.Scope,\n) {\n  const {\n    interaction,\n    pointer,\n    event,\n    eventTarget,\n    type,\n    targets = collectEventTargets(arg, scope),\n  } = arg\n\n  const pointerEvent = new PointerEvent(type, pointer, event, eventTarget, interaction, scope.now())\n\n  scope.fire('pointerEvents:new', { pointerEvent })\n\n  const signalArg = {\n    interaction,\n    pointer,\n    event,\n    eventTarget,\n    targets,\n    type,\n    pointerEvent,\n  }\n\n  for (let i = 0; i < targets.length; i++) {\n    const target = targets[i]\n\n    for (const prop in target.props || {}) {\n      (pointerEvent as any)[prop] = target.props[prop]\n    }\n\n    const origin = utils.getOriginXY(target.eventable, target.node)\n\n    pointerEvent._subtractOrigin(origin)\n    pointerEvent.eventable = target.eventable\n    pointerEvent.currentTarget = target.node\n\n    target.eventable.fire(pointerEvent)\n\n    pointerEvent._addOrigin(origin)\n\n    if (pointerEvent.immediatePropagationStopped ||\n        (pointerEvent.propagationStopped &&\n            (i + 1) < targets.length && targets[i + 1].node !== pointerEvent.currentTarget)) {\n      break\n    }\n  }\n\n  scope.fire('pointerEvents:fired', signalArg)\n\n  if (type === 'tap') {\n    // if pointerEvent should make a double tap, create and fire a doubletap\n    // PointerEvent and use that as the prevTap\n    const prevTap = pointerEvent.double\n      ? fire({\n        interaction,\n        pointer,\n        event,\n        eventTarget,\n        type: 'doubletap',\n      }, scope)\n      : pointerEvent\n\n    interaction.prevTap = prevTap\n    interaction.tapTime = prevTap.timeStamp\n  }\n\n  return pointerEvent\n}\n\nfunction collectEventTargets<T extends string> ({ interaction, pointer, event, eventTarget, type }: {\n  interaction: Interaction\n  pointer: Interact.PointerType | PointerEvent<any>\n  event: Interact.PointerEventType | PointerEvent<any>\n  eventTarget: Interact.EventTarget\n  type: T\n}, scope: Interact.Scope) {\n  const pointerIndex = interaction.getPointerIndex(pointer)\n  const pointerInfo = interaction.pointers[pointerIndex]\n\n  // do not fire a tap event if the pointer was moved before being lifted\n  if (type === 'tap' && (interaction.pointerWasMoved ||\n      // or if the pointerup target is different to the pointerdown target\n      !(pointerInfo && pointerInfo.downTarget === eventTarget))) {\n    return []\n  }\n\n  const path = utils.dom.getPath(eventTarget)\n  const signalArg = {\n    interaction,\n    pointer,\n    event,\n    eventTarget,\n    type,\n    path,\n    targets: [] as EventTargetList,\n    node: null,\n  }\n\n  for (const node of path) {\n    signalArg.node = node\n\n    scope.fire('pointerEvents:collect-targets', signalArg)\n  }\n\n  if (type === 'hold') {\n    signalArg.targets = signalArg.targets.filter(target =>\n      target.eventable.options.holdDuration === interaction.pointers[pointerIndex].hold.duration)\n  }\n\n  return signalArg.targets\n}\n\nfunction addInteractionProps ({ interaction }) {\n  interaction.prevTap = null   // the most recent tap event on this interaction\n  interaction.tapTime = 0     // time of the most recent tap event\n}\n\nfunction addHoldInfo ({ down, pointerInfo }: Interact.SignalArgs['interactions:update-pointer']) {\n  if (!down && pointerInfo.hold) {\n    return\n  }\n\n  pointerInfo.hold = { duration: Infinity, timeout: null }\n}\n\nfunction clearHold ({ interaction, pointerIndex }) {\n  if (interaction.pointers[pointerIndex].hold) {\n    clearTimeout(interaction.pointers[pointerIndex].hold.timeout)\n  }\n}\n\nfunction moveAndClearHold (\n  { interaction, pointer, event, eventTarget, duplicate }: Interact.SignalArgs['interactions:move'],\n  scope: Interact.Scope,\n) {\n  const pointerIndex = interaction.getPointerIndex(pointer)\n\n  if (!duplicate && (!interaction.pointerIsDown || interaction.pointerWasMoved)) {\n    if (interaction.pointerIsDown) {\n      clearTimeout(interaction.pointers[pointerIndex].hold.timeout)\n    }\n\n    fire({\n      interaction,\n      pointer,\n      event,\n      eventTarget: eventTarget as Interact.Element,\n      type: 'move',\n    }, scope)\n  }\n}\n\nfunction downAndStartHold ({ interaction, pointer, event, eventTarget, pointerIndex }: Interact.SignalArgs['interactions:down'], scope: Interact.Scope) {\n  const timer = interaction.pointers[pointerIndex].hold\n  const path = utils.dom.getPath(eventTarget)\n  const signalArg = {\n    interaction,\n    pointer,\n    event,\n    eventTarget,\n    type: 'hold',\n    targets: [] as EventTargetList,\n    path,\n    node: null,\n  }\n\n  for (const node of path) {\n    signalArg.node = node\n\n    scope.fire('pointerEvents:collect-targets', signalArg)\n  }\n\n  if (!signalArg.targets.length) { return }\n\n  let minDuration = Infinity\n\n  for (const target of signalArg.targets) {\n    const holdDuration = target.eventable.options.holdDuration\n\n    if (holdDuration < minDuration) {\n      minDuration = holdDuration\n    }\n  }\n\n  timer.duration = minDuration\n  timer.timeout = setTimeout(() => {\n    fire({\n      interaction,\n      eventTarget,\n      pointer,\n      event,\n      type: 'hold',\n    }, scope)\n  }, minDuration)\n}\n\nfunction tapAfterUp ({ interaction, pointer, event, eventTarget }: Interact.SignalArgs['interactions:up'], scope: Interact.Scope) {\n  if (!interaction.pointerWasMoved) {\n    fire({ interaction, eventTarget, pointer, event, type: 'tap' }, scope)\n  }\n}\n\nfunction install (scope: Scope) {\n  scope.pointerEvents = pointerEvents\n  scope.defaults.actions.pointerEvents = pointerEvents.defaults\n}\n\nexport default pointerEvents\n","import basePlugin from './base'\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    holdIntervalHandle?: any\n  }\n}\n\ndeclare module '@interactjs/pointer-events/base' {\n  interface PointerEventOptions {\n    holdRepeatInterval?: number\n  }\n}\n\nfunction install (scope: Interact.Scope) {\n  scope.usePlugin(basePlugin)\n\n  const {\n    pointerEvents,\n  } = scope\n\n  // don't repeat by default\n  pointerEvents.defaults.holdRepeatInterval = 0\n  pointerEvents.types.push('holdrepeat')\n}\n\nfunction onNew ({ pointerEvent }) {\n  if (pointerEvent.type !== 'hold') { return }\n\n  pointerEvent.count = (pointerEvent.count || 0) + 1\n}\n\nfunction onFired (\n  { interaction, pointerEvent, eventTarget, targets }: Interact.SignalArgs['pointerEvents:fired'],\n  scope: Interact.Scope,\n) {\n  if (pointerEvent.type !== 'hold' || !targets.length) { return }\n\n  // get the repeat interval from the first eventable\n  const interval = targets[0].eventable.options.holdRepeatInterval\n\n  // don't repeat if the interval is 0 or less\n  if (interval <= 0) { return }\n\n  // set a timeout to fire the holdrepeat event\n  interaction.holdIntervalHandle = setTimeout(() => {\n    scope.pointerEvents.fire({\n      interaction,\n      eventTarget,\n      type: 'hold',\n      pointer: pointerEvent,\n      event: pointerEvent,\n    }, scope)\n  }, interval)\n}\n\nfunction endHoldRepeat ({ interaction }) {\n  // set the interaction's holdStopTime property\n  // to stop further holdRepeat events\n  if (interaction.holdIntervalHandle) {\n    clearInterval(interaction.holdIntervalHandle)\n    interaction.holdIntervalHandle = null\n  }\n}\n\nexport default {\n  id: 'pointer-events/holdRepeat',\n  install,\n  listeners: ['move', 'up', 'cancel', 'endall'].reduce(\n    (acc, enderTypes) => {\n      acc[`pointerEvents:${enderTypes}`] = endHoldRepeat\n      return acc\n    },\n    {\n      'pointerEvents:new': onNew,\n      'pointerEvents:fired': onFired,\n    },\n  ),\n} as Interact.Plugin\n","import { Scope } from '../core/scope'\nimport { merge } from '../utils/arr'\nimport extend from '../utils/extend'\n\ntype Interactable = import ('@interactjs/core/Interactable').default\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    pointerEvents: typeof pointerEventsMethod\n    __backCompatOption: (optionName: string, newValue: any) => any\n  }\n}\n\nfunction install (scope: Scope) {\n  const {\n    pointerEvents,\n    actions,\n    Interactable,\n  } = scope\n\n  merge(actions.eventTypes, pointerEvents.types)\n\n  Interactable.prototype.pointerEvents = pointerEventsMethod\n\n  const __backCompatOption = Interactable.prototype._backCompatOption\n\n  Interactable.prototype._backCompatOption = function (optionName, newValue) {\n    const ret = __backCompatOption.call(this, optionName, newValue)\n\n    if (ret === this) {\n      this.events.options[optionName] = newValue\n    }\n\n    return ret\n  }\n}\n\nfunction pointerEventsMethod (this: Interact.Interactable, options: any) {\n  extend(this.events.options, options)\n\n  return this\n}\n\nconst plugin: Interact.Plugin = {\n  id: 'pointer-events/interactableTargets',\n  install,\n  listeners: {\n    'pointerEvents:collect-targets': ({\n      targets,\n      node,\n      type,\n      eventTarget,\n    }, scope) => {\n      scope.interactables.forEachMatch(node, (interactable: Interactable) => {\n        const eventable = interactable.events\n        const options = eventable.options\n\n        if (\n          eventable.types[type] &&\n          eventable.types[type].length &&\n        interactable.testIgnoreAllow(options, node, eventTarget)) {\n          targets.push({\n            node,\n            eventable,\n            props: { interactable },\n          })\n        }\n      })\n    },\n\n    'interactable:new': ({ interactable }) => {\n      interactable.events.getRect = function (element: Interact.Element) {\n        return interactable.getRect(element)\n      }\n    },\n\n    'interactable:set': ({ interactable, options }, scope) => {\n      extend(interactable.events.options, scope.pointerEvents.defaults)\n      extend(interactable.events.options, options.pointerEvents || {})\n    },\n  },\n}\n\nexport default plugin\n","import * as pointerEvents from './base'\nimport holdRepeat from './holdRepeat'\nimport interactableTargets from './interactableTargets'\n\nfunction install (scope) {\n  scope.usePlugin(pointerEvents)\n  scope.usePlugin(holdRepeat)\n  scope.usePlugin(interactableTargets)\n}\n\nconst id = 'pointer-events'\n\nexport { id, pointerEvents, holdRepeat, interactableTargets, install }\n","import Interactable from '../core/Interactable'\nimport { EventPhase } from '../core/InteractEvent'\nimport { ActionProps, Interaction } from '../core/Interaction'\nimport { Scope } from '../core/scope'\nimport { arr, extend, is, pointer as pointerUtils, rect as rectUtils, win } from '../utils/index'\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    reflow: (action: ActionProps) => ReturnType<typeof reflow>\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    _reflowPromise: Promise<void>\n    _reflowResolve: () => void\n  }\n}\n\ndeclare module '@interactjs/core/InteractEvent' {\n  // eslint-disable-next-line no-shadow\n  enum EventPhase {\n    Reflow = 'reflow',\n  }\n}\n\n(EventPhase as any).Reflow = 'reflow'\n\nexport function install (scope: Scope) {\n  const {\n    actions,\n    /** @lends Interactable */\n    // eslint-disable-next-line no-shadow\n    Interactable,\n  } = scope\n\n  // add action reflow event types\n  for (const actionName of actions.names) {\n    actions.eventTypes.push(`${actionName}reflow`)\n  }\n\n  /**\n   * ```js\n   * const interactable = interact(target)\n   * const drag = { name: drag, axis: 'x' }\n   * const resize = { name: resize, edges: { left: true, bottom: true }\n   *\n   * interactable.reflow(drag)\n   * interactable.reflow(resize)\n   * ```\n   *\n   * Start an action sequence to re-apply modifiers, check drops, etc.\n   *\n   * @param { Object } action The action to begin\n   * @param { string } action.name The name of the action\n   * @returns { Promise } A promise that resolves to the `Interactable` when actions on all targets have ended\n   */\n  Interactable.prototype.reflow = function (action) {\n    return reflow(this, action, scope)\n  }\n}\n\nfunction reflow (interactable: Interactable, action: ActionProps, scope: Scope): Promise<Interactable> {\n  const elements = (is.string(interactable.target)\n    ? arr.from(interactable._context.querySelectorAll(interactable.target))\n    : [interactable.target]) as Interact.Element[]\n\n  // tslint:disable-next-line variable-name\n  const Promise = (win.window as any).Promise\n  const promises: Array<Promise<null>> | null = Promise ? [] : null\n\n  for (const element of elements) {\n    const rect = interactable.getRect(element as HTMLElement | SVGElement)\n\n    if (!rect) { break }\n\n    const runningInteraction = arr.find(\n      scope.interactions.list,\n      (interaction: Interaction) => {\n        return interaction.interacting() &&\n          interaction.interactable === interactable &&\n          interaction.element === element &&\n          interaction.prepared.name === action.name\n      })\n    let reflowPromise: Promise<null>\n\n    if (runningInteraction) {\n      runningInteraction.move()\n\n      if (promises) {\n        reflowPromise = runningInteraction._reflowPromise || new Promise((resolve: any) => {\n          runningInteraction._reflowResolve = resolve\n        })\n      }\n    }\n    else {\n      const xywh = rectUtils.tlbrToXywh(rect)\n      const coords = {\n        page     : { x: xywh.x, y: xywh.y },\n        client   : { x: xywh.x, y: xywh.y },\n        timeStamp: scope.now(),\n      }\n\n      const event = pointerUtils.coordsToEvent(coords)\n      reflowPromise = startReflow(scope, interactable, element, action, event)\n    }\n\n    if (promises) {\n      promises.push(reflowPromise)\n    }\n  }\n\n  return promises && Promise.all(promises).then(() => interactable)\n}\n\nfunction startReflow (scope: Scope, interactable: Interactable, element: Interact.Element, action: ActionProps, event: any) {\n  const interaction = scope.interactions.new({ pointerType: 'reflow' })\n  const signalArg = {\n    interaction,\n    event,\n    pointer: event,\n    eventTarget: element,\n    phase: EventPhase.Reflow,\n  }\n\n  interaction.interactable = interactable\n  interaction.element = element\n  interaction.prepared = extend({}, action)\n  interaction.prevEvent = event\n  interaction.updatePointer(event, event, element, true)\n\n  interaction._doPhase(signalArg)\n\n  const reflowPromise = (win.window as unknown as any).Promise\n    ? new (win.window as unknown as any).Promise((resolve: any) => {\n      interaction._reflowResolve = resolve\n    })\n    : null\n\n  interaction._reflowPromise = reflowPromise\n  interaction.start(action, interactable, element)\n\n  if (interaction._interacting) {\n    interaction.move(signalArg)\n    interaction.end(event)\n  }\n  else {\n    interaction.stop()\n  }\n\n  interaction.removePointer(event, event)\n  interaction.pointerIsDown = false\n\n  return reflowPromise\n}\n\nexport default {\n  id: 'reflow',\n  install,\n  listeners: {\n    // remove completed reflow interactions\n    'interactions:stop': ({ interaction }, scope) => {\n      if (interaction.pointerType === EventPhase.Reflow) {\n        if (interaction._reflowResolve) {\n          interaction._reflowResolve()\n        }\n\n        arr.remove(scope.interactions.list, interaction)\n      }\n    },\n  },\n} as Interact.Plugin\n","/** @module interact */\n\nimport { Options } from '../core/defaultOptions'\nimport Interactable from '../core/Interactable'\nimport { Scope } from '../core/scope'\nimport browser from '../utils/browser'\nimport events from '../utils/events'\nimport * as utils from '../utils/index'\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    interact: InteractStatic\n  }\n}\n\nexport interface InteractStatic {\n  (target: Interact.Target, options?: Options): Interactable\n  on: typeof on\n  pointerMoveTolerance: typeof pointerMoveTolerance\n  stop: typeof stop\n  supportsPointerEvent: typeof supportsPointerEvent\n  supportsTouch: typeof supportsTouch\n  debug: typeof debug\n  off: typeof off\n  isSet: typeof isSet\n  use: typeof use\n  getPointerAverage: typeof utils.pointer.pointerAverage\n  getTouchBBox: typeof utils.pointer.touchBBox\n  getTouchDistance: typeof utils.pointer.touchDistance\n  getTouchAngle: typeof utils.pointer.touchAngle\n  getElementRect: typeof utils.dom.getElementRect\n  getElementClientRect: typeof utils.dom.getElementClientRect\n  matchesSelector: typeof utils.dom.matchesSelector\n  closest: typeof utils.dom.closest\n  addDocument: typeof scope.addDocument\n  removeDocument: typeof scope.removeDocument\n  version: string\n}\n\nconst globalEvents: any = {}\nconst scope = new Scope()\n\n/**\n * ```js\n * interact('#draggable').draggable(true)\n *\n * var rectables = interact('rect')\n * rectables\n *   .gesturable(true)\n *   .on('gesturemove', function (event) {\n *       // ...\n *   })\n * ```\n *\n * The methods of this variable can be used to set elements as interactables\n * and also to change various default settings.\n *\n * Calling it as a function and passing an element or a valid CSS selector\n * string returns an Interactable object which has various methods to configure\n * it.\n *\n * @global\n *\n * @param {Element | string} target The HTML or SVG Element to interact with\n * or CSS selector\n * @return {Interactable}\n */\nexport const interact: InteractStatic = function interact (target: Interact.Target, options?: any) {\n  let interactable = scope.interactables.get(target, options)\n\n  if (!interactable) {\n    interactable = scope.interactables.new(target, options)\n    interactable.events.global = globalEvents\n  }\n\n  return interactable\n} as InteractStatic\n\n/**\n * Use a plugin\n *\n * @alias module:interact.use\n *\n * @param {Object} plugin\n * @param {function} plugin.install\n * @return {interact}\n */\ninteract.use = use\nfunction use (plugin: Interact.Plugin, options?: { [key: string]: any }) {\n  scope.usePlugin(plugin, options)\n\n  return interact\n}\n\n/**\n * Check if an element or selector has been set with the {@link interact}\n * function\n *\n * @alias module:interact.isSet\n *\n * @param {Element} element The Element being searched for\n * @return {boolean} Indicates if the element or CSS selector was previously\n * passed to interact\n */\ninteract.isSet = isSet\nfunction isSet (target: Interact.Element, options?: any) {\n  return !!scope.interactables.get(target, options && options.context)\n}\n\n/**\n * Add a global listener for an InteractEvent or adds a DOM event to `document`\n *\n * @alias module:interact.on\n *\n * @param {string | array | object} type The types of events to listen for\n * @param {function} listener The function event (s)\n * @param {object | boolean} [options] object or useCapture flag for\n * addEventListener\n * @return {object} interact\n */\ninteract.on = on\nfunction on (type: string | Interact.EventTypes, listener: Interact.ListenersArg, options?) {\n  if (utils.is.string(type) && type.search(' ') !== -1) {\n    type = type.trim().split(/ +/)\n  }\n\n  if (utils.is.array(type)) {\n    for (const eventType of (type as any[])) {\n      interact.on(eventType, listener, options)\n    }\n\n    return interact\n  }\n\n  if (utils.is.object(type)) {\n    for (const prop in type) {\n      interact.on(prop, (type as Interact.EventTypes)[prop], listener)\n    }\n\n    return interact\n  }\n\n  // if it is an InteractEvent type, add listener to globalEvents\n  if (utils.arr.contains(scope.actions.eventTypes, type)) {\n    // if this type of event was never bound\n    if (!globalEvents[type]) {\n      globalEvents[type] = [listener]\n    }\n    else {\n      globalEvents[type].push(listener)\n    }\n  }\n  // If non InteractEvent type, addEventListener to document\n  else {\n    events.add(scope.document, type, listener as Interact.Listener, { options })\n  }\n\n  return interact\n}\n\n/**\n * Removes a global InteractEvent listener or DOM event from `document`\n *\n * @alias module:interact.off\n *\n * @param {string | array | object} type The types of events that were listened\n * for\n * @param {function} listener The listener function to be removed\n * @param {object | boolean} options [options] object or useCapture flag for\n * removeEventListener\n * @return {object} interact\n */\ninteract.off = off\nfunction off (type, listener, options) {\n  if (utils.is.string(type) && type.search(' ') !== -1) {\n    type = type.trim().split(/ +/)\n  }\n\n  if (utils.is.array(type)) {\n    for (const eventType of type) {\n      interact.off(eventType, listener, options)\n    }\n\n    return interact\n  }\n\n  if (utils.is.object(type)) {\n    for (const prop in type) {\n      interact.off(prop, type[prop], listener)\n    }\n\n    return interact\n  }\n\n  if (!utils.arr.contains(scope.actions.eventTypes, type)) {\n    events.remove(scope.document, type, listener, options)\n  }\n  else {\n    let index\n\n    if (type in globalEvents &&\n        (index = globalEvents[type].indexOf(listener)) !== -1) {\n      globalEvents[type].splice(index, 1)\n    }\n  }\n\n  return interact\n}\n\ninteract.debug = debug\nfunction debug () {\n  return scope\n}\n\n// expose the functions used to calculate multi-touch properties\ninteract.getPointerAverage  = utils.pointer.pointerAverage\ninteract.getTouchBBox       = utils.pointer.touchBBox\ninteract.getTouchDistance   = utils.pointer.touchDistance\ninteract.getTouchAngle      = utils.pointer.touchAngle\n\ninteract.getElementRect       = utils.dom.getElementRect\ninteract.getElementClientRect = utils.dom.getElementClientRect\ninteract.matchesSelector      = utils.dom.matchesSelector\ninteract.closest              = utils.dom.closest\n\n/**\n * @alias module:interact.supportsTouch\n *\n * @return {boolean} Whether or not the browser supports touch input\n */\ninteract.supportsTouch = supportsTouch\nfunction supportsTouch () {\n  return browser.supportsTouch\n}\n\n/**\n * @alias module:interact.supportsPointerEvent\n *\n * @return {boolean} Whether or not the browser supports PointerEvents\n */\ninteract.supportsPointerEvent = supportsPointerEvent\nfunction supportsPointerEvent () {\n  return browser.supportsPointerEvent\n}\n\n/**\n * Cancels all interactions (end events are not fired)\n *\n * @alias module:interact.stop\n *\n * @return {object} interact\n */\ninteract.stop = stop\nfunction stop () {\n  for (const interaction of scope.interactions.list) {\n    interaction.stop()\n  }\n\n  return interact\n}\n\n/**\n * Returns or sets the distance the pointer must be moved before an action\n * sequence occurs. This also affects tolerance for tap events.\n *\n * @alias module:interact.pointerMoveTolerance\n *\n * @param {number} [newValue] The movement from the start position must be greater than this value\n * @return {interact | number}\n */\ninteract.pointerMoveTolerance = pointerMoveTolerance\nfunction pointerMoveTolerance (newValue) {\n  if (utils.is.number(newValue)) {\n    scope.interactions.pointerMoveTolerance = newValue\n\n    return interact\n  }\n\n  return scope.interactions.pointerMoveTolerance\n}\n\nscope.addListeners({\n  'interactable:unset': ({ interactable }) => {\n    scope.interactables.list.splice(scope.interactables.list.indexOf(interactable), 1)\n\n    // Stop related interactions when an Interactable is unset\n    for (const interaction of scope.interactions.list) {\n      if (interaction.interactable === interactable && interaction.interacting() && !interaction._ending) {\n        interaction.stop()\n      }\n    }\n  },\n})\n\ninteract.addDocument = (doc, options) => scope.addDocument(doc, options)\ninteract.removeDocument = doc => scope.removeDocument(doc)\n\nscope.interact = interact\n\nexport { scope }\nexport default interact\n","import * as actions from '../actions/index'\nimport autoScroll from '../auto-scroll/index'\nimport * as autoStart from '../auto-start/index'\nimport interactablePreventDefault from '../core/interactablePreventDefault'\nimport devTools from '../dev-tools/index'\nimport inertia from '../inertia/index'\nimport modifiersBase from '../modifiers/base'\nimport * as modifiers from '../modifiers/index'\nimport * as pointerEvents from '../pointer-events/index'\nimport reflow from '../reflow/index'\nimport interact, { scope } from './interact'\n\nexport function init (window: Window) {\n  scope.init(window)\n\n  interact.use(interactablePreventDefault)\n\n  // pointerEvents\n  interact.use(pointerEvents)\n\n  // inertia\n  interact.use(inertia)\n\n  // snap, resize, etc.\n  interact.use(modifiersBase)\n\n  // autoStart, hold\n  interact.use(autoStart)\n\n  // drag and drop, resize, gesture\n  interact.use(actions)\n\n  // for backwrads compatibility\n  for (const type in modifiers) {\n    const { _defaults, _methods } = modifiers[type]\n\n    _defaults._methods = _methods\n    scope.defaults.perAction[type] = _defaults\n  }\n\n  // autoScroll\n  interact.use(autoScroll)\n\n  // reflow\n  interact.use(reflow)\n\n  // eslint-disable-next-line no-undef\n  if (process.env.NODE_ENV !== 'production') {\n    interact.use(devTools)\n  }\n\n  return interact\n}\n\n// eslint-disable-next-line no-undef\ninteract.version = process.env.npm_package_version\n\nexport default interact\nexport {\n  interact,\n  actions,\n  autoScroll,\n  interactablePreventDefault,\n  inertia,\n  modifiersBase as modifiers,\n  pointerEvents,\n  reflow,\n}\n","/// <reference path=\"./types.d.ts\" />\n","function createGrid (grid: (Interact.Rect | Interact.Point) & { range?: number, limits: Interact.Rect, offset: Interact.Point }) {\n  const coordFields = [\n    ['x', 'y'],\n    ['left', 'top'],\n    ['right', 'bottom'],\n    ['width', 'height'],\n  ].filter(([xField, yField]) => xField in grid || yField in grid)\n\n  const gridFunc = function snapGrid (x, y) {\n    const {\n      range,\n      limits = {\n        left  : -Infinity,\n        right :  Infinity,\n        top   : -Infinity,\n        bottom:  Infinity,\n      },\n      offset = { x: 0, y: 0 },\n    } = grid\n\n    const result = { range }\n\n    for (const [xField, yField] of coordFields) {\n      const gridx = Math.round((x - offset.x) / grid[xField])\n      const gridy = Math.round((y - offset.y) / grid[yField])\n\n      result[xField] = Math.max(limits.left, Math.min(limits.right, gridx * grid[xField] + offset.x))\n      result[yField] = Math.max(limits.top, Math.min(limits.bottom, gridy * grid[yField] + offset.y))\n    }\n\n    return result\n  }\n\n  gridFunc._isSnapGrid = true\n  gridFunc.grid = grid\n  gridFunc.coordFields = coordFields\n\n  return gridFunc\n}\n\nexport default createGrid\n","import grid from './grid'\n\nexport { grid }\n","import interact, { init as initInteract } from '../interact/index'\nimport { Modifier } from '../modifiers/base'\nimport * as modifiers from '../modifiers/index'\nimport '../types/index'\nimport extend from '../utils/extend'\nimport * as snappers from '../utils/snappers/index'\n\ndeclare module '@interactjs/interact/interact' {\n  interface InteractStatic {\n    modifiers?: typeof modifiers & { [key: string]: (options?) => Modifier }\n    snappers?: typeof snappers & { [key: string]: any }\n    createSnapGrid?: typeof snappers.grid\n  }\n}\n\nif (typeof window === 'object' && !!window) {\n  init(window)\n}\n\nexport function init (win: Window) {\n  initInteract(win)\n\n  return interact.use({\n    id: 'interactjs',\n    install () {\n      interact.modifiers = extend({}, modifiers)\n      interact.snappers = snappers\n      interact.createSnapGrid = interact.snappers.grid\n    },\n  })\n}\n\nexport default interact\n","import interact, { init } from '@interactjs/interactjs/index'\nexport * from '@interactjs/interactjs/index'\n\nif (typeof module === 'object' && !!module) {\n  module.exports = interact\n}\n\n(interact as any).default = interact // tslint:disable-line no-string-literal\n;(interact as any).init = init // tslint:disable-line no-string-literal\n\nexport default interact\n","\nreturn _$index_66;\n\n});\n"]}